{"version":3,"sources":["src/screens/UserProfile/icons/defaultAvatar.png","src/utility/Authentication.js","src/store/AuthContext.js","src/screens/LogInScreen.js","src/screens/SignUpScreen.js","src/utility/APIConnection.js","src/screens/InstructorScreens/DashBoardStackNavigator/CourseEditScreen.js","src/screens/InstructorScreens/HomeStackNavigator/SearchScreenTest.js","src/screens/InstructorScreens/HomeStackNavigator/HomeStackNavigatorInstructor.js","src/component/CourseGridCard.js","src/screens/InstructorScreens/DashBoardStackNavigator/InstructorDashboard.js","src/component/ModuleEditComponent.js","src/component/ModuleEditComponentContainer.js","src/screens/InstructorScreens/DashBoardStackNavigator/EditModuleScreen.js","src/screens/InstructorScreens/DashBoardStackNavigator/EditCourseAndModuleTabScreen.js","src/screens/InstructorScreens/DashBoardStackNavigator/CreateCourse.js","src/component/ModuleView.js","src/screens/InstructorScreens/DashBoardStackNavigator/InstructorCourseScreen.js","src/component/CreateComponent.js","src/component/CreateText.js","src/screens/InstructorScreens/DashBoardStackNavigator/CreateContentScreen.js","src/component/UnitCardInstructor.js","src/screens/InstructorScreens/DashBoardStackNavigator/LessonCreationScreen.js","src/constants/themes.js","src/component/QuizEditComponent.js","src/screens/InstructorScreens/DashBoardStackNavigator/InstructorEditQuiz.js","src/screens/InstructorScreens/DashBoardStackNavigator/TabsInstructorCourseEdit.js","src/screens/InstructorScreens/DashBoardStackNavigator/DashBoardStackNavigatorInstructor.js","src/component/ui/IconButton.js","src/screens/UserProfile/EditProfile.js","src/screens/InstructorScreens/ProfileStackNavigator/InstructorProfile.js","src/screens/InstructorScreens/ProfileStackNavigator/ProfileStackNavigatorInstructor.js","src/screens/InstructorScreens/SettingsStackNavigator/InstructorSetting.js","src/screens/changeAuth/ChangePassword.js","src/screens/changeAuth/ChangeEmail.js","src/screens/InstructorScreens/SettingsStackNavigator/SettingStackNavigatorInstructor.js","src/component/Welcome.js","src/screens/InstructorScreens/WelcomeStackNavigation.js/WelcomeStackNavigationInstructor.js","src/screens/InstructorScreens/InstructorMainScreenTabs.js","src/component/StudentCourseGridCard.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentDashboard.js","src/component/QuizComponent.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentQuizView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentUnitContentView.js","src/screens/StudentScreens/DashBoardStackNavigator/TabsStudentUnitView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentLessonView.js","src/component/StudentModuleView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentCourseView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentCourseDescription.js","src/screens/StudentScreens/DashBoardStackNavigator/DashBoardStackNavigatorStudent.js","src/screens/StudentScreens/HomeStackNavigator/StudentHome.js","src/screens/StudentScreens/HomeStackNavigator/HomeStackNavigatorStudent.js","src/screens/StudentScreens/ProfileStackNavigator/StudentProfile.js","src/screens/StudentScreens/ProfileStackNavigator/ProfileStackNavigatorStudent.js","src/screens/StudentScreens/SettingsStackNavigator/StudentSetting.js","src/screens/StudentScreens/SettingsStackNavigator/SettingStackNavigatorStudent.js","src/screens/StudentScreens/WelcomeStudentStack.js/WelcomeStackNavigationInstructor.js","src/screens/StudentScreens/StudentMainScreenTabs.js","App.js","src/screens/StudentScreens/DashBoardStackNavigator/icons/appProfile.png"],"names":["module","exports","url","Authentication","user_email","user_password","a","async","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","AsyncStorage","setItem","user_name","user_type","u","p","e","status","message","AuthContext","createContext","token","user_id","isAuthenticated","authenticate","userid","logout","AuthContextProvider","children","useState","authToken","setAuthToken","authUserid","setAuthUserid","authUserType","setAuthUserType","value","Platform","OS","removeItem","Provider","AnimatedView","animated","View","LogInScreen","navigation","setEmail","setPassword","authCtx","useContext","flip","set","logoAnim","useSpring","to","width","height","borderRadius","from","backgroundColor","reset","reverse","delay","onRest","style","styles","container","top","blueWave","Text","title","login","email","TextInput","input","label","mode","left","Icon","name","onChangeText","secureTextEntry","TouchableOpacity","onPress","api","alert","signIn","getItem","user","parse","clear","catch","reason","loginBttn","loginText","signup","divider","navigate","firstSgnUpBttn","signupText","StyleSheet","create","flex","alignItems","alignSelf","textAlign","fontSize","fontWeight","color","marginTop","borderBottomEndRadius","borderBottomStartRadius","justifyContent","position","marginBottom","logoShape","bottom","pwHolder","paddingVertical","paddingHorizontal","borderColor","borderWidth","forgotText","textDecorationLine","SignUpScreen","selectedIndex","setSelectedIndex","check1","setCheck1","isSecureEntry","setSecureEntry","isSecureEntry2","setSecureEntry2","setName","setUserType","setMessage","confirmPW","setConfirmPW","ScrollView","marginVertical","form","outlineColor","newText","right","prev","HelperText","type","visible","length","buttons","textStyle","selectedTextStyle","selectedButtonStyle","checkbox","checked","checkedColor","uncheckedColor","Button","includes","match","payload","res","jsonRes","err","contentStyle","disabled","marginLeft","marginRight","flexDirection","APIConnection","this","unit_id","Accept","checkUnauthorized","error","lesson_id","module_id","class_id","classID","class_name","class_descrip","unitID","newName","unit_name","unit_index","ModuleID","lesson_name","lesson_descrip","lesson_index","instructor_id","userType","newBio","newPic","user_pp","user_bio","newEmail","currentPassword","currentEmail","newPassword","lessonID","quizID","quizQuestion","quizAnswers","quiz_id","quizdata_question","quizdata_answers","quiz_name","quizDataID","quizdata_id","courseID","moduleID","content","content2","accept","unit_content","unit_content_type","keyword","courseName","courseDesc","lessonName","lessonId","less_description","less_index","mod_id","newModuleName","newModuleDescription","module_name","module_descrip","moduleName","description","CourseEditScreen","route","params","className","setClassName","courseDescription","setCourseDescription","apiConnection","isFocused","useIsFocused","useEffect","getClassByID","result","SafeAreaView","placeholderName","returnKeyType","defaultValue","text","placeholderDesc","multiline","bottomContainer","addBttn","editCourseForInstructor","goBack","addText","inputContainerStyle","margin","inputStyle","categoryStyle","paddingTop","saveButton","paddingBottom","gridItem","elevation","shadowColor","shadowOpacity","shadowOffset","shadowRadius","overflow","boxes","searchHolder","searchBttn","searchText","createNativeStackNavigator","CourseGridCard","onDelete","Pressable","android_ripple","pressed","button","buttonPressed","innerContainer","buttonContainer","Alert","cancelable","size","opacity","padding","InstructorDashboard","setData","deleteClass","useLayoutEffect","getClasses","FlatList","keyExtractor","item","renderItem","itemData","numColumns","addClass","screen","ModuleEditComponent","allData","lessonData","ModuleName","backgroundCard","row","textInput","placeholder","index","findIndex","newAllData","changeType","updateModuleNameToParent","filter","deleteModule","flexWrap","i","push","lessons","buttonLabel","getLessonsView","postLesson","addNewLesson","marginHorizontal","box","minWidth","selected","selectedLabel","ModuleEditComponentContainer","stateData","setStateData","useTransition","x","y","enter","map","key","EditModuleScreen","finalData","setFinalData","isLoading","setIsLoading","newModIndex","setnewModIndex","React","updateState","forceUpdate","useCallback","processAPILesson","lessonArr","newLesson","processAPIModuleData","returnData","newModule","getAllModulesForClass","element","getLessonsInModule","json2","fetchAPI","ActivityIndicator","deleteList","tobeDeleted","j","Promise","all","editModule","createModule","deleteModuleID","onSave","titleStyle","buttonStyle","containerStyle","fab","icon","newEmptyModule","newStateData","addNewModule","contentView","buttonsContainer","subHeader","Tab","createMaterialTopTabNavigator","EditCourseAndModuleTabScreen","Navigator","Screen","component","initialParams","CreateCourse","courseText","setCourseText","setCourseDesc","onSaved","postClass","ms","resolve","setTimeout","placeholderText","ModuleView","onClickFunction","layoutHeight","setLayoutHeight","isExpanded","classes","activeOpacity","header","headerText","Module_Title","FontAwesome5","transform","rotate","Lessons","titleText","separator","paddingLeft","paddingRight","InstructorCourseView","forEach","Module_ID","UIManager","setLayoutAnimationEnabledExperimental","courseTitleBackground","lessContainer","setMultiSelect","multiSelect","LayoutAnimation","configureNext","Presets","spring","array","updateLayout","editButton","menu","lesson","lessonCompletion","alignContent","lessonNum","searchIcon","homeIcon","settingIcon","profileIcon","textHolder","Dimensions","get","Content","props","selectable","TextContent","CreateContent","unitName","setText","textItems","setTextItems","useRef","unitNameEntry","setUnitNameEntry","playing","modalVisible1","setModalVisible1","modalVisible2","setModalVisible2","modalVisible3","setModalVisible3","link","setLink","linkItems","setLinkItems","setLinkItemsAPI","setVideoDisplay","YouTubeGetID","undefined","split","getUnitByID","unitjson","getUnitContent","videolink","linkInput","controls","play","videoId","webViewStyle","Modal","animationType","transparent","onRequestClose","TouchableWithoutFeedback","modalView","centeredView","modalText","KeyboardAvoidingView","behavior","buttonClose","handleLinks","textInput2","editable","handleText","onPressOut","bottomModal","contentContainerStyle","scroll","editUnitName","editUnitContent","video","buttonOpen","addURL","addQuiz","UnitEditCard","cardContainer","numberOfLines","Actions","LessonCreation","newLessonName","setLessonName","myData","setMyData","setLessonData","deleteLesson","refreshPage","getSectionsPerLesson","onUnitPress","deleteUnit","getSingleLessonForLessonCreation","maxLength","LessonID","lessDescription","lessIndex","modID","putLessonNameForLessonCreation","changeName","nestedScrollEnabled","ListEmptyComponent","addButton","addUnitForLessonCreation","addTextButton","sectionText","deleteButton","footer","COLORS","QuizEditComponent","invalidChars","correct_option","quizData","setQuizData","setQuizID","currentIndex","setCurrentIndex","setDeleteList","correctAnswer","setCorrectAnswer","dummyState","setDummyState","iQuizData","setIQuizData","processJSON","quizDataResponse","answers","replace","answersJson","choices","answer","onLeftArrowPressed","onRightArrowPressed","valid","allStringInQuestion","i2","question","quizdata_answersTemporary","string1","editQuizData","createQuizData","deletedQuestionID","deleteQuizData","splice","onCreate","newQuizData","getUnitQuizContent","createNewQuizForUnit","getQuizData","fetchMyAPI","StatusBar","barStyle","arrowButton","arrowButtonContainer","questionInput","newQuestion","updateQuizQuestionToParent","answerInput","newAnswer","updateQuizAnswerToParent","RadioButton","updateCorrectAnswer","userInfo","caption","lineHeight","avatarShadow","bioBox","bioText","list","InstructorQuizEdit","quizJSONData","setQuizJSONData","TabInstructorCourseEdit","Stack","DashBoardStackNavigatorInstructor","screenOptions","headerShown","options","headerTitleAlign","IconButton","Ionicons","EditProfile","setVisible","hideDialog","getUserForProfilePage","setNewName","setNewBio","edit","activeOutlineColor","selectionColor","autoCorrect","submitButtom","editUserProfile","submitText","Portal","Dialog","onDismiss","Title","dialogButton","avatarButton","InstructorProfile","classData","setClassData","mounted","current","rounded","source","require","userAbout","FAB","userClass","ProfileStackNavigatorInstructor","headerRight","tintColor","InstructorSetting","actions","Divider","ChangePassword","currentPW","getCurrentPW","newPW","getNewPW","getConfirmPW","isSecureEntry3","setSecureEntry3","auth","inputField","changePassword","onSubmit","ChangeEmail","mailFormat","currPW","getCurrPW","getNewEmail","checkEmail","changeEmail","SettingStackNavigatorInstructor","AnimatedText","Welcome","textAnim","animationDuration","teachAnim","colors","white","learnAnim","studyAnim","baseText","fontFamily","WelcomeStackNavigatorInstructor","createBottomTabNavigator","InstructorMainScreenTabs","initialRouteName","tabBarActiveTintColor","tabBarIcon","focused","MaterialCommunityIcons","StudentCourseGridCard","refresh","state","setState","dropClass","getClassProgress","arr","AllUnits","len","c","completed","toFixed","Cover","resizeMode","uri","adjustsFontSizeToFit","Badge","progress","StudentDashboard","classId","QuizComponent","allQuestions","setAllQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentOptionSelected","setCurrentOptionSelected","correctOption","setCorrectOption","isOptionsDisabled","setIsOptionsDisabled","score","setScore","showNextButton","setShowNextButton","showScoreModal","setShowScoreModal","handleNext","Animated","timing","toValue","duration","useNativeDriver","start","Value","progressAnim","interpolate","inputRange","outputRange","renderQuestion","option","selectedOption","validateAnswer","iconStyle","renderOptions","postProgress","StudentQuizView","StudentUnitContentView","videoContent","setVideoContent","unitText","setUnitText","newVideoData","contentString","test","Paragraph","TabsStudentUnitView","StudentLessonView","instID","LessonData","getUnitProgress","fetchData","entireView","lessonNameContainer","it","unitTouch","unit","StudentModuleView","instructorID","setProgress","modProg","setModProg","mProg","getModuleProgress","lProg","getLessonProgress","lessonProg","StudentCourseView","CourseDescriptionScreen","instructor_name","usersClasses","setUserClasses","card","maxWidth","Image","shadowOverlay","flexGrow","courseDescript","enroll","bool","enrolled","signUpForClass","classDesc","DashBoardStackNavigatorStudent","StudentClassSearchScreenTest","searchTerm","setSearchTerm","search","getSearchClassResultSearchScreen","processed","resultID","processSearchResult","course_id","course_name","course_descrip","classInstructor","HomeStackNavigatorStudent","StudentProfile","ProfileStackNavigatorStudent","StudentEditProfile","StudentSetting","SettingStackNavigatorStudent","WelcomeStackNavigatorStudent","StudentMainScreenTabs","AuthStack","headerStyle","headerTintColor","AuthenticatedStack","Navigation","NavigationContainer","Root","isTryingLogin","setIsTryingLogin","storedToken","storedUserID","storedUserType","fetchToken","App"],"mappings":"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","file":"static/js/app.5b8907e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.30d9bf23.png\";","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n//var url = \"http://localhost:3001/api\"\r\nvar url = \"https://brainbreezeapp.education/api\";\r\n\r\n\r\nclass Authentication{\r\n    async signIn(user_email, user_password){\r\n        console.log(user_email, user_password);\r\n        if(user_email!=='' && user_password!==''){\r\n            await fetch(`${url}/user/signin`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    user_email: user_email,\r\n                    user_password: user_password\r\n                })\r\n            }).then(response => response.json()).then(data => {\r\n                AsyncStorage.setItem(\"@user_info\", JSON.stringify(data));\r\n                console.log(data);\r\n            })\r\n        }\r\n    }\r\n\r\n    async signUp(user_email, user_password, user_name, user_type){\r\n        if(u!=='' && p!=='' && e!==''){\r\n            let response = await fetch(`${url}/user/create`, {\r\n                method: 'POST',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    user_name: user_name,\r\n                    user_email: user_email,\r\n                    user_password: user_password,\r\n                    user_type: user_type\r\n                })\r\n            })\r\n            console.log(response.status);\r\n            return await response.json();\r\n          \r\n        }\r\n        return {message:\"No input!\"};\r\n    }\r\n}\r\nexport default Authentication;","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { View, Text, StyleSheet,KeyboardAvoidingView, Platform, TouchableOpacity} from \"react-native\";\r\nimport { createContext, useEffect, useState } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  token: '',\r\n  user_id: null,\r\n  isAuthenticated: false,\r\n\r\n  user_type: null,\r\n  authenticate: (token, userid, user_type) => {},\r\n\r\n  logout: () => {},\r\n});\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const [authToken, setAuthToken] = useState();\r\n  const [authUserid, setAuthUserid] = useState();\r\n  const [authUserType, setAuthUserType] = useState();\r\n\r\n\r\n  //these functions are part of the auth context\r\n  //what happens when users logged in successfully\r\n\r\n  const authenticate = async(token, userid, user_type)=>{\r\n    \r\n    try {\r\n     setAuthToken(token);\r\n     setAuthUserid(userid);\r\n     setAuthUserType(user_type);\r\n\r\n     await AsyncStorage.setItem('token', token);\r\n\r\n     if (Platform.OS === 'ios' || Platform.OS === 'android') {\r\n     await AsyncStorage.setItem('user_id', JSON.stringify(userid));\r\n      await AsyncStorage.setItem('user_type', JSON.stringify(user_type));\r\n     } else {   \r\n       await AsyncStorage.setItem('user_id', userid);\r\n      await AsyncStorage.setItem('user_type', user_type)   \r\n     }\r\n  \r\n     return true;\r\n    \r\n    } catch (exception) {\r\n     return false;\r\n    }\r\n  \r\n   }\r\n  \r\n  \r\n     //AsyncStorage.removeItem('token');\r\n     //AsyncStorage.removeItem('user_id');\r\n     const logout = async() => {\r\n       try {\r\n         await AsyncStorage.removeItem('token');\r\n         await AsyncStorage.removeItem('user_id');\r\n         await AsyncStorage.removeItem('user_type');\r\n\r\n\r\n         setAuthToken(null);\r\n         setAuthUserid('');\r\n         setAuthUserType('');\r\n        \r\n         return true;\r\n     }\r\n     catch(exception) {\r\n         return false;\r\n     }\r\n }\r\n \r\n  //these values are what gonna be availble to context users\r\n  //!! convert authToken to boolean (true if exist, false if not exist)\r\n  const value = {\r\n    token: authToken,\r\n    user_id: authUserid,\r\n    user_type: authUserType,\r\n    isAuthenticated: !!authToken,\r\n    authenticate: authenticate,\r\n    logout: logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport Authentication from \"../utility/Authentication\";\r\nimport { AuthContext } from \"../store/AuthContext\";\r\nconst API_URL =\r\n  Platform.OS === \"ios\" ? \"http://localhost:5000\" : \"http://10.0.2.2:5000\";\r\n//const API_URL =  'http://localhost:3001/api/user';\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { color, renderNode } from \"react-native-elements/dist/helpers\";\r\nimport { colors } from \"react-native-elements\";\r\n\r\nconst AnimatedView = animated(View);\r\n\r\nexport default function LogInScreen({ navigation }) {\r\n  //TODO: Add proper set state on text input in order to recieve and update as user types their info\r\n  const [user_email, setEmail] = useState(\"\");\r\n  const [user_password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isSecureEntry, setSecureEntry] = useState(true);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const [flip, set] = useState(false);\r\n  const logoAnim = useSpring({\r\n    to: { \r\n    //backgroundColor: \"#94c9ff\",\r\n    width: 120,\r\n    height: 120,\r\n    borderRadius: 16,\r\n   // borderWidth: 4,\r\n    //borderColor: \"#c7f1ff\"\r\n  },\r\n    from: {\r\n      backgroundColor: \"#E8EAED\",\r\n      width: 110,\r\n      height: 110,\r\n      borderRadius: 15,\r\n     // borderWidth: 0,\r\n     // borderColor: colors.white\r\n\r\n\r\n    }, \r\n    reset: true,\r\n    reverse: flip,\r\n    delay: 3000,\r\n    //config: config.molasses,\r\n    onRest: () => set(!flip),\r\n  });\r\n\r\n\r\n  const onSubmitHandler = () => {\r\n    console.log(\"email and pass: \", user_email, user_password);\r\n    const api = new Authentication();\r\n    if (user_email == \"\" || user_password == \"\") {\r\n      alert(\"Please enter email or password\");\r\n    } else {\r\n      api.signIn(user_email, user_password).then(() => {\r\n        AsyncStorage.getItem(\"@user_info\")\r\n          .then((data) => {\r\n            const user = JSON.parse(data);\r\n            console.log(\"Log in user id debug\" + user);\r\n            console.log(\"log in user token\" + user.token);\r\n            console.log(\"log in user id\" + user.user_id);\r\n            const userID = JSON.stringify(user.user_id);\r\n            if (user && user.token) {\r\n              //alert(\"Authorized!\");\r\n\r\n              authCtx.authenticate(user.token, user.user_id, user.user_type);\r\n            } else {\r\n              alert(\"Not Authorized!\");\r\n              AsyncStorage.clear();\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            console.log(reason);\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  // const renderAnimatedLogo = () => {\r\n  //   return (\r\n\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={top.blueWave}>\r\n        <AnimatedView\r\n          style={{\r\n            width: 80,\r\n            height: 80,\r\n           // backgroundColor: \"#46e891\",\r\n\r\n            ...logoAnim,\r\n          }}\r\n        >\r\n          <Text style={styles.title}>Brain Breeze</Text>\r\n        </AnimatedView>\r\n      </View>\r\n\r\n      <View\r\n        // behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={login.email}\r\n      >\r\n        <TextInput\r\n          style={login.input}\r\n          label={\"Email\"}\r\n          mode={\"outlined\"}\r\n          left={<TextInput.Icon name=\"email\" />}\r\n          onChangeText={setEmail}\r\n        />\r\n\r\n        <TextInput\r\n          secureTextEntry={true}\r\n          style={login.input}\r\n          label={\"Password\"}\r\n          mode={\"outlined\"}\r\n          left={<TextInput.Icon name=\"lock\" />}\r\n          onChangeText={setPassword}\r\n        />\r\n        <Text>{message ? message : null}</Text>\r\n\r\n        {/*Emmanuel gave property onPress to TouchableOpacity tag*/}\r\n        <TouchableOpacity onPress={onSubmitHandler}>\r\n          <View style={login.loginBttn}>\r\n            <Text style={login.loginText}>Login</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={signup.divider}>\r\n        <Text style={signup.divider}>Don't have an account?</Text>\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n        style={signup.container}\r\n        onPress={() => navigation.navigate(\"SignUp\")}\r\n      >\r\n        <View style={signup.firstSgnUpBttn}>\r\n          <Text style={signup.signupText}>Sign Up</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //alignSelf: 'stretch',\r\n    flex: 1,\r\n\r\n    backgroundColor: \"#E8EAED\",\r\n    alignItems: \"center\",\r\n   // paddingTop: 0,\r\n  },\r\n\r\n  title: {\r\n    //paddingHorizontal:11,\r\n    alignSelf:\"center\",\r\n\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n    marginTop:15,\r\n   // top:15\r\n  },\r\n});\r\n\r\nconst top = StyleSheet.create({\r\n  blueWave: {\r\n    alignSelf: \"stretch\",\r\n\r\n    flex: 1,\r\n    backgroundColor: \"#4970FA\",\r\n    borderBottomEndRadius: 200,\r\n    borderBottomStartRadius: 200,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n    marginBottom: 300,\r\n  },\r\n\r\n  logoShape: {\r\n    position: \"relative\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#E8EAED\",\r\n    width: 110,\r\n    height: 110,\r\n    borderRadius: 15, //'15%',\r\n  },\r\n});\r\n\r\nconst login = StyleSheet.create({\r\n  email: {\r\n    position: \"absolute\",\r\n    bottom: 140,\r\n    //width: '100%'\r\n    width: 100,\r\n    //flexDirection: 'row'\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  input: {\r\n    position: \"relative\",\r\n    backgroundColor: \"white\",\r\n    bottom: 30,\r\n    width: 250,\r\n  },\r\n\r\n  pwHolder: {\r\n    position: \"relative\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    bottom: 25,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    marginTop: 10,\r\n    width: 250,\r\n  },\r\n\r\n  loginBttn: {\r\n    width: 250,\r\n    position: \"relative\",\r\n    //height: 60,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#4970FA\",\r\n    //marginTop: 10,\r\n    //top: 10,\r\n    //textAlign: 'center',\r\n    color: \"white\",\r\n    //color: 'white',\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  loginText: {\r\n    color: \"white\",\r\n    //fontSize: 22,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nconst signup = StyleSheet.create({\r\n  container: {\r\n    bottom: 40,\r\n  },\r\n  divider: {\r\n    bottom: 25,\r\n    fontWeight: \"bold\",\r\n    color: \"#6B6B6B\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  firstSgnUpBttn: {\r\n    width: 250,\r\n\r\n    position: \"relative\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#4970FA\",\r\n    //marginTOP:0,\r\n\r\n    //textAlign: 'center',\r\n    color: \"white\",\r\n    //color: 'white',\r\n    alignItems: \"center\",\r\n  },\r\n  signupText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nconst forgotPsswrd = StyleSheet.create({\r\n  forgotText: {\r\n    position: \"relative\",\r\n    color: \"#6B6B6B\",\r\n    fontWeight: \"bold\",\r\n\r\n    bottom: 10,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView} from \"react-native\";\r\nimport { ButtonGroup, CheckBox } from 'react-native-elements';\r\nimport { TextInput, Button, HelperText} from \"react-native-paper\";\r\n\r\nconst API_URL =  'https://brainbreezeapp.education/api/user/create';\r\n//import APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function SignUpScreen({navigation}) {\r\n  const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(2);\r\n  const [check1, setCheck1] = useState(false);\r\n  const [isSecureEntry, setSecureEntry] = useState(true);\r\n  const [isSecureEntry2, setSecureEntry2] = useState(true);\r\n\r\n\r\n\r\n  //TODO: Add proper set state on text input in order to recieve and update as user types their info\r\n  const [user_email, setEmail] = useState('');\r\n  const [user_name, setName] = useState('');\r\n  const [user_password, setPassword] = useState('');\r\n  const [user_type, setUserType] = useState('string');\r\n  const [message, setMessage] = useState('');\r\n  const [confirmPW, setConfirmPW] = useState(''); \r\n\r\n\r\n  const emailError = () => {\r\n    if(user_email.match(mailFormat)){\r\n      return false; \r\n    }else{\r\n      return true; \r\n    }\r\n  }\r\n\r\n  const passwordHelper = () => {\r\n    return (user_password.length < 8); \r\n  }\r\n\r\n\r\n  const onSubmitHandler = () => {\r\n    if(user_name === null){\r\n      alert(\"Name cannot be empty\");\r\n      return; \r\n    }\r\n    console.log(user_email + user_password);\r\n\r\n    if(!user_email.includes('@')){\r\n      alert(\"Not a valid email\");\r\n      return; \r\n    }\r\n    if(user_password.length < 8){\r\n      alert(\"Password needs to be at least 8 characters\");\r\n      return;\r\n    }\r\n\r\n    if(!user_password.match(confirmPW)){\r\n      alert(\"Passwords do not match.\");\r\n      return; \r\n    }\r\n\r\n    const payload = {\r\n        user_name,\r\n        user_email,\r\n        user_password,\r\n        user_type\r\n    };\r\n    fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n    })\r\n    .then(async res => { \r\n        try {\r\n            const jsonRes = await res.json();\r\n            if (res.status !== 201) {\r\n                setMessage(jsonRes.message);\r\n                alert(\"Email already in use.\")\r\n            } else {\r\n                setMessage(jsonRes.message);\r\n                alert(\"Account created!\");\r\n                navigation.navigate('LogIn');\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        };\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n<ScrollView>\r\n    <View style = {styles.container}>\r\n      \r\n      <Text style ={styles.title}>Register</Text>\r\n\r\n      <Text style ={[styles.title, {\r\n        fontSize:14,\r\n        fontWeight: 'normal',\r\n        color: '#000',\r\n        marginVertical: 10\r\n      }]}>Enter the following information to create an account.</Text>\r\n\r\n \r\n      <View style={styles.form}>\r\n        <TextInput \r\n            style={styles.input}\r\n            label={'Name'} \r\n            mode={'outlined'}\r\n            outlineColor={'#4970FA'}\r\n            value={''}\r\n            left={<TextInput.Icon name='account'/>}\r\n            onChangeText={newText => setName(newText)}\r\n        />\r\n\r\n        <TextInput \r\n            style={styles.input}\r\n            label={'Email'} \r\n            mode={'outlined'}\r\n            outlineColor={'#4970FA'}\r\n            left={<TextInput.Icon name='email'/>}\r\n            value={''}\r\n            onChangeText={newText => setEmail(newText)}\r\n          />\r\n          {/* <HelperText type='error' visible={emailError()}>\r\n            Email Address is invalid\r\n          </HelperText> */}\r\n\r\n        <TextInput \r\n          secureTextEntry={isSecureEntry} \r\n          style={styles.input}\r\n          label={'Password'} \r\n          mode={'outlined'}\r\n          value={''}\r\n          left={<TextInput.Icon name='lock'/>}\r\n          right={  \r\n              <TextInput.Icon name=\"eye\"\r\n                onPress={() => setSecureEntry(prev => !prev)}\r\n              />\r\n          }\r\n          outlineColor={'#4970FA'}\r\n          onChangeText={newText => setPassword(newText)}\r\n        />\r\n        <HelperText type='info' visible={passwordHelper()} style={{color:'#000'}}>\r\n            Password needs to be at least 8 characters long.\r\n          </HelperText>\r\n\r\n\r\n          <TextInput \r\n          secureTextEntry={isSecureEntry2} \r\n          style={styles.input}\r\n          label={'Confirm Password'} \r\n          mode={'outlined'}\r\n          value={''}\r\n          left={<TextInput.Icon name='lock'/>}\r\n          right={ <TextInput.Icon \r\n            name=\"eye\"\r\n            onPress={() => setSecureEntry2(prev => !prev)}\r\n          />}\r\n          outlineColor={'#4970FA'}\r\n          onChangeText={newText => setConfirmPW(newText)}\r\n        />\r\n    \r\n       \r\n\r\n      <Text style={styles.status}>Are you a...</Text>\r\n        <ButtonGroup\r\n          buttons={['Student', 'Educator']}\r\n          selectedIndex={selectedIndex}\r\n          \r\n          onPress={(value) => {\r\n            setSelectedIndex(value);\r\n            if(value == 0){\r\n              setUserType('student');\r\n            } else if(value == 1 ){\r\n              setUserType('instructor');\r\n            }\r\n          }}\r\n          textStyle={{color:'#000'}}\r\n          selectedTextStyle={{color:'#fff'}}\r\n          selectedButtonStyle={{backgroundColor: '#4970FA'}}\r\n          />\r\n\r\n\r\n        <View style={styles.checkbox}>\r\n          <CheckBox\r\n            color={'#4970FA'}\r\n            checked={check1}\r\n            onPress={() => setCheck1(!check1)}\r\n            checkedColor={'#4970FA'}\r\n            uncheckedColor={'#000'}\r\n          />\r\n          <Text>By checking, you Agree to our Terms of Use and understand our privacy policy. \r\n              You may recieve notifications via email.</Text>\r\n        </View>\r\n\r\n        <Button \r\n          mode=\"contained\" \r\n          onPress={onSubmitHandler} \r\n          contentStyle={{\r\n            height:50,\r\n          }}\r\n          color={'#4970FA'}\r\n          disabled={!check1}\r\n          style={{\r\n            marginTop:15\r\n          }}\r\n        >\r\n          Create Account\r\n        </Button>\r\n        \r\n        \r\n\r\n        </View>\r\n  \r\n  </View>\r\n  </ScrollView>\r\n         \r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //alignSelf: 'stretch',\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n  },\r\n\r\n\r\n  title: {\r\n    top:25,\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n    alignSelf:'center'\r\n  },\r\n\r\n  form: {\r\n    marginLeft: 20,\r\n    marginRight: 20\r\n  },\r\n\r\n  input: {\r\n    marginTop: 20\r\n  },\r\n\r\n  status: {\r\n    fontWeight:\"bold\",\r\n    textAlign:\"center\",\r\n    marginTop: 20\r\n  },\r\n\r\n\r\n  \r\n  checkbox: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    marginRight: 60\r\n  },\r\n\r\n})\r\n\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../store/AuthContext\";\r\n//var url = \"http://localhost:3001/api\";\r\nvar url = \"https://brainbreezeapp.education/api\";\r\n\r\n\r\n\r\n\r\nclass APIConnection {\r\n  constructor() {\r\n    this.authCtx = useContext(AuthContext);\r\n    this.token = this.authCtx.token;\r\n    this.user_id = this.authCtx.user_id;\r\n  }\r\n\r\n  checkUnauthorized(json) {\r\n    if (json.status == 401) {\r\n      this.authCtx.logout();\r\n    }\r\n  }\r\n\r\n  async getUnitProgress(unit_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByUnit/${unit_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getLessonProgress(lesson_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByLessonAndUser/${lesson_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getModuleProgress(module_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByModuleAndUser/${module_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getClassProgress(class_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByClassAndUser/${class_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  //student enroll\r\n  async signUpForClass(classID) {\r\n    try {\r\n      const response = await fetch(`${url}/class/signup/` + classID, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        //    body: JSON.stringify({\r\n\r\n        //      class_id: classID\r\n        //  })\r\n         });\r\n        const json = await response.json();\r\n        this.checkUnauthorized(response);\r\n\r\n\r\n        return json;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.authCtx.logout\r\n      } finally {\r\n      }\r\n    }\r\n\r\n\r\n    async editCourseForInstructor(classID, class_name, class_descrip){\r\n      try {\r\n        const response = await fetch(`${url}/class/update/`+classID, {\r\n           method: 'PUT',\r\n           headers: {\r\n             Accept: 'application/json',\r\n             'Content-Type': 'application/json',\r\n             'token': this.token,\r\n           },\r\n           body: JSON.stringify({ \r\n          \r\n             class_name: class_name,\r\n             class_descrip: class_descrip\r\n         })\r\n         });\r\n        const json = await response.json();\r\n        this.checkUnauthorized(response);\r\n\r\n\r\n        return json;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.authCtx.logout\r\n      } finally {\r\n      }\r\n    }\r\n\r\n\r\n        \r\n        async postProgress(unitID){\r\n          try {\r\n            const response = await fetch(`${url}/progress/create`, {\r\n               method: 'POST',\r\n               headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n                 'token': this.token,\r\n               },\r\n               body: JSON.stringify({ \r\n              \r\n                 unit_id: unitID\r\n             })\r\n             });\r\n            const json = await response.json();\r\n            this.checkUnauthorized(response);\r\n\r\n    \r\n            return json;\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.authCtx.logout\r\n          } finally {\r\n          }\r\n        }\r\n\r\n\r\n        async editUnitName(unitID, newName){\r\n          try {\r\n            const response = await fetch(`${url}/unit/update/`+unitID, {\r\n               method: 'PUT',\r\n               headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n                 'token': this.token,\r\n               },\r\n               body: JSON.stringify({ \r\n              \r\n                 unit_name: newName,\r\n                 unit_index: 0\r\n             })\r\n             });\r\n            const json = await response.json();\r\n            this.checkUnauthorized(response);\r\n\r\n    \r\n            return json;\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.authCtx.logout\r\n          } finally {\r\n          }\r\n        }\r\n\r\n        async postLesson(ModuleID){\r\n          try {\r\n            const response = await fetch(`${url}/lesson/create`, {\r\n               method: 'POST',\r\n               headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n                 'token': this.token,\r\n               },\r\n               body: JSON.stringify({ \r\n              \r\n                 module_id: ModuleID,\r\n                 lesson_name: \"New Lesson\",\r\n                 lesson_descrip: \"New lesson description\",\r\n                 lesson_index: 0,\r\n                 instructor_id: this.user_id\r\n             })\r\n             });\r\n            const json = await response.json();\r\n            this.checkUnauthorized(response);\r\n\r\n    \r\n            return json;\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.authCtx.logout\r\n          } finally {\r\n          }\r\n        }\r\n\r\n\r\n       async editUserProfile(newName, userType, newBio, newPic) {\r\n          try {\r\n           const response = await fetch(url + '/user/update/'+ this.user_id, {\r\n              method: 'PUT',\r\n              headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'token': this.token,\r\n              },\r\n              body:JSON.stringify({ \r\n                user_name: newName,\r\n                user_type: userType,\r\n                user_pp: newPic,\r\n                user_bio: newBio\r\n            })\r\n            });\r\n           const json = await response.json();\r\n           this.checkUnauthorized(response);\r\n\r\n           return json;\r\n         } catch (error) {\r\n           console.error(error);\r\n           this.authCtx.logout\r\n         } finally {\r\n         }\r\n       }\r\n\r\n\r\n\r\n       async changeEmail(newEmail, currentPassword){\r\n        try{\r\n          const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'token': this.token,\r\n            },\r\n            body:JSON.stringify({ \r\n              user_email: newEmail,\r\n              user_password: currentPassword\r\n            })\r\n          });\r\n          const json = await response.json(); \r\n          this.checkUnauthorized(response);\r\n\r\n          return json; \r\n        }catch (error){\r\n          console.error(error);\r\n          this.authCtx.logout\r\n        }finally {\r\n        }\r\n      }\r\n\r\n\r\n      async changePassword(currentEmail, newPassword){\r\n        try{\r\n          const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'token': this.token,\r\n            },\r\n            body:JSON.stringify({ \r\n              user_email: currentEmail,\r\n              user_password: newPassword\r\n            })\r\n          });\r\n          const json = await response.json(); \r\n          this.checkUnauthorized(response);\r\n\r\n          return json; \r\n        }catch (error){\r\n          console.error(error);\r\n          this.authCtx.logout\r\n        }finally {\r\n        }\r\n      }\r\n\r\n\r\n       \r\n\r\n\r\n\r\n  // async getClasses() {\r\n\r\n\r\n  //   console.log(\"fetch url dash board debug: \" + url + '/class/findByUser/' + this.user_id);\r\n  //   try {\r\n  //     const response = await fetch(url + '/class/findByUser/' + this.user_id, {\r\n  //       method: 'GET',\r\n  //       headers: {\r\n  //         Accept: 'application/json',\r\n  //         'Content-Type': 'application/json',\r\n  //         'token': this.token,\r\n  //       },\r\n  //     });\r\n  //     const json = await response.json();\r\n  //     this.checkUnauthorized(response);\r\n\r\n\r\n  //     return json;\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     this.authCtx.logout;\r\n  //   } finally {\r\n  //   }\r\n  // }\r\n\r\n  async editCourseForInstructor(classID, class_name, class_descrip) {\r\n    try {\r\n      const response = await fetch(`${url}/class/update/` + classID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          class_name: class_name,\r\n          class_descrip: class_descrip,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postProgress(unitID) {\r\n    try {\r\n      const response = await fetch(`${url}/progress/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          unit_id: unitID,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editUnitName(unitID, newName) {\r\n    try {\r\n      const response = await fetch(`${url}/unit/update/` + unitID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          unit_name: newName,\r\n          unit_index: 0,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postLesson(ModuleID) {\r\n    try {\r\n      const response = await fetch(`${url}/lesson/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          module_id: ModuleID,\r\n          lesson_name: \"New Lesson\",\r\n          lesson_descrip: \"New lesson description\",\r\n          lesson_index: 0,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editUserProfile(newName, userType, newBio, newPic) {\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/user/update/\" + this.user_id,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n          body: JSON.stringify({\r\n            user_name: newName,\r\n            user_type: userType,\r\n            user_pp: newPic,\r\n            user_bio: newBio,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async changeEmail(newEmail, currentPassword) {\r\n    try {\r\n      const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          user_email: newEmail,\r\n          user_password: currentPassword,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async changePassword(currentEmail, newPassword) {\r\n    try {\r\n      const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          user_email: currentEmail,\r\n          user_password: newPassword,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getClasses() {\r\n    console.log(\r\n      \"fetch url dash board debug: \" + url + \"/class/findByUser/\" + this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/class/findByUser/\" + this.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n\r\n  async dropClass(class_id){\r\n    try {\r\n      const response = await fetch(`${url}/class/drop/${class_id}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n           Accept: 'application/json',\r\n           'Content-Type': 'application/json',\r\n           'token': this.token,\r\n         },\r\n       });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      console.log(\"THIS IS DROP CLASS \" + json);\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout\r\n    } finally {\r\n    }\r\n  }\r\n\r\n\r\n  async deleteLesson(lessonID){\r\n    try {\r\n      const response = await fetch(`${url}/lesson/delete/${lessonID}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n           Accept: 'application/json',\r\n           'Content-Type': 'application/json',\r\n           'token': this.token,\r\n         },\r\n       });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout\r\n    } finally {\r\n    }\r\n  }\r\n\r\n\r\n  async deleteClass(class_id){\r\n    try {\r\n      const response = await fetch(`${url}/class/delete/${class_id}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n           Accept: 'application/json',\r\n           'Content-Type': 'application/json',\r\n           'token': this.token,\r\n         },\r\n       });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"THIS IS delete CLASS \" + json);\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUnitQuizContent(unitID) {\r\n    console.log(\r\n      \"fetch unit content quiz \" + url + \"/quiz/findByUnitId/\" + unitID\r\n    );\r\n    let response = \"initial response\";\r\n\r\n    try {\r\n      response = await fetch(url + \"/quiz/findByUnitId/\" + unitID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      //const json = await response.json();\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async createQuizData(quizID, quizQuestion, quizAnswers) {\r\n    try {\r\n      const response = await fetch(url + \"/quizdata/create/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          quiz_id: quizID,\r\n          quizdata_question: quizQuestion,\r\n          quizdata_answers: quizAnswers,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async createNewQuizForUnit(unitID) {\r\n    try {\r\n      const response = await fetch(url + \"/quiz/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          quiz_name: \"new quiz\",\r\n          unit_id: unitID,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editQuizData(quizID, quizDataID, quizQuestion, quizAnswers) {\r\n    try {\r\n      const response = await fetch(url + \"/quizdata/update/\" + quizID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          quizdata_id: quizDataID,\r\n          quizdata_question: quizQuestion,\r\n          quizdata_answers: quizAnswers,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n  async deleteQuizData(quizID, quizDataID) {\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/quizdata/delete/\" + quizID + \"/\" + quizDataID,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getQuizData(quizID) {\r\n    console.log(\"fetch unit content quiz data \" + url + \"/quizdata/\" + quizID);\r\n    try {\r\n      const response = await fetch(url + \"/quizdata/\" + quizID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n  async getAllModulesForClass(courseID) {\r\n    try {\r\n      const response = await fetch(`${url}/module/findByClass/` + courseID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getLessonsInModule(moduleID) {\r\n    try {\r\n      const response = await fetch(`${url}/lesson/findByModule/` + moduleID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postUnit(content, content2) {\r\n    try {\r\n      const response = await fetch(url + \"/unit/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          token: this.token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          unit_name: \"fast coutning\",\r\n          unit_content: [content, content2],\r\n          unit_content_type: \"string\",\r\n          lesson_id: 29,\r\n          instructor_id: 5,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n  async getUnitContent(unit_id) {\r\n    console.log(\r\n      \"fetch url dash board debug: \" +\r\n        url + \"/class/findByUser/\" +\r\n        this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/unit/\" + unit_id,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editUnitContent(content, content2, unit_id) {\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/unit/updateUnitContent/\" + unit_id,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            accept: \"application/json\",\r\n            token: this.token,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          // body: '{\\n  \"unit_content\": \"https://www.youtube.com/watch?v=JfVOs4VSpmA\",\\n  \"unit_content_type\": \"text\"\\n}',\r\n          body: JSON.stringify({\r\n            unit_content: content,\r\n            unit_content_type: content2,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUnitContent(unit_id) {\r\n    console.log(\r\n      \"fetch url dash board debug: \" +\r\n        url + \"/class/findByUser/\" +\r\n        this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/unit/\" + unit_id,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getSearchClassResultSearchScreen(keyword) {\r\n    console.log(\r\n      \"class search api called: \" + url + \"/class/findByUser/\" + this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/class/findByName/\" + keyword, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postClass(courseName, courseDesc) {\r\n    try {\r\n      console.log(\"post class api called: \");\r\n\r\n      const response = await fetch(url + \"/class/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          class_name: courseName,\r\n          class_descrip: courseDesc,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUserForProfilePage() {\r\n    console.log(\r\n      \"get user for profile page called \" +\r\n        url +\r\n        \"/class/findByUser/\" +\r\n        this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/user/\" + this.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getModulesAndLessonInstructorCourseViewScreen(courseID) {\r\n    console.log(\r\n      \"get modules and lessons called \" +\r\n        url + \"/class/findByUser/\" +\r\n        courseID\r\n    );\r\n\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/class/modulesAndLessons/\" + courseID,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async putLessonNameForLessonCreation(\r\n    lessonName,\r\n    lessonId,\r\n    less_description,\r\n    less_index,\r\n    mod_id\r\n  ) {\r\n    try {\r\n      const response = await fetch(url + \"/lesson/update/\" + lessonId, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          lesson_name: lessonName,\r\n          lesson_descrip: less_description,\r\n          lesson_index: less_index,\r\n          module_id: mod_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getSingleLessonForLessonCreation(lesson_id) {\r\n    try {\r\n      const response = await fetch(url + \"/lesson/findById/\" + lesson_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  // student route will be moved eventually\r\n  async getClassByNameForStudentCourseDescription(class_id) {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://http://localhost:3001/api/class/findByName/\" + class_id,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getSectionsPerLesson(lesson_id) {\r\n    // console.log(\"token  \" + this.token);\r\n\r\n    // console.log(\"fetch url dash board debug: \" +  url + '/class/findByUser/');\r\n    //  console.log(LessonID);\r\n    try {\r\n      const response = await fetch(url + \"/unit/findByLesson/\" + lesson_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUnitByID(unitID) {\r\n    // console.log(\"token  \" + this.token);\r\n\r\n    // console.log(\"fetch url dash board debug: \" +  url + '/class/findByUser/');\r\n    //  console.log(LessonID);\r\n    try {\r\n      const response = await fetch(url + \"/unit/\" + unitID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getClassByID(classID) {\r\n    // console.log(\"token  \" + this.token);\r\n\r\n    // console.log(\"fetch url dash board debug: \" +  url + '/class/findByUser/');\r\n    //  console.log(LessonID);\r\n    try {\r\n      const response = await fetch(url + \"/class/findById/\" + classID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async addUnitForLessonCreation(lessonID) {\r\n    try {\r\n      const response = await fetch(url + \"/unit/create/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          unit_name: \"Unit Name\",\r\n          unit_content: \"\",\r\n          lesson_id: lessonID,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async deleteUnit(unit_id) {\r\n    try {\r\n      const response = await fetch(url + \"/unit/delete/\" + unit_id, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editModule(moduleID, newModuleName, newModuleDescription, classID) {\r\n    console.log(\r\n      \"fetch url dash board debug: \" + url + \"/class/findByUser/\" + this.user_id\r\n    );\r\n\r\n    try {\r\n      const response = await fetch(url + \"/module/update/\" + moduleID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          module_name: newModuleName,\r\n          module_descrip: newModuleDescription,\r\n          class_id: classID,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async deleteModule(moduleID) {\r\n    console.log(\"deleting module: \" + moduleID);\r\n    try {\r\n      const response = await fetch(url + \"/module/delete/\" + moduleID, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async createModule(moduleName, description, classID) {\r\n    console.log(\r\n      \"Creating Module aPI called \" + moduleName + \" \" + description + classID\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/module/create/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          module_name: moduleName,\r\n          module_descrip: description,\r\n          class_id: classID,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n}\r\nexport default APIConnection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  View,\r\n  Picker,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Authentication from \"../../../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\nexport default function CourseEditScreen({ route, navigation }) {\r\n  const { courseID, courseName } = route.params;\r\n\r\n  const [className, setClassName] = useState(courseName);\r\n  const [courseDescription, setCourseDescription] = useState(\"\");\r\n\r\n  const [selectedCourseTypeIndex, setSelectedCourseTypeIndex] = useState(0);\r\n  const [selectedCourseCategoryValue, setSelectedCourseCategoryValue] =\r\n    useState(\"Other\");\r\n\r\n  const categoryData = [\r\n    \"Mathematic\",\r\n    \"Physics\",\r\n    \"English\",\r\n    \"Computer Science\",\r\n    \"Other\",\r\n  ];\r\n\r\n  const apiConnection = new APIConnection();\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getClassByID(courseID).then((json) => {\r\n        setCourseDescription(json.result.class_descrip);\r\n      });\r\n    }\r\n  }, [isFocused]);\r\n\r\n  function getCategoryPickerItems() {\r\n    console.log(\"Route debug:\", courseID, courseName, \"route: \", route);\r\n    let result = [];\r\n    for (let i = 0; i < categoryData.length; i++) {\r\n      result.push(\r\n        <Picker.Item key={i} label={categoryData[i]} value={categoryData[i]} />\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async function onSave() {\r\n    await apiConnection.editCourseForInstructor(\r\n      courseID,\r\n      className,\r\n      courseDescription\r\n    );\r\n    navigation.goBack();\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n      <Text style={styles.title}> Edit Course </Text>\r\n\r\n<Text style={styles.placeholderName}>Course Name</Text>\r\n\r\n        <TextInput\r\n          style={styles.courseName}\r\n          \r\n         // label=\"Course Name\"\r\n         \r\n       // editable={true}\r\n       returnKeyType='done'\r\n          defaultValue={courseName}\r\n          onChangeText={(text) => setClassName(text)}\r\n        />\r\n\r\n    \r\n        <Text style={styles.placeholderDesc}>Course Description</Text>\r\n        <TextInput\r\n          style={styles.courseDesc}\r\n         // label=\"Course Description\"\r\n         returnKeyType='done'\r\n          value={courseDescription}\r\n          multiline={true} \r\n          onChangeText={(text) => setCourseDescription(text)}\r\n        />\r\n\r\n\r\n\r\n\r\n      \r\n      <View style={styles.bottomContainer}>\r\n        <TouchableOpacity style={styles.addBttn} onPress={() => onSave()}>\r\n              <Text style={styles.addText}>Save</Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n        </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\", \r\n  },\r\n\r\n  addBttn: {\r\n    alignSelf: \"center\",\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    // paddingBottom: 5,\r\n    // position: \"absolute\",\r\n    height: 50,\r\n    width: 200,\r\n\r\n    borderRadius: 50,\r\n    backgroundColor: \"#4970FA\",\r\n    color: \"white\",\r\n    // bottom: 60,\r\n    // margin: 1,\r\n  },\r\n  placeholderName: {\r\n\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    //marginBottom: 1,\r\n    marginRight: 140,\r\n   \r\n    marginTop: 10,\r\n  },\r\n\r\n  placeholderDesc: {\r\n\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    //marginBottom: 1,\r\n    marginRight: 105,\r\n    marginBottom:-40,\r\n    marginTop:40,\r\n   \r\n   // marginTop: ,\r\n  },\r\n\r\n  addText: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  title: {\r\n    //paddingHorizontal:11,\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n  },\r\n  courseName: {\r\n    //position: \"relative\",\r\n    justifyContent: \"center\",\r\n    //alignItems: 'center',\r\n    paddingHorizontal: 10, //inner text spacing\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    alignSelf:'center',\r\n\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 250,\r\n    height: 40,\r\n\r\n  },\r\n\r\n  courseDesc: {\r\n    marginTop:40,\r\n    justifyContent: \"center\",\r\n    alignSelf:'center',\r\n    height: 200,\r\n    width: 250,\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n   // marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor:'white',\r\n    marginBottom:0,\r\n\r\n  },\r\n\r\n  inputContainerStyle: {\r\n    paddingHorizontal: 40,\r\n    margin: 10,\r\n  },\r\n\r\n  inputStyle: {\r\n    borderWidth: 1,\r\n  },\r\n\r\n  categoryStyle: {\r\n    alignItems: \"center\",\r\n  },\r\n  bottomContainer: {\r\n    flex: 3,\r\n    paddingTop: 20,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    \r\n  },\r\n\r\n  saveButton: {\r\n    \r\n      alignSelf: \"center\",\r\n\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n\r\n      paddingBottom: 5,\r\n      position: \"absolute\",\r\n      height: 50,\r\n      width: 200,\r\n\r\n      borderRadius: 50,\r\n      backgroundColor: \"#4970FA\",\r\n      color: \"white\",\r\n      bottom: 50,\r\n     // margin: 1,\r\n    \r\n  },\r\n});\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { Children, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function ClassSearchScreenTest() {\r\n //-------------------API Fetch code-------------------------\r\n\r\n const isFocused = useIsFocused();\r\n\r\n const [data, setData] = useState([]);\r\n\r\n const apiConnection = new APIConnection();\r\n\r\n\r\n //--------------------------------------------\r\n\r\n function searchAPI(keyword) {\r\n   if (keyword == \"\") {\r\n     alert('Enter class name');\r\n   }\r\n   else {\r\n     apiConnection.getSearchClassResultSearchScreen(keyword).then((json) => {\r\n       console.log(\"Class search debug \" + json);\r\n\r\n       setData(json);\r\n     });\r\n   }\r\n }\r\n function onCoursePress(course_id, course_name, course_descrip, instructor_name) {\r\n   navigation.navigate(\"Dashboard\",\r\n     {\r\n       screen: 'Course Description',\r\n       params: {\r\n         class_id: course_id,\r\n         class_name: course_name,\r\n         class_descrip: course_descrip,\r\n         instructor_name: instructor_name\r\n       }\r\n     })\r\n\r\n }\r\n\r\n const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n return (\r\n   <View style={styles.container}>\r\n     <View style={styles.content}>\r\n       <TextInput\r\n         style={search.searchHolder}\r\n         placeholder={\"Enter Class\"}\r\n         onChangeText={(newText) => setSearchTerm(newText)}\r\n         defaultValue={searchTerm}\r\n       />\r\n\r\n       <View >\r\n         <TouchableOpacity style={search.searchBttn}onPress={() => searchAPI(searchTerm)}>\r\n           <Text style={search.searchText}>Search</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n\r\n       <Text style={styles.title}>Discover Classes</Text>\r\n     </View>\r\n\r\n     <ScrollView style={{ backgroundColor: '#4970FA' }} contentContainerStyle={styles.content}>\r\n       {/* { {Data.filter((val)=>{\r\n           if (searchTerm == \"\") {\r\n             return val\r\n           } else if (val.CourseTitle.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n             return val\r\n           } \r\n           \r\n         }).map((item,key) => {\r\n           return (\r\n           <TouchableOpacity key={key}> \r\n             <Text style = {styles.boxes}>\r\n               {item.CourseTitle}\r\n             </Text>\r\n           </TouchableOpacity>\r\n           )})} }  */}\r\n\r\n       {data.length > 0 && data.map((item, key) => {\r\n         return (\r\n           // <TouchableOpacity key={key}\r\n           // onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}\r\n           // >\r\n\r\n           //   <Text style={styles.boxes}>\r\n           //     {'Class Name: '+item.class_name +'\\n' +\r\n           //     '--------------------'+'\\n'+\r\n           //     'Class description: '+ item.class_descrip +'\\n'+ \r\n           //     '--------------------'+'\\n'+\r\n           //     'instructor: '+ item.instructor_name + '\\n' + \"the end of this \"}\r\n           //   </Text>\r\n\r\n           // </TouchableOpacity>\r\n           <Card key={item.class_id} style={styles.gridItem} >\r\n             <TouchableOpacity onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}>\r\n\r\n             <Card.Cover style={{height:'50%'}} source={{uri: 'https://picsum.photos/700' }}/>\r\n               <Card.Content  adjustsFontSizeToFit>\r\n             \r\n\r\n                 <Text  style={{textAlign:'center',fontSize:16}}adjustsFontSizeToFit>\r\n                   { item.class_name +'\\n' +\r\n                     'instructor: ' + item.instructor_name}\r\n                 </Text>\r\n\r\n               </Card.Content>\r\n\r\n             </TouchableOpacity>\r\n   \r\n\r\n           </Card>\r\n         );\r\n       })}\r\n     </ScrollView>\r\n   </View>\r\n );\r\n}\r\nconst styles = StyleSheet.create({\r\n gridItem: {\r\n   flex: 1,\r\n   margin: 16,\r\n   width: '65%',\r\n   height: 150,\r\n   borderRadius: 8,\r\n   elevation: 4,\r\n   backgroundColor: 'white',\r\n   color: 'white',\r\n   shadowColor: 'black',\r\n   shadowOpacity: 0.25,\r\n   shadowOffset: { width: 0, height: 2 },\r\n   shadowRadius: 8,\r\n   overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n },\r\n container: {\r\n   flex: 1,\r\n   backgroundColor: \"#E8EAED\",\r\n },\r\n\r\n content: {\r\n    alignItems: \"center\",\r\n\r\n },\r\n\r\n title: {\r\n\r\n   textAlign: \"center\",\r\n   fontSize: 30,\r\n   fontWeight: \"bold\",\r\n   color: \"black\",\r\n   marginTop: 50,\r\n   marginBottom: 50,\r\n\r\n },\r\n\r\n boxes: {\r\n   //padding: 30,\r\n   marginTop: 10,\r\n   fontWeight: 'bold',\r\n   backgroundColor: \"white\",\r\n   borderColor: \"#C0C0C0\",\r\n   borderWidth: 1,\r\n   borderRadius: 10,\r\n   width: 300,\r\n   height: 200,\r\n   textAlign: \"center\",\r\n\r\n   alignItems: \"center\",\r\n\r\n   //top: 10,\r\n },\r\n});\r\n\r\nconst search = StyleSheet.create({\r\n searchHolder: {\r\n   position: \"relative\",\r\n   paddingVertical: 15,\r\n   paddingHorizontal: 15,\r\n   backgroundColor: \"white\",\r\n   borderColor: \"#C0C0C0\",\r\n   bottom: 0,\r\n   borderWidth: 1,\r\n   borderRadius: 60,\r\n   width: 250,\r\n   marginTop: 100,\r\n   right: 50,\r\n },\r\n\r\n searchBttn: {\r\n   width: 100,\r\n   position: \"absolute\",\r\n   paddingVertical: 15,\r\n   paddingHorizontal: 15,\r\n   borderRadius: 60,\r\n   backgroundColor: \"#4970FA\",\r\n   color: \"white\",\r\n   alignItems: \"center\",\r\n   left: 80,\r\n   bottom: 0,\r\n\r\n },\r\n\r\n searchText: {\r\n   color: \"white\",\r\n   fontWeight: \"bold\",\r\n },\r\n});","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorHome from './InstructorHome'\r\nimport ClassSearchScreenTest from './SearchScreenTest'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function HomeStackNavigatorInstructor()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n\r\n<Stack.Screen name=\"SearchScreen\" component={ClassSearchScreenTest} />\r\n\r\n      <Stack.Screen name=\"InstructorHome\" component={InstructorHome} />\r\n\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { Pressable, View, Text, StyleSheet, Platform, TouchableOpacity,Alert } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { Button } from 'react-native-elements/dist/buttons/Button';\r\n\r\nfunction CourseGridCard({ title, color, onPress, onDelete, courseID }) {\r\n  function alertDrop() {\r\n    Alert.alert(\r\n      \"Warning\",\r\n      \"Are you sure you want to delete this course? You will not be able to recover it.\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Delete\",\r\n          onPress: () => { onDelete(courseID) }\r\n\r\n        }\r\n      ],\r\n      {\r\n        cancelable: true,\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.gridItem}>\r\n      <Pressable\r\n        android_ripple={{ color: '#ccc' }}\r\n        style={({ pressed }) => [\r\n          styles.button,\r\n          pressed ? styles.buttonPressed : null,\r\n          \r\n        ]}\r\n        onPress={onPress}\r\n      >\r\n        <View style={[styles.innerContainer, { backgroundColor: 'white' }]}>\r\n          <Text style={styles.title}>{title}</Text>\r\n        </View>\r\n      </Pressable>\r\n      <TouchableOpacity\r\n          style={styles.buttonContainer}\r\n          onPress={() => \r\n            {\r\n              if(Platform.OS == 'web'){\r\n                onDelete(courseID)\r\n              }\r\n              else if(Platform.OS == 'android' || Platform.OS == 'ios')\r\n              {\r\n                alertDrop();\r\n              }\r\n           }  \r\n          \r\n          }\r\n        >\r\n         <Icon name=\"delete\" size={30} color=\"#e33057\" />\r\n        </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CourseGridCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: 'white',\r\n    color: 'white',\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    \r\n  },\r\n  buttonContainer: {\r\n    alignSelf:'center'\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.5,\r\n    \r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \r\n    \r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    \r\n  },\r\n});\r\n","import React, { Children,useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View, Text, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport CourseGridCard from '../../../component/CourseGridCard';\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\n\r\n\r\nexport default function InstructorDashboard({navigation}) {\r\n\r\n\r\n\r\n    \r\n\r\n//--------------Copy This Piece Of Code Here------------\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const apiConnection = new APIConnection();\r\n          useLayoutEffect(() => {\r\n            //your code here\r\n            if(isFocused) {\r\n              apiConnection.getClasses().then(json => {\r\n                setData(json);})\r\n            }\r\n            \r\n         },[isFocused]);\r\n\r\n //------------------------------------------\r\n\r\n\r\n function onDelete(courseID)\r\n {\r\n   apiConnection.deleteClass(courseID);\r\n   navigation.goBack();\r\n }\r\n\r\n\r\n\r\n    function classCardComponent(itemData) {\r\n        function pressHandler() {\r\n            console.log(\"item data debug:\", itemData)\r\n          // navigation.navigate('EditCourseAndModule', {\r\n          //   courseID: itemData.item.class_id,\r\n          //   courseName: itemData.item.class_name\r\n          // });\r\n          navigation.navigate('Instructor CourseView', {\r\n            courseID: itemData.item.class_id,\r\n            courseName: itemData.item.class_name\r\n          });\r\n        }\r\n    \r\n        return (\r\n          <CourseGridCard\r\n            title={itemData.item.class_name}\r\n            color={\"#534789\"}\r\n            onPress={pressHandler}\r\n            courseID={itemData.item.class_id}\r\n            onDelete={onDelete}\r\n          />\r\n        );\r\n      }\r\n     \r\n      return (\r\n        \r\n  \r\n        <View style={styles.container}>\r\n        <Text style={styles.title}>Courses</Text>\r\n\r\n\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item) => item.class_id}\r\n          renderItem={classCardComponent}\r\n          numColumns={2}\r\n        />\r\n\r\n\r\n        <TouchableOpacity \r\n        style={addClass.addBttn}\r\n        // style ={styles.bottomContainer}\r\n        onPress={() =>  navigation.navigate('Create Course', { screen:'CreateCourse'})}>\r\n        {/* <View  > */}\r\n          <Text style ={addClass.addText}>+</Text>\r\n        {/* </View>  */}\r\n      </TouchableOpacity>\r\n      \r\n\r\n\r\n\r\n\r\n    </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n\r\n  },\r\n\r\n  content: {\r\n    alignItems: \"center\",\r\n\r\n  },\r\n\r\n  bottomContainer: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n\r\n  },\r\n\r\n  \r\n\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: 'black',\r\n    marginTop:50,\r\n    marginBottom: 50\r\n\r\n  },\r\n\r\n  boxes: {\r\n      marginTop:10,\r\n      backgroundColor: 'white',\r\n      borderColor: '#C0C0C0',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n      width:300,\r\n      height: 200,\r\n      textAlign: \"center\",\r\n      alignItems: \"center\"\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n\r\n  addBttn: {\r\n  alignSelf: 'flex-end',\r\n  flex:1,\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width:80,\r\n  height:80,\r\n  paddingBottom:5,\r\n  position: \"absolute\",\r\n    //height: 60,\r\n\r\n  borderRadius: 50,\r\n  backgroundColor: '#4970FA',\r\n  color: 'white',\r\n  right: 20,\r\n  bottom:40\r\n\r\n  },\r\n\r\n  addText: {\r\n\r\n    color: 'white',\r\n    fontSize: 50,\r\n    fontWeight: \"bold\",\r\n\r\n  }\r\n}\r\n        \r\n      );\r\n\r\n      \r\n\r\n//class id 58b0a1f3-acd6-4893-afe4-10ef88ab161f\r\n//user id 5\r\n//mod id 5\r\n\r\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiaWF0IjoxNjQ4ODcyNzc4LCJleHAiOjE2NDg5NTkxNzh9.O2VDmIrA5ZmvrebfYhlQbWyhzPmGlF7OTpgkRzJSfvA","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Picker,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Authentication from \"../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useLinkProps } from \"@react-navigation/native\";\r\nimport APIConnection from \"../utility/APIConnection\";\r\n\r\nexport default function ModuleEditComponent({ allData, setData, lessonData, navigation }) {\r\n  const [ModuleName, setModuleName] = useState(lessonData.module_name);\r\n  const moduleID = lessonData.module_id;\r\n  const apiConnection = new APIConnection();\r\n\r\n  function updateModuleNameToParent(newModuleName) {\r\n    let index = allData.findIndex((module) => module.module_id === moduleID);\r\n    let newAllData = allData;\r\n    newAllData[index].module_name = newModuleName;\r\n    //mark that this module has been edited\r\n    if (newAllData[index].changeType != \"Created\") {\r\n      newAllData[index].changeType = \"Edited\";\r\n    }\r\n    setData(newAllData);\r\n  }\r\n\r\n\r\n  async function addNewLesson()\r\n  {\r\n    if(moduleID != null)\r\n    {let response = await apiConnection.postLesson(moduleID);\r\n      let lessonID = response.result[0].lesson_id;\r\n      let lessonName = response.result[0].lesson_name;\r\n  \r\n      navigation.navigate(\r\n  \r\n        'LessonCreation', {\r\n          lessonID: lessonID,\r\n          lessonName: lessonName\r\n          \r\n        }\r\n      )\r\n    }\r\n\r\n    else alert(\"Please press save first before continuing\")\r\n\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  function onLessonPress(lessonId, lessonName)\r\n  {\r\n    navigation.navigate('LessonCreation', {\r\n      lessonID: lessonId,\r\n      lessonName: lessonName\r\n      \r\n    })\r\n  }\r\n\r\n  function deleteModule() {\r\n    let newAllData = allData.filter((module) => module.module_id !== moduleID);\r\n    console.log(\"New deleted data is\" + newAllData);\r\n    setData(newAllData);\r\n  }\r\n\r\n  function getLessonsView() {\r\n    const result = [];\r\n\r\n    for (let i = 0; i < lessonData[\"lessons\"].length; i++) {\r\n      result.push(\r\n        <TouchableOpacity key={i} style={[styles.button]} onPress={() => onLessonPress(lessonData.lessons[i].lesson_id, lessonData.lessons[i].lesson_name)}>\r\n          <Text style={[styles.buttonLabel]}>\r\n            {lessonData[\"lessons\"][i].lesson_name}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.backgroundCard}>\r\n      <View style={styles.row}>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder={lessonData[\"Module\"]}\r\n          onChangeText={(newText) => updateModuleNameToParent(newText)}\r\n          defaultValue={ModuleName}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          style={styles.buttonContainer}\r\n          onPress={() => deleteModule()}\r\n        >\r\n         <Icon name=\"delete\" size={30} color=\"#e33057\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {getLessonsView()}\r\n      </View>\r\n\r\n      <View>\r\n        <TouchableOpacity\r\n        onPress={() => addNewLesson()}\r\n\r\n\r\n\r\n\r\n          style={{\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 12,\r\n              fontWeight: \"500\",\r\n              color: \"#4970FA\",\r\n              paddingBottom: 10,\r\n            }}\r\n          >\r\n            Add Lesson+\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 8,\r\n    backgroundColor: \"aliceblue\",\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"#4970FA\",\r\n    color:'white',\r\n    alignSelf: \"flex-start\",\r\n    marginHorizontal: \"1%\",\r\n    margin: 6,\r\n    shadowColor: \"black\",\r\n    elevation: 10,\r\n    borderWidth: 1,\r\n    fontSize: 12,\r\n    fontWeight: \"500\",\r\n  },\r\n  box: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"#adebff\",\r\n    alignSelf: \"flex-start\",\r\n    marginHorizontal: \"1%\",\r\n    marginBottom: 6,\r\n    minWidth: \"48%\",\r\n    textAlign: \"center\",\r\n  },\r\n  selected: {\r\n    backgroundColor: \"coral\",\r\n    borderWidth: 0,\r\n  },\r\n  buttonLabel: {\r\n    fontSize: 12,\r\n    fontWeight: \"500\",\r\n    color: \"black\",\r\n  },\r\n  selectedLabel: {\r\n    color: \"white\",\r\n  },\r\n  label: {\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n    //color:'white'\r\n  },\r\n  backgroundCard: {\r\n    margin: 16,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: \"white\",\r\n    borderWidth: .7,\r\n\r\n    color: \"white\",\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === \"android\" ? \"hidden\" : \"visible\",\r\n  },\r\n  buttonContainer: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  \r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    View,\r\n    Picker,\r\n    Text,\r\n    Alert,\r\n    StyleSheet,\r\n    Button,\r\n    TextInput,\r\n    TouchableWithoutFeedback,\r\n    Keyboard,\r\n    Dimensions,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\nimport Authentication from \"../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useLinkProps } from \"@react-navigation/native\";\r\nimport ModuleEditComponent from \"./ModuleEditComponent\";\r\nimport { useTransition, animated } from 'react-spring/native'\r\n\r\n\r\nconst AnimatedView = animated(View);\r\n\r\n\r\nexport default function ModuleEditComponentContainer({ stateData, setStateData, navigation }) {\r\n\r\n    //take in 3 arguments\r\n\r\n    const transition = useTransition(stateData, stateData => stateData.module_id, {\r\n        from: { opacity: 0, x: -100, y: 800 },\r\n        enter: { opacity: 1, x: 0, y: 0 }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <View>\r\n            {stateData.map((module,key) => (\r\n                    <ModuleEditComponent\r\n\r\n                        key={key}\r\n                        allData={stateData}\r\n                        setData={setStateData}\r\n                        lessonData={module}\r\n                        navigation={navigation}>\r\n\r\n                    </ModuleEditComponent>\r\n\r\n            ))\r\n\r\n            }\r\n        </View>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Picker,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Authentication from \"../../../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport ModuleEditComponent from \"../../../component/ModuleEditComponent\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport { FAB } from \"react-native-elements\";\r\nimport ModuleEditComponentContainer from \"../../../component/ModuleEditComponentContainer\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nexport default function EditModuleScreen({ navigation, route }) {\r\n  const { courseID, courseName } = route.params;\r\n\r\n  //-----------API Connection Code----------\r\n  const isFocused = useIsFocused();\r\n\r\n  const [finalData, setFinalData] = useState([]);\r\n  const [stateData, setStateData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [dummyState, setDummyState] = useState(true);\r\n  //new module index is used to assign unique id for module that doesnt exist yet\r\n  const [newModIndex, setnewModIndex] = useState(-1);\r\n\r\n  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n\r\n  //--------for some reason i have to have these force update code to force a rerender-----\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n  //--------------no idea why but this fixed it----------\r\n\r\n  const apiConnection = new APIConnection();\r\n  // useEffect(() => {\r\n  //   if (isFocused) {\r\n  //     apiConnection\r\n  //       .getModulesAndLessonInstructorCourseViewScreen(courseID)\r\n  //       .then((json) => {\r\n  //         setFinalData(json);\r\n  //         setStateData(json);\r\n  //       });\r\n  //   }\r\n  // }, [isFocused]);\r\n  //---------------------------------------\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n\r\n    async function fetchAPI()\r\n    {\r\n      let json = await apiConnection.getAllModulesForClass(courseID);\r\n      let data = await processAPIModuleData(json);\r\n      for(let i = 0; i< data.length; i++)\r\n      {\r\n        let element = data[i];\r\n        console.log('data :'+ element.module_id);\r\n        let json2 = await apiConnection.getLessonsInModule(element.module_id);\r\n        processAPILesson(data[i].lessons,json2);\r\n\r\n\r\n      }\r\n      //  await data.forEach(element=>{\r\n\r\n      //    apiConnection.getLessonsInModule(element.module_id).then((json2) => {\r\n      //     processAPILesson(element.lessons,json2);\r\n\r\n      //    })\r\n\r\n\r\n      //  });\r\n\r\n     \r\n\r\n\r\n       setFinalData(data);\r\n       setStateData(data);\r\n       setIsLoading(false);\r\n\r\n\r\n\r\n     \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    if (isFocused) {\r\n      fetchAPI();\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n\r\n  function processAPILesson(lessonArr, lessonData){\r\n\r\n    for(let i =0; i < lessonData.length; i++){\r\n      let newLesson={};\r\n      newLesson['lesson_id'] = lessonData[i].lesson_id;\r\n      newLesson['lesson_name'] = lessonData[i].lesson_name;\r\n      newLesson['lesson_descrip'] = lessonData[i].lesson_descrip;\r\n      newLesson['lesson_index'] = lessonData[i].lesson_index;\r\n\r\n      lessonArr[i] = newLesson;\r\n\r\n    }\r\n\r\n\r\n    return lessonArr;\r\n  }\r\n\r\n\r\n    //Morph json from API into an array that we can use\r\n    function processAPIModuleData(json){\r\n      let returnData=[]\r\n     for(let i = 0; i <json.length; i++){\r\n       let newModule = {};\r\n       newModule['module_name'] = json[i].module_name;\r\n       newModule['module_id'] = json[i].module_id;\r\n       newModule['instructor_id'] = json[i].instructor_id;\r\n      newModule['lessons'] = [];\r\n\r\n      returnData[i] = newModule;\r\n\r\n\r\n     }\r\n\r\n     return returnData;\r\n  }\r\n\r\n\r\n\r\n  function refresh()\r\n  {\r\n    setDummyState(!dummyState);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //------------------------------------\r\n\r\n  async function onSave() {\r\n    console.log(\"On save pressed, this new all data is:\" + stateData);\r\n\r\n    //find which module is needed to delete\r\n    const deleteList = [];\r\n    for (let i = 0; i < finalData.length; i++) {\r\n      let tobeDeleted = true;\r\n      for (let j = 0; j < stateData.length; j++) {\r\n        if (finalData[i].module_id == stateData[j].module_id) {\r\n          tobeDeleted = false;\r\n          j = stateData.length;\r\n        }\r\n\r\n      }\r\n      if (tobeDeleted == true) {\r\n        deleteList.push(finalData[i].module_id)\r\n      }\r\n    }\r\n\r\n\r\n    await Promise.all(\r\n      stateData.map(async (module) => {\r\n\r\n        if (module.changeType == \"Edited\") {\r\n          console.log(\"This module has been changed: \" + module.module_name);\r\n          const response = await apiConnection.editModule(module.module_id, module.module_name, module.module_descrip, courseID)\r\n        }\r\n        else if (module.changeType == \"Created\") {\r\n          console.log(\"This module has been created: \" + module.module_name)\r\n          const response = await apiConnection.createModule(module.module_name, module.module_descrip, courseID);\r\n        }\r\n        else if (deleteList.includes(module.module_id)) {\r\n          console.log(\"This module has been deleted: \" + module.module_name)\r\n\r\n          const response = await apiConnection.deleteModule(module.module_id);\r\n        }\r\n\r\n\r\n      })\r\n    )\r\n    await Promise.all(\r\n      deleteList.map(async (deleteModuleID) => {\r\n        const response = await apiConnection.deleteModule(deleteModuleID);\r\n      })\r\n    )\r\n\r\n    navigation.goBack();\r\n\r\n  }\r\n\r\n\r\n\r\n  function addNewModule() {\r\n    let newEmptyModule = {\r\n      \"module_id\": newModIndex,\r\n      \"changeType\": \"Created\",\r\n      \"module_name\": \"New Module\",\r\n      \"module_descrip\": \"new description\",\r\n      \"instructor_id\": null,\r\n      \"lessons\": []\r\n    }\r\n\r\n    setnewModIndex(newModIndex - 1);\r\n\r\n    let newStateData = stateData;\r\n    newStateData.push(newEmptyModule);\r\n    setStateData(newStateData);\r\n\r\n\r\n    forceUpdate()\r\n\r\n  }\r\n\r\n  function getModuleView() {\r\n    // const result = [];\r\n    // for (let i = 0; i < stateData.length; i++) {\r\n    //   result.push(\r\n    //     <ModuleEditComponent\r\n    //       key={i}\r\n    //       allData={stateData}\r\n    //       setData={setStateData}\r\n    //       lessonData={stateData[i]}\r\n    //     ></ModuleEditComponent>\r\n    //   );\r\n    // }\r\n\r\n    return (\r\n      <View\r\n      >\r\n        {stateData.map((module, index) => (\r\n          <ModuleEditComponent\r\n          \r\n          key={index}\r\n          allData={stateData}\r\n          setData={setStateData}\r\n          lessonData={module}>\r\n           \r\n          </ModuleEditComponent>\r\n        ))\r\n        \r\n        }\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <ScrollView>\r\n      {isLoading ? <ActivityIndicator \r\n      size={\"large\"}\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        padding: 10\r\n      }}\r\n      ></ActivityIndicator> : <View>\r\n      <View style={{ padding: 10, flex: 1, backgroundColor: \"white\" }}>\r\n        <Text style={styles.label}>Edit Modules</Text>\r\n        <ScrollView>\r\n          <ModuleEditComponentContainer\r\n          stateData={stateData}\r\n          setStateData={setStateData}\r\n          navigation={navigation}\r\n          ></ModuleEditComponentContainer>\r\n        </ScrollView>\r\n\r\n        <Button\r\n          onPress={() => onSave()}\r\n          title=\"Save\"\r\n          titleStyle={{ fontWeight: \"700\" }}\r\n          buttonStyle={{\r\n            backgroundColor: \"rgba(90, 154, 230, 1)\",\r\n            borderColor: \"transparent\",\r\n            borderWidth: 0,\r\n            borderRadius: 100,\r\n          }}\r\n          containerStyle={{\r\n            width: 100,\r\n            marginHorizontal: 50,\r\n            marginVertical: 10,\r\n            paddingHorizontal: 200,\r\n            paddingTop: 40,\r\n          }}\r\n        />\r\n\r\n\r\n      </View>\r\n      <FAB\r\n        style={styles.fab}\r\n        icon={{\r\n          name: 'add',\r\n          color: 'white',\r\n        }}\r\n        color=\"blue\"\r\n        onPress={() => addNewModule()}\r\n      >\r\n\r\n      </FAB>\r\n        </View>}\r\n\r\n      \r\n    </ScrollView>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 8,\r\n    backgroundColor: \"aliceblue\",\r\n  },\r\n  box: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  button: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"oldlace\",\r\n    alignSelf: \"flex-start\",\r\n    marginHorizontal: \"1%\",\r\n    marginBottom: 6,\r\n    minWidth: \"48%\",\r\n    textAlign: \"center\",\r\n  },\r\n  selected: {\r\n    backgroundColor: \"coral\",\r\n    borderWidth: 0,\r\n  },\r\n  buttonLabel: {\r\n    fontSize: 12,\r\n    fontWeight: \"500\",\r\n    color: \"coral\",\r\n  },\r\n  selectedLabel: {\r\n    color: \"white\",\r\n  },\r\n  label: {\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n  },\r\n  contentView: {\r\n    flex: 1,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginVertical: 20,\r\n  },\r\n  subHeader: {\r\n    backgroundColor: \"#2089dc\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    paddingVertical: 5,\r\n    marginBottom: 10,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Text, TabView } from 'react-native-elements';\r\nimport CourseEditScreen from './CourseEditScreen';\r\nimport EditModuleScreen from './EditModuleScreen'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ModuleEditComponent from '../../../component/ModuleEditComponent';\r\n\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function EditCourseAndModuleTabScreen({ route, navigation }) {\r\n\r\n    const {courseID, courseName} = route.params;\r\n\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen name=\"Course Edit\" component={CourseEditScreen} initialParams={{courseID, courseName}} />\r\n            <Tab.Screen name=\"Module Edit\" component={EditModuleScreen}  initialParams={{courseID, courseName}} />\r\n        </Tab.Navigator>\r\n    );\r\n};","import React, { useState, useEffect, Component, useContext } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport {Button} from \"react-native-paper\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { AuthContext } from \"../../../store/AuthContext\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function CreateCourse({ navigation }) {\r\n  const apiConnection = new APIConnection();\r\n\r\n  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const categoryData = [\"Mathematic\", \"Physics\", \"English\", \"Computer Science\"];\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  const [selectedCourseTypeIndex, setSelectedCourseTypeIndex] = useState(0);\r\n  const [courseText, setCourseText] = useState(null);\r\n\r\n  const [courseDesc, setCourseDesc] = useState(null);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const token = authCtx.token;\r\n\r\n  function onSaved(courseName, courseDesc) {\r\n    apiConnection\r\n      .postClass(courseName, courseDesc)\r\n      .then(() => delay(300))\r\n      .then((json) => {\r\n        navigation.push(\"Instructor Dashboard\");\r\n      });\r\n  }\r\n\r\n  function getCategoryPickerItems() {\r\n    let result = [];\r\n    for (let i = 0; i < categoryData.length; i++) {\r\n      result.push(\r\n        <Picker.Item key={i} label={categoryData[i]} value={categoryData[i]} />\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n      <Text style={styles.title}> Create Course </Text>\r\n      <Text style={addClass.placeholderText}>Course Name</Text>\r\n\r\n      <TextInput\r\n        style={addClass.courseName}\r\n        value={courseText}\r\n        returnKeyType='done'\r\n        onChangeText={(courseText) => setCourseText(courseText)}\r\n      />\r\n\r\n\r\n      <Text style={styles.placeholderDesc}>Course Description</Text>\r\n      <TextInput\r\n          style={styles.courseDesc}\r\n         // label=\"Course Description\"\r\n          //value={courseDescription}\r\n          returnKeyType='done'\r\n          multiline={true} \r\n          onChangeText={(text) => setCourseDesc(text)}\r\n        />\r\n\r\n\r\n      <View style={styles.bottomContainer}>\r\n        <TouchableOpacity\r\n        style={addClass.addBttn}\r\n          onPress={() => {\r\n            if (courseText == \"\") {\r\n              alert(\"Need to enter class name\");\r\n            } else {\r\n              onSaved(courseText, courseDesc);\r\n            }\r\n            \r\n          }}\r\n        >\r\n\r\n            <Text style={addClass.addText}>Save</Text>\r\n  \r\n        </TouchableOpacity>\r\n      </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\", // ignore this - we'll come back to it\r\n    //justifyContent: 'space-around',\r\n    // flexDirection:'column',\r\n    backgroundColor: \"#E8EAED\",\r\n  },\r\n\r\n  content: {\r\n    flex: 2,\r\n    //alignItems: \"center\",\r\n    //justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  bottomContainer: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n  },\r\n\r\n  boxes: {\r\n    marginTop: 10,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 200,\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  courseDesc: {\r\n    marginTop:40,\r\n    justifyContent: \"center\",\r\n    alignSelf:'center',\r\n    height: 200,\r\n    width: 250,\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n   // marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor:'white',\r\n    marginBottom:0,\r\n\r\n  },\r\n  placeholderDesc: {\r\n\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    //marginBottom: 1,\r\n    marginRight: 105,\r\n    marginBottom:-40,\r\n    marginTop:40,\r\n   \r\n   // marginTop: ,\r\n  },\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n  courseName: {\r\n    position: \"relative\",\r\n    justifyContent: \"center\",\r\n    //alignItems: 'center',\r\n    paddingHorizontal: 10, //inner text spacing\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 250,\r\n    height: 40,\r\n    //marginTop:100\r\n  },\r\n\r\n  addBttn: {\r\n    alignSelf: \"center\",\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    // paddingBottom: 5,\r\n    // position: \"absolute\",\r\n    height: 50,\r\n    width: 200,\r\n\r\n    borderRadius: 50,\r\n    backgroundColor: \"#4970FA\",\r\n    color: \"white\",\r\n    // bottom: 50,\r\n    //margin: 1,\r\n  },\r\n\r\n  addText: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  placeholderText: {\r\n    position: \"relative\",\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 1,\r\n    marginRight: 140,\r\n    marginTop: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\n// Import required components\r\nimport {\r\n  SafeAreaView,\r\n  LayoutAnimation,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  UIManager,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from 'react-native';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\n\r\nexport default function ModuleView({item, onClickFunction,route,lessonID,navigation}) {\r\n    //Custom Component for the Expandable List\r\n    \r\n  const [layoutHeight, setLayoutHeight] = useState(0);\r\n\r\n  //same as component did mount, this method is called when the component is first mounted\r\n  useEffect(() => {\r\n    if (item.isExpanded) {\r\n      setLayoutHeight(null);\r\n    } else {\r\n      setLayoutHeight(0);\r\n    }\r\n  }, [item.isExpanded]);\r\n\r\n  return (\r\n    <View>\r\n      {/*Header of the Expandable List Item*/}\r\n     \r\n      <View style={styles.classes}>\r\n      <TouchableOpacity\r\n        activeOpacity={0.8}\r\n        onPress={onClickFunction}\r\n        style={styles.header}>\r\n\r\n        <Text style={styles.headerText} >{item.Module_Title}</Text>\r\n        <FontAwesome5 style={{transform:[{rotate: layoutHeight != 0? '180deg': '0deg'}] }} name={'angle-down'} size={15} color={'white'}/>\r\n        \r\n    \r\n      </TouchableOpacity>\r\n       </View>\r\n      <View\r\n        style={{\r\n          height: layoutHeight,\r\n          overflow: 'hidden',\r\n         \r\n          // alignContent:'center',\r\n          // alignItems:'center',\r\n          // justifyContent:'center',\r\n        \r\n        }}>\r\n        {/*Content under the header of the Expandable List Item*/}\r\n        {item.Lessons.map((item, key) => (\r\n          <TouchableOpacity\r\n            key={key}\r\n            style={styles.content}\r\n            onPress={() =>  navigation\r\n              .navigate('LessonCreation', {\r\n               lessonID : item.lesson_id})\r\n        //  alert('Id: ' + item.lesson_id + ' val: ' + item.lesson_descrip)\r\n          }>\r\n            <Text style={styles.text}>\r\n               {item.lesson_name}\r\n            </Text>\r\n            {/* <View style={styles.separator} /> */}\r\n            \r\n          </TouchableOpacity>\r\n          \r\n        ))}\r\n        \r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    classes:{\r\n      // backgroundColor: 'black',\r\n     \r\n      alignItems:'center',\r\n      padding:5,\r\n      borderRadius:10\r\n    },\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    titleText: {\r\n      flex: 1,\r\n      fontSize: 22,\r\n      fontWeight: 'bold',\r\n    },\r\n    header: {\r\n      width:345,\r\n      alignItems:'center',\r\n      borderRadius:10,\r\n      borderWidth:.85,\r\n      //borderColor:'#E8EAED',\r\n      flexDirection:'row',\r\n      justifyContent:'space-between',\r\n       backgroundColor: '#3385ff',\r\n      padding: 20,\r\n    },\r\n    headerText: {\r\n      fontSize: 16,\r\n      fontWeight: '500',\r\n      color: 'white'\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: 'black',\r\n      width: '95%',\r\n      marginLeft: 16,\r\n      marginRight: 16,\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: 'black',\r\n      padding: 10,\r\n    },\r\n    content: {\r\n      borderRadius:10,\r\n      borderColor:'black',\r\n      borderWidth:.75,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      backgroundColor: 'white',\r\n      margin:2\r\n    },\r\n  });","import { useEffect, useState, useContext, useLayoutEffect } from \"react\";\r\nimport * as React from \"react-native\";\r\nimport { BottomSheet, Button, ListItem } from \"react-native-elements\";\r\n\r\nimport { Component } from \"react\";\r\n//import { render } from 'react-dom';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  Platform,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport FontAwesome5 from \"react-native-vector-icons/FontAwesome5\";\r\nimport Icon from \"react-native-vector-icons/SimpleLineIcons\";\r\n// import {AuthContext} from '../store/AuthContext';\r\nimport ModuleView from \"../../../component/ModuleView\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n//  import Course from '../component/course';\r\n\r\n\r\n\r\nexport default function InstructorCourseView({ navigation, route }) {\r\n  //retrieving course name and courseID from route.params\r\n  const { courseID, courseName } = route.params;\r\n\r\n\r\n\r\n\r\n  //-----------API Connection Code----------\r\n  const isFocused = useIsFocused();\r\n\r\n  const [finalData, setFinalData] = useState([]);\r\n  const [lessonID, setLessonID] = useState(0);\r\n\r\n  const apiConnection = new APIConnection();\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getAllModulesForClass(courseID)\r\n        .then((json) => {\r\n\r\n          let data = processAPIModuleData(json);\r\n          data.forEach(element => {\r\n\r\n            console.log('data :' + element.Module_ID);\r\n            apiConnection.getLessonsInModule(element.Module_ID)\r\n              .then((json) => {\r\n                processAPILesson(element.Lessons, json);\r\n\r\n              });\r\n\r\n          })\r\n\r\n          setFinalData(data);\r\n\r\n        })\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n\r\n  function processAPILesson(lessonArr, lessonData) {\r\n\r\n    for (let i = 0; i < lessonData.length; i++) {\r\n      let newLesson = {};\r\n      newLesson['lesson_id'] = lessonData[i].lesson_id;\r\n      newLesson['lesson_name'] = lessonData[i].lesson_name;\r\n      newLesson['lesson_descrip'] = lessonData[i].lesson_descrip;\r\n      newLesson['lesson_index'] = lessonData[i].lesson_index;\r\n\r\n      lessonArr[i] = newLesson;\r\n\r\n    }\r\n    return lessonArr;\r\n  }\r\n\r\n\r\n  //Morph json from API into an array that we can use\r\n  function processAPIModuleData(json) {\r\n    let returnData = []\r\n    for (let i = 0; i < json.length; i++) {\r\n      let newModule = {};\r\n      newModule['isExpanded'] = false;\r\n      newModule['Module_Title'] = json[i].module_name;\r\n      newModule['Module_ID'] = json[i].module_id;\r\n      newModule['instructorID'] = json[i].instructor_id;\r\n      newModule['Lessons'] = [];\r\n\r\n      returnData[i] = newModule;\r\n\r\n\r\n    }\r\n\r\n    return returnData;\r\n  }\r\n  //---------------------------------------\r\n\r\n  //Morph json from API into an array that we can use\r\n  function processAPIData(json) {\r\n    let returnData = [];\r\n    for (let i = 0; i < json.length; i++) {\r\n      let newModule = {};\r\n      newModule[\"isExpanded\"] = false;\r\n      newModule[\"Module_Title\"] = json[i].module_name;\r\n      let newLessonArray = [];\r\n      for (let j = 0; j < json[i].lessons.length; j++) {\r\n        newLessonArray[j] = json[i].lessons[j];\r\n        setLessonID(newLessonArray[j].lesson_id);\r\n        console.log(lessonID);\r\n      }\r\n      newModule[\"Lessons\"] = newLessonArray;\r\n      returnData[i] = newModule;\r\n    }\r\n    return returnData;\r\n  }\r\n\r\n\r\n  if (Platform.OS == \"android\") {\r\n    UIManager.setLayoutAnimationEnabledExperimental(true);\r\n  }\r\n  //this is used to signified the component is abou tto be animated (like setState())\r\n  //could be used to define animation property\r\n  const updateLayout = (index) => {\r\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\r\n    const array = [...finalData];\r\n\r\n    array[index][\"isExpanded\"] = !array[index][\"isExpanded\"];\r\n\r\n    setFinalData(array);\r\n  };\r\n\r\n\r\n  return (\r\n    <View // onLayout={(event)=>{\r\n      style={{ flex: 2, alignItems: \"stretch\" }}\r\n    >\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n\r\n\r\n        <View style={styles.courseTitleBackground}>\r\n          <Text\r\n            style={{\r\n              fontSize: 25,\r\n              color: \"white\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {courseName}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* <View onLayout={(event)=>{\r\n            var{x,y,width,Viewheight} = event.nativeEvent.layout; cheight =Viewheight}} > */}\r\n        <ScrollView>\r\n          <View style={styles.lessContainer}>\r\n            {/* {getLesson()}  */}\r\n            {/* <SafeAreaView style={{ }}> */}\r\n\r\n            <View style={styles.container}>\r\n              <View style={{ flexDirection: \"row\", padding: 10 }}>\r\n                <TouchableOpacity\r\n                  onPress={() => setMultiSelect(!multiSelect)}\r\n                ></TouchableOpacity>\r\n              </View>\r\n              <ScrollView>\r\n                {finalData.map((item, key) => (\r\n                  <ModuleView\r\n                    key={key}\r\n                    onClickFunction={() => {\r\n                      updateLayout(key);\r\n                    }}\r\n                    route={route}\r\n                    navigation={navigation}\r\n                    // lessonID={lessonID}\r\n                    item={item}\r\n                  />\r\n                ))}\r\n              </ScrollView>\r\n            </View>\r\n            {/* </SafeAreaView> */}\r\n          </View>\r\n        </ScrollView>\r\n\r\n        <TouchableOpacity\r\n          style={styles.editButton}\r\n          onPress={() => navigation.navigate('EditCourseAndModule', {\r\n            courseID: courseID,\r\n            courseName: courseName\r\n          })}\r\n        >\r\n          <FontAwesome5 name={\"edit\"} color={\"white\"} size={20} />\r\n        </TouchableOpacity>\r\n        {/* </View> */}\r\n      </SafeAreaView>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  courseTitleBackground: {\r\n    backgroundColor: \"#4970FA\",\r\n    padding: 20,\r\n  },\r\n\r\n  editButton: {\r\n    alignSelf: 'flex-end',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 80,\r\n    height: 80,\r\n    paddingBottom: 5,\r\n    position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 50,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    right: 20,\r\n    bottom: 40\r\n  },\r\n  titleStyle: {\r\n    color: \"white\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    // borderWidth: 3,\r\n    // borderColor:'black',\r\n    width: 350,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n  },\r\n  menu: {\r\n    // alignItems:'flex-start',\r\n\r\n    alignSelf: \"flex-start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#3385ff\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  lesson: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lessonCompletion: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignSelf: \"center\",\r\n    // justifyContent:'space-between'\r\n  },\r\n  lessContainer: {\r\n    // backgroundColor: 'gray',\r\n    // shadowColor:'#171717',\r\n    // shadowOffset: {width: -2, height: 4},\r\n    // shadowOpacity: 0.2,\r\n    // shadowRadius: 3,\r\n    flex: 20,\r\n    marginTop: 10,\r\n    width: 350,\r\n\r\n    alignSelf: \"center\",\r\n    // borderColor:'#3385ff',\r\n    // borderWidth:3,\r\n    // borderRadius:20,\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  lessonNum: {\r\n    backgroundColor: `#0000ff`,\r\n    marginTop: 50,\r\n    width: 80,\r\n    height: 25,\r\n    borderRadius: 78,\r\n  },\r\n  searchIcon: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  homeIcon: {\r\n    alignSelf: \"flex-start\",\r\n    marginLeft: 5,\r\n  },\r\n  settingIcon: {\r\n    alignSelf: \"center\",\r\n  },\r\n  profileIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginRight: 5,\r\n  },\r\n});\r\n","import React, { Children,useState,useCallback, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View,Pressable,Modal,Text,ScrollView, Alert, StyleSheet, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport { AuthContext } from '../store/AuthContext';\r\nimport { Button } from 'react-native-paper';\r\n\r\n\r\n\r\n\r\n\r\nconst Content = (props) => {\r\n        \r\n    return (\r\n        \r\n\r\n        \r\n\r\n        <View style={styles.container}>\r\n     \r\n\r\n     \r\n    \r\n            <Text selectable={true} style={styles.textStyle}>\r\n           {props.text}\r\n            </Text>\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      //  flex:1,\r\n       // alignItems:'stretch',\r\n    \r\n        //margin:5,\r\n       //borderWidth:1,\r\n       borderColor: '#C0C0C0',\r\n      \r\n    \r\n    \r\n      },\r\n      textStyle: {\r\n        //  flex:1,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginHorizontal:5,\r\n        marginBottom:10,\r\n\r\n        \r\n    \r\n      },\r\n      textHolder: {\r\n        flex:1,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        minWidth: Dimensions.get('window').width -20,\r\n        //paddingBottom:100,\r\n        //maxHeight: 800,\r\n\r\n      \r\n\r\n  \r\n \r\n       \r\n        //minWidth:Dimensions.get('window').width-15,\r\n      \r\n  \r\n\r\n      \r\n    \r\n      },\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\nexport default Content;\r\n","import React, { Children,useState,useCallback, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View,Pressable,Modal,Text,ScrollView, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Video, AVPlaybackStatus } from 'expo-av';\r\nimport { WebView } from 'react-native-webview';\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport { AuthContext } from '../store/AuthContext';\r\n\r\n\r\n\r\n\r\nconst TextContent = (props) => {\r\n    \r\n    //const [height, setHeight] = useState(42);\r\n\r\n \r\n\r\n   \r\n    \r\n    return (\r\n        \r\n\r\n        \r\n\r\n        <View style={styles.container}>\r\n     \r\n\r\n     \r\n\r\n\r\n            <Text style={styles.textStyle}>\r\n        {props.TextInput}\r\n         </Text>\r\n\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n       // flex:1,\r\n        alignItems:'stretch',\r\n       // marginBottom:5,\r\n       // margin:5\r\n       //borderWidth:1,\r\n       borderColor: '#C0C0C0',\r\n      \r\n    \r\n    \r\n      },\r\n      textStyle: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginHorizontal:5,\r\n        marginTop:25,\r\n        \r\n    \r\n      },\r\n      textHolder: {\r\n        flex:2,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        minWidth: Dimensions.get('window').width -20,\r\n\r\n   \r\n        \r\n        //paddingBottom:100,\r\n        //maxHeight: 800,\r\n\r\n      \r\n\r\n  \r\n \r\n       \r\n        //minWidth:Dimensions.get('window').width-15,\r\n      \r\n  \r\n\r\n      \r\n    \r\n      }\r\n\r\n\r\n\r\n});\r\n\r\n\r\nexport default TextContent;\r\n","import React, { Children, useState, useCallback, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View,TextInput, Pressable, Modal, Text, ScrollView, Alert, StyleSheet, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Video, AVPlaybackStatus } from 'expo-av';\r\n//import { TextInput } from 'react-native-paper';\r\n\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport Content from '../../../component/CreateComponent';\r\nimport TextContent from '../../../component/CreateText';\r\nimport { Button } from 'react-native-paper';\r\n\r\n\r\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiaWF0IjoxNjUwNzU5MTg0LCJleHAiOjE2NTA4NDU1ODR9.yOWeS1cXAYZEXHyAkG5ncmznm64Mtu8vvcF9e_pw8WQ\r\n///1ba2a0e8-473d-4410-a5fb-2c8a5299ecb6\r\n\r\n\r\nexport default function CreateContent({navigation, route}) {\r\n\r\n  const {unitID, unitName} = route.params;\r\n\r\n\r\n\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const token = authCtx.token;\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [text, setText] = useState('');\r\n  const [textItems, setTextItems] = useState([]);\r\n  const [data, setData] = useState();\r\n\r\n  const video = React.useRef(null);\r\n  const [unitNameEntry, setUnitNameEntry] = useState(unitName);\r\n\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n\r\n\r\n  //Youtube URL \r\n  const [modalVisible1, setModalVisible1] = useState(false);\r\n  //bottom modal pop\r\n  const [modalVisible2, setModalVisible2] = useState(false);\r\n\r\n  //quiz modal\r\n  const [modalVisible3, setModalVisible3] = useState(false);\r\n\r\n\r\n\r\n\r\n  const [link, setLink] = useState('');\r\n  const [linkItems, setLinkItems] = useState([]);\r\n\r\n  const [linkItemsAPI, setLinkItemsAPI] = useState([]);\r\n  const [itemsAPI, setItemsAPI] = useState([]);\r\n\r\n  const [videoDisplay, setVideoDisplay] = useState([]);\r\n\r\n\r\n  const apiConnection = new APIConnection();\r\n\r\n  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n  async function onSaved(content, content2,unit_id) {\r\n\r\n\r\n    if(unitNameEntry != unitName)\r\n    {\r\n      await apiConnection.editUnitName(unitID, unitNameEntry)\r\n    }\r\n\r\n\r\n    apiConnection.editUnitContent(content, content2, unitID).then(() => delay(300)).then((json) => {\r\n      setLink(link);\r\n      // navigation.push('Instructor Dashboard');\r\n      navigation.goBack();\r\n      ///https://www.youtube.com/watch?v=cBxyB788_5w\r\n    })\r\n  }\r\n\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    //your code here\r\n\r\n    \r\n    if (isFocused) {\r\n      apiConnection.getUnitByID(unitID).then((unitjson) => {\r\n        setUnitNameEntry(unitjson.unit_name)\r\n      })\r\n      apiConnection.getUnitContent(unitID).then((json) => {\r\n        setData(json);\r\n        let unitContent = json.unit_content;\r\n        setVideoDisplay(json.unit_content);\r\n        setLinkItems([textInput(json.unit_content)]);\r\n        setLinkItemsAPI(link);\r\n        setTextItems([json.unit_content_type])\r\n        setLink(json.unit_content);\r\n        setText(json.unit_content_type)\r\n      })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function YouTubeGetID(url) {\r\n    url = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n    return (url[2] !== undefined) ? url[2].split(/[^0-9a-z_\\-]/i)[0] : url[0];\r\n  }\r\n\r\n  //Checks for links and matches if they are youtube links. add to array\r\n  const handleLinks = () => {\r\n    //setLink(null)\r\n    var urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n    if (link == null || !JSON.stringify(link).match(urlRegex)) {\r\n      Alert.alert(\"Wrong Input\", \"Must enter a Youtube URL\");\r\n      //setLink(\"\");\r\n      return null;\r\n    }\r\n\r\n\r\n    setLinkItems([textInput(link)]);\r\n    setLinkItemsAPI(link);\r\n    //onSaved(linkItems);\r\n    //setLink('');\r\n    console.log(linkItems);\r\n\r\n  }\r\n\r\n  //Checks if it's text. add to array\r\n  const handleText = () => {\r\n    //setLink(null)\r\n    if (text == null) {\r\n      Alert.alert(\"Wrong Input\", \"Must enter text\");\r\n      setText(text);\r\n      return null;\r\n\r\n    }\r\n\r\n    setTextItems(text);\r\n    //setTextItemsAPI([...textItemsAPI, text])\r\n    //onSaved(text);\r\n    //setText(null);\r\n\r\n\r\n  }\r\n\r\n  function deleteVideo () {\r\n    if (linkItems == null || linkItems == \"\"  ) {\r\n      return null;\r\n\r\n\r\n    } else if (linkItems != \"\" || linkItems != null) {\r\n      return  <Button icon=\"delete\" mode=\"contained\" color='red' onPress={() => {setLinkItems(null); setLink(\"\")}}>\r\n      Delete</Button>\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function deleteText () {\r\n    if (textItems == null || textItems == \"\"  ) {\r\n      return null;\r\n\r\n\r\n    } else if (textItems != \"\" || textItems != null) {\r\n      return  <Button icon=\"delete\" mode=\"contained\" color='red' onPress={() => {setTextItems(null); setText(\"\")}}>\r\n      Delete</Button>\r\n    }\r\n\r\n  }\r\n\r\n  //turns valid link into component\r\n  function textInput(videolink) {\r\n    if (videolink == \"\" || videolink == null) {\r\n     // Alert.alert(\"Wrong Input\", \"Must enter a Youtube URL\");\r\n    // setLink(link)\r\n      //setLink('');\r\n      return \"\";\r\n    } \r\n\r\n    var linkInput = JSON.stringify(videolink);\r\n\r\n    if (Platform.OS === 'web') {\r\n\r\n      return <div style={{ marginTop: 10 }}>\r\n        <ReactPlayer\r\n          url={linkInput}\r\n          height={200}\r\n          width={400}\r\n\r\n          controls={true} />\r\n      </div>\r\n\r\n\r\n    } else if (Platform.OS == 'ios' || Platform.OS === 'android') {\r\n\r\n      return <YoutubePlayer\r\n      key={0}\r\n        height={270}\r\n        width={400}\r\n        play={playing}\r\n        videoId={YouTubeGetID(linkInput)}\r\n        webViewStyle={{ bottom: -40 }}\r\n      //videoId={\"iee2TATGMyI\"}\r\n      //https://youtu.be/cBxyB788_5w\r\n\r\n      />\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  //https://www.youtube.com/watch?v=cBxyB788_5w\r\n  //https://www.youtube.com/watch?v=JfVOs4VSpmA\r\n  //https://www.youtube.com/watch?v=jrLhP5sK2wI\r\n\r\n\r\n\r\n\r\n  return (\r\n    /**/\r\n    <View style={styles.container}>\r\n      <TextInput\r\n      style={styles.title}\r\n      defaultValue={unitNameEntry}\r\n      placeholder='Change Unit Name Here'\r\n      value={unitNameEntry}\r\n      onChangeText={text => setUnitNameEntry(text)}\r\n    />\r\n      <View style={styles.content}>\r\n\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible1}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible1(!modalVisible1);\r\n          }}\r\n        >\r\n\r\n          <TouchableWithoutFeedback>\r\n\r\n            <View style={modalView.centeredView}>\r\n              <View style={modalView.modalView}>\r\n                <Text style={modalView.modalText}>Enter a Youtube Link</Text>\r\n\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n                  <TextInput style={modalView.textInput} placeholder={'Enter URL'} value={link} onChangeText={newText => setLink(newText)} />\r\n                </KeyboardAvoidingView>\r\n\r\n                <TouchableOpacity\r\n                  style={[modalView.button, modalView.buttonClose]}\r\n                  onPress={() => { handleLinks(), setModalVisible1(!modalVisible1); }}\r\n                >\r\n                  <Text style={modalView.textStyle}>Done</Text>\r\n                </TouchableOpacity>\r\n\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n\r\n        </Modal>\r\n\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible3}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible3(!modalVisible3);\r\n          }}\r\n        >\r\n\r\n          <TouchableWithoutFeedback>\r\n\r\n            <View style={modalView.centeredView}>\r\n              <View style={modalView.modalView}>\r\n                <Text style={modalView.modalText}>Enter text</Text>\r\n\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n                  <TextInput style={modalView.textInput2} multiline={true} editable={true} placeholder={'Enter text'} value={text} onChangeText={newText => setText(newText)} />\r\n                </KeyboardAvoidingView>\r\n\r\n                <TouchableOpacity\r\n                  style={[modalView.button, modalView.buttonClose]}\r\n                  onPress={() => { handleText(), setModalVisible3(!modalVisible3) }}\r\n                >\r\n                  <Text style={modalView.textStyle}>Done</Text>\r\n                </TouchableOpacity>\r\n\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n\r\n        </Modal>\r\n\r\n\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible2}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible2(!modalVisible2);\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            activeOpacity={1}\r\n            onPressOut={() => { setModalVisible2(false) }}\r\n          >\r\n            <TouchableWithoutFeedback>\r\n              <View style={bottomModal.centeredView}>\r\n                <View style={bottomModal.modalView}>\r\n                  <Text style={bottomModal.modalText}>Choose Content:</Text>\r\n\r\n                  <TouchableOpacity style={[bottomModal.button, bottomModal.buttonClose]} onPress={() => { setModalVisible1(true); setModalVisible2(!modalVisible2) }}>\r\n                    <Text style={addClass.textStyle}>Add Video</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity style={[bottomModal.button, bottomModal.buttonClose]} onPress={() => { setModalVisible3(!modalVisible3); setModalVisible2(!modalVisible2) }}>\r\n                    <Text style={addClass.textStyle}>Add Text</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity style={[bottomModal.button, bottomModal.buttonClose]} onPress={() => { {setModalVisible2(!modalVisible2); navigation.navigate('Edit Quiz')} }}>\r\n                    <Text style={addClass.textStyle}>Add Quiz</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <Text style={bottomModal.textStyle}>Hide Modal</Text>\r\n\r\n                </View>\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          </TouchableOpacity>\r\n        </Modal>\r\n\r\n        <ScrollView contentContainerStyle={styles.scroll}>\r\n\r\n          \r\n\r\n\r\n            \r\n\r\n\r\n           \r\n             <View>\r\n                <Content text={linkItems}/>\r\n                {deleteVideo()}\r\n\r\n                    </View>\r\n\r\n           \r\n                \r\n\r\n  \r\n          \r\n\r\n\r\n\r\n\r\n\r\n          <TextContent style={styles.textStyle} TextInput={textItems} />\r\n          {deleteText()}\r\n \r\n\r\n\r\n\r\n      </ScrollView>\r\n\r\n\r\n      </View>\r\n\r\n\r\n\r\n\r\n\r\n      <View style={styles.bottomContainer}>\r\n        <Button icon=\"content-save-outline\" mode=\"contained\" style={{ padding: 7, backgroundColor: '#4970FA' }} onPress={() => { onSaved(link,text) }}>\r\n          Save\r\n        </Button>\r\n        <Text style={{ alignSelf: 'center', marginBottom: 95, fontWeight: \"bold\", }}></Text>\r\n\r\n\r\n\r\n\r\n        <TouchableOpacity style={addClass.addText}  onPress={() => setModalVisible2(true)}>\r\n          \r\n            <Text style={addClass.textStyle}>Add Content</Text>\r\n\r\n        </TouchableOpacity>\r\n\r\n\r\n\r\n      </View>\r\n\r\n\r\n\r\n\r\n\r\n    </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n\r\n\r\n  },\r\n\r\n  scroll: {\r\n    //flex:1,\r\n    alignItems: 'center',\r\n\r\n\r\n  },\r\n\r\n  content: {\r\n    flex: 2,\r\n    alignSelf: 'center',\r\n    marginBottom: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n  },\r\n\r\n\r\n  bottomContainer: {\r\n    //  flex:1,\r\n    justifyContent: 'flex-end',\r\n\r\n    shadowColor: \"black\",\r\n    backgroundColor: '#E8EAED',\r\n\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: 'black',\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n\r\n  },\r\n\r\n  boxes: {\r\n    marginTop: 10,\r\n    backgroundColor: 'white',\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 200,\r\n    textAlign: \"center\",\r\n    alignItems: \"center\"\r\n\r\n  },\r\n\r\n  video: {\r\n    alignSelf: 'center',\r\n    width: 320,\r\n    height: 200,\r\n  },\r\n\r\n  textStyle: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst bottomModal = StyleSheet.create({\r\n  centeredView: {\r\n    //flex: 1,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: 'center',\r\n    marginTop: Dimensions.get('window').height - 300,\r\n    //marginBottom:800\r\n  },\r\n  modalView: {\r\n    //  flex: 1,\r\n    // marginBottom: 300,\r\n    //position:'absolute',\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    width: Dimensions.get('window').width,\r\n    paddingBottom: 500,\r\n    // maxHeight:Dimensions.get('window').height - 50,\r\n    // marginBottom: 300,\r\n    //marginTop: 500,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    //flex:1,\r\n    //justifyContent: 'space-between',\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    margin: 10,\r\n    padding: 10,\r\n    elevation: 2,\r\n    //alignSelf: 'auto'\r\n\r\n    //position:'absolute',\r\n\r\n\r\n  },\r\n  buttonOpen: {\r\n    //marginBottom:100,\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    width: 200,\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    alignItems: 'center'\r\n  },\r\n  textStyle: {\r\n\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    alignSelf: 'center'\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n    alignSelf: 'center'\r\n\r\n  },\r\n  textInput: {\r\n    height: 30,\r\n    width: 200,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n  }\r\n\r\n\r\n});\r\n\r\nconst modalView = StyleSheet.create({\r\n  centeredView: {\r\n    // flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: Dimensions.get('window').height - 600\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    width: 350,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: 300,\r\n    marginHorizontal:1,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n\r\n  },\r\n\r\n  textInput2: {\r\n    height: 100,\r\n    width: 275,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n  }\r\n\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n\r\n  addText: {\r\n    alignSelf: 'center',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 250,\r\n    height: 50,\r\n    paddingBottom: 5,\r\n    position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    //right: 20,\r\n    bottom: 25\r\n\r\n  },\r\n  addURL: {\r\n    alignSelf: 'flex-start',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 150,\r\n    height: 50,\r\n    paddingBottom: 5,\r\n    //position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    //right: 20,\r\n    bottom: 40\r\n\r\n  },\r\n\r\n  addQuiz: {\r\n    alignSelf: 'flex-end',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 150,\r\n    height: 50,\r\n    paddingBottom: 5,\r\n    //position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    //right: 20,\r\n    bottom: 40\r\n\r\n  },\r\n\r\n  searchHolder: {\r\n\r\n\r\n\r\n    position: 'relative',\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: 'white',\r\n    borderColor: '#C0C0C0',\r\n    //bottom:100,\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    width: 250,\r\n\r\n    //justifyContent:'space-between'\r\n    marginTop: 25,\r\n\r\n\r\n    //right: 0,\r\n\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n  textStyle: {\r\n\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n}\r\n\r\n);\r\n\r\n\r\n","import * as React from 'react-native';\r\nimport {\r\n    Text, StyleSheet,\r\n    View, TouchableOpacity, SafeAreaView,\r\n    FlatList, TextInput, ScrollView\r\n} from 'react-native';\r\n\r\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\r\n\r\nconst UnitEditCard = ({unitName, onPress, onDelete, unitID}) => (\r\n\r\n    <View\r\n    style={styles.cardContainer}\r\n    >\r\n  <Card\r\n\r\n  onPress={() => onPress(unitID, unitName)}>\r\n    <Card.Content  >\r\n  {/* <Title>{unitName}</Title> */}\r\n      <View style={{width:110}}>\r\n      <Text  numberOfLines={3} style={{fontWeight:'bold', fontSize:15}}>{unitName}</Text>\r\n      </View>\r\n    </Card.Content>\r\n    <Card.Actions>\r\n      <Button\r\n      onPress={() => onDelete(unitID)}>Delete</Button>\r\n    </Card.Actions>\r\n  </Card>\r\n    </View>\r\n\r\n);\r\n\r\nexport default UnitEditCard;\r\n\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        padding: 10,\r\n       // flex: 1\r\n\r\n    },\r\n})","import { useEffect, useState } from 'react';\r\nimport * as React from 'react-native';\r\nimport {\r\n    Text, StyleSheet,\r\n    View, TouchableOpacity,\r\n    FlatList, TextInput, ScrollView, Dimensions,Alert,\r\n    Platform\r\n} from 'react-native';\r\n\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport { Icon } from 'react-native-elements';\r\n\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport UnitEditCard from '../../../component/UnitCardInstructor';\r\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\n\r\n\r\nexport default function LessonCreation({ navigation, route }) {\r\n\r\n    //  const {lesssonID} = route.params;\r\n    const [newLessonName, setLessonName] = useState('');\r\n    const [myData, setMyData] = useState([]);\r\n    const [lessonData, setLessonData] = useState([]);\r\n\r\n    const { lessonID, lessonName } = route.params;\r\n\r\n    // isFocused tells us whether we are on the screen or not \r\n    const isFocused = useIsFocused();\r\n    const apiConnection = new APIConnection();\r\n    useEffect(() => {\r\n        if (isFocused) {\r\n            console.log('PASSED IN LessonID ' + lessonID);\r\n            getLessonInfo(lessonID);\r\n            refreshPage()\r\n\r\n        }\r\n    }, [isFocused]);\r\n\r\n\r\n\r\n    function onDelete(lessonID)\r\n    {\r\n      apiConnection.deleteLesson(lessonID);\r\n       navigation.goBack();\r\n    }\r\n\r\n    function refreshPage() {\r\n        apiConnection\r\n            .getSectionsPerLesson(lessonID)\r\n            .then((json) => {\r\n                let d = json;\r\n                setMyData(d);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    function getLessonInfo(lesson_id) {\r\n        apiConnection.getSingleLessonForLessonCreation(lesson_id)\r\n            .then((json) => {\r\n                let data = json;\r\n                setLessonData(data)\r\n            })\r\n    }\r\n\r\n    function onUnitPress(unitID, unitName) {\r\n        navigation.navigate('Content Edit', {\r\n            unitID: unitID,\r\n            unitName: unitName,\r\n\r\n        })\r\n    }\r\n\r\n\r\n    async function changeName(lessonName, LessonID, lessDescription, lessIndex, modID) {\r\n        await apiConnection.putLessonNameForLessonCreation(lessonName, LessonID, lessDescription,\r\n            lessIndex, modID)\r\n    }\r\n\r\n    async function addUnit() {\r\n        await apiConnection.addUnitForLessonCreation(lessonID);\r\n        refreshPage();\r\n    }\r\n\r\n    async function deleteUnit(unitID) {\r\n        await apiConnection.deleteUnit(unitID);\r\n        refreshPage();\r\n\r\n    }\r\n\r\n    function alertDeleteLesson(){\r\n        Alert.alert(\r\n            \"Warning\",\r\n            \"Are you sure you want to delete this Lesson? You will not be able to recover it.\",\r\n            [\r\n              {\r\n                text: \"Cancel\",\r\n                style: \"cancel\",\r\n              },\r\n              {\r\n                text: \"Delete\",\r\n                onPress: () => { onDelete(lessonID) }\r\n      \r\n              }\r\n            ],\r\n            {\r\n              cancelable: true,\r\n      \r\n            }\r\n          );\r\n    }\r\n\r\n\r\n    return (\r\n        //   <View style={{flex:2}}>\r\n        <View>\r\n            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                {/* <ScrollView> */}\r\n                <Text style={{ fontSize: 20 }}>\r\n                    {newLessonName}\r\n                </Text>\r\n\r\n\r\n                <View style={{ flexDirection: 'row', marginTop: 50 }}>\r\n\r\n                    <View style={{\r\n                        alignItems: 'center', justifyContent: 'center',\r\n                        borderRadius: 2, borderColor: 'black', width: 100,\r\n                        height: 40,\r\n                    }}>\r\n                        <Text style={{ textAlign: 'center', fontSize: 13, fontWeight: 'bold', color: 'black' }}>\r\n                            Change Lesson Name:\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={{ justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n                        <TextInput defaultValue={lessonName} maxLength={100} style={{\r\n                            backgroundColor: 'silver', borderWidth: 2,\r\n                            borderColor: 'black', borderRadius: 5, width: 150, height: 40\r\n                        }}\r\n                            onChangeText={(newText) => {\r\n                                setLessonName(newText);\r\n\r\n                            }} />\r\n\r\n\r\n                    </View>\r\n\r\n                    {/* {console.log('LESSON_DESCRIPTION: '+ lessonData.lesson_descrip + \r\n                            \"\\n LESSON_INDEX : \" + lessonData.lesson_index + \r\n                            \" \\n LESSON_MODULE_ID: \" + lessonData.module_id\r\n                            + \"\\n Instructor_ID \" + instID)}  */}\r\n\r\n                    <TouchableOpacity style={styles.saveButton} onPress={() => {\r\n                        if (newLessonName != '') {\r\n                            changeName(newLessonName, lessonID, lessonData.lesson_descrip,\r\n                                lessonData.lesson_index, lessonData.module_id);\r\n                            alert('Saved ' + newLessonName + ' as new name')\r\n                        }\r\n                        else { alert('No new name was entered') }\r\n                    }}>\r\n                        <Text style={{ color: 'white' }}> Save Name</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style={styles.buttonContainer}\r\n                        onPress={() =>\r\n                            {\r\n                                if(Platform.OS == 'web')\r\n                                {    onDelete(lessonID)\r\n                               \r\n                                }\r\n                                else if(Platform.OS == 'android' || Platform.OS == 'ios')\r\n                                {\r\n                                    alertDeleteLesson();\r\n                                }\r\n\r\n                            }\r\n\r\n                            }\r\n                    >\r\n                        <Icon name=\"delete\" size={30} color=\"#e33057\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                {/* Displays the list of units*/}\r\n\r\n\r\n                {myData.length >= 1 ?\r\n                    <FlatList\r\n                        nestedScrollEnabled\r\n                        contentContainerStyle={{ width: Dimensions.get('window').width, alignItems: 'center' }}\r\n                        ListEmptyComponent={\r\n                            <Text>This lesson doesn't have any content, please click the add button</Text>\r\n                        }\r\n\r\n\r\n                        numColumns={2}\r\n\r\n                        data={myData}\r\n                        keyExtractor={(item) => item.unit_id}\r\n                        //  contentContainerStyle={{flexGrow:2}}\r\n                        renderItem={({ item, index }) =>\r\n\r\n                            <UnitEditCard\r\n                                unitName={item.unit_name}\r\n                                unitID={item.unit_id}\r\n                                onPress={onUnitPress}\r\n                                onDelete={deleteUnit}\r\n\r\n                            ></UnitEditCard>\r\n\r\n\r\n\r\n                        }\r\n\r\n                    /> : <Text>No content</Text>}\r\n\r\n                <View>\r\n\r\n                    <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n\r\n\r\n                    </View>\r\n\r\n\r\n\r\n\r\n                    {/* Displays the addButton */}\r\n\r\n\r\n                </View>\r\n\r\n\r\n\r\n\r\n                {/* </View> */}\r\n\r\n\r\n\r\n\r\n\r\n                {/* </ScrollView> */}\r\n            </View>\r\n\r\n\r\n            <TouchableOpacity style={styles.addButton} onPress={() => { addUnit() }}>\r\n                <Text style={styles.addTextButton}>+</Text>\r\n            </TouchableOpacity>\r\n\r\n\r\n\r\n        </View>\r\n        /* // </View> */\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    buttonContainer: {\r\n        marginVertical: 10,\r\n        marginHorizontal: 10,\r\n      },\r\n    saveButton: {\r\n        backgroundColor: '#3385ff',\r\n        height: 40,\r\n        padding: 5,\r\n        borderWidth: 2,\r\n        borderColor: 'white',\r\n        borderRadius: 4,\r\n        marginLeft: 15\r\n    },\r\n    cardContainer: {\r\n        padding: 10\r\n\r\n    },\r\n\r\n    bottomContainer: {\r\n        justifyContent: 'flex-end',\r\n        //margin:1,\r\n\r\n    },\r\n    // item: {\r\n    //     backgroundColor: '#f9c2ff',\r\n    //     padding: 20,\r\n    //     marginVertical: 8,\r\n    //     marginHorizontal: 16,\r\n    // },\r\n    sectionText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        textAlign: 'center'\r\n    },\r\n    deleteButton: {\r\n\r\n    },\r\n\r\n    addButton: {\r\n        alignSelf: 'flex-end',\r\n        textAlign: 'center',\r\n        flex: 1,\r\n\r\n        backgroundColor: '#4970FA',\r\n        shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n        shadowOpacity: 2,\r\n        shadowOffset: { width: 1, height: 2 },\r\n        alignSelf: 'center',\r\n\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 80,\r\n        height: 80,\r\n        paddingBottom: 5,\r\n\r\n\r\n        position: \"absolute\",\r\n\r\n        top: Dimensions.get('window').height - 300,\r\n        right: 20,\r\n        // bottom:40,\r\n        borderRadius: 50,\r\n\r\n        //height: 60,\r\n\r\n\r\n\r\n    },\r\n\r\n    addTextButton: {\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        fontSize: 40,\r\n\r\n    },\r\n    homeIcon: {\r\n        alignSelf: 'flex-start',\r\n        marginLeft: 10\r\n    },\r\n    settingIcon: {\r\n        alignSelf: 'center'\r\n    },\r\n    profileIcon: {\r\n        alignSelf: 'flex-end',\r\n        marginRight: 10\r\n    },\r\n    footer: {\r\n        backgroundColor: '#3385ff',\r\n        justifyContent: 'flex-end',\r\n        width: 300,\r\n        flexDirection: 'row',\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    }\r\n})","import { Dimensions } from \"react-native\";\r\nconst {width, height} = Dimensions.get('window');\r\n\r\nexport const COLORS = {\r\n    primary: \"#252c4a\",\r\n    secondary: '#1E90FF',\r\n    accent: '#3498db',\r\n    \r\n    success: '#00C851',\r\n    error: '#ff4444',\r\n\r\n    black: \"#171717\",\r\n    white: \"#FFFFFF\",\r\n    background: \"#252C4A\"\r\n}\r\n\r\n\r\nexport const SIZES = {\r\n    base: 10,\r\n    width,\r\n    height\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    SafeAreaView,\r\n    StatusBar,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Modal,\r\n    Animated,\r\n    TextInput,\r\n    ScrollView,\r\n} from \"react-native\";\r\nimport { COLORS, SIZES } from \"../constants/themes\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nimport { Button } from \"react-native-elements\";\r\nimport FontAwesome5Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { color } from \"react-native-elements/dist/helpers\";\r\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\r\nimport { RadioButton } from 'react-native-paper';\r\nimport APIConnection from \"../utility/APIConnection\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function QuizEditComponent({navigation, unitID}) {\r\n\r\n\r\n    const invalidChars = [\"'\", '\"']\r\n\r\n    const initialdata = [\r\n        {\r\n            changeType: \"Created\",\r\n            quizdata_id: 1,\r\n            quizdata_question: \"Default Value\",\r\n            quizdata_answers: [\"Default Value\", \"Default Value\", \"Default Value\", \"Default Value\"],\r\n            correct_option: 0,\r\n        }\r\n    ];\r\n\r\n    const isFocused = useIsFocused();\r\n\r\n    const [quizData, setQuizData] = useState([\r\n        {\r\n            changeType: \"Created\",\r\n            quizdata_id: 1,\r\n            quizdata_question: \"Default Value\",\r\n            quizdata_answers: [\"Default Value\", \"Default Value\", \"Default Value\", \"Default Value\"],\r\n            correct_option: 0,\r\n        }\r\n    ]);    \r\n    \r\n\r\n    //used for posting and editting quiz\r\n    const [quizID, setQuizID] = useState();\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [deleteList, setDeleteList] = useState([]);\r\n\r\n    const [correctAnswer, setCorrectAnswer] = useState(0);\r\n    const [dummyState, setDummyState] = useState(true);\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------\r\n    const [iQuizData, setIQuizData] = useState();\r\n\r\n\r\n    const apiConnection = new APIConnection();\r\n    useEffect(() => {\r\n\r\n    \r\n        async function fetchMyAPI() {\r\n            let response = await apiConnection.getUnitQuizContent(unitID);\r\n            if(response.status == 400)\r\n            {\r\n                //empty unit that needs a new quiz\r\n                await apiConnection.createNewQuizForUnit(unitID);\r\n                response = await apiConnection.getUnitQuizContent(unitID);\r\n\r\n            }\r\n            response = await response.json();\r\n\r\n            setQuizID(response[0].quiz_id);\r\n\r\n            let quizDataResponse = await apiConnection.getQuizData(response[0].quiz_id);\r\n\r\n            if(quizDataResponse.status == 400)\r\n            {\r\n                // do nothing\r\n            }\r\n            else {\r\n                quizDataResponse = await quizDataResponse.json();\r\n\r\n                setIQuizData(quizDataResponse);\r\n                processJSON(quizDataResponse);\r\n                console.log(\"Quiz data fetched is: \" + iQuizData)\r\n            }\r\n\r\n          }\r\n\r\n          if(isFocused) {\r\n            fetchMyAPI();\r\n\r\n\r\n        }\r\n\r\n    }, [isFocused]);\r\n\r\n\r\n\r\n    function processJSON(quizDataResponse)\r\n    {\r\n        let json = quizDataResponse;\r\n        for(let i = 0; i < quizDataResponse.length; i++)\r\n        {\r\n            let answers = quizDataResponse[i].quizdata_answers;\r\n            answers = answers.replace(/[']+/g, '\"');\r\n            let answersJson = JSON.parse(answers);\r\n            json[i].quizdata_answers = answersJson.choices;\r\n            json[i].correct_option = answersJson.answer;\r\n\r\n            console.log(\"Quiz data answers\" + answersJson.type + answersJson[0]);\r\n            console.log(\"Quiz data answers array\" + [\"hi\", \"There\", \"Cutie\"]);\r\n\r\n\r\n\r\n        }\r\n\r\n        setQuizData(json);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function updateQuizAnswerToParent(newAnswer, index) {\r\n        let newQuizData = quizData;\r\n        newQuizData[currentIndex].quizdata_answers[index] = newAnswer;\r\n        if (newQuizData[currentIndex].changeType != \"Created\") {\r\n            newQuizData[currentIndex].changeType = \"Edited\";\r\n        }\r\n        setQuizData(newQuizData);\r\n    }\r\n\r\n    function updateQuizQuestionToParent(newQuestion) {\r\n        let newQuizData = quizData;\r\n        newQuizData[currentIndex].quizdata_question = newQuestion;\r\n        if (newQuizData[currentIndex].changeType != \"Created\") {\r\n            newQuizData[currentIndex].changeType = \"Edited\";\r\n        }\r\n        setQuizData(newQuizData);\r\n    }\r\n\r\n    function updateCorrectAnswer(index) {\r\n        setCorrectAnswer(index);\r\n        let newQuizData = quizData;\r\n        if (newQuizData[currentIndex].changeType != \"Created\") {\r\n            newQuizData[currentIndex].changeType = \"Edited\";\r\n        }\r\n         newQuizData[currentIndex].correct_option = index;\r\n        setQuizData(newQuizData);\r\n\r\n\r\n    }\r\n\r\n    function onLeftArrowPressed() {\r\n        if (currentIndex > 0) { \r\n            setCorrectAnswer(quizData[currentIndex - 1].correct_option);\r\n            setCurrentIndex(currentIndex - 1);\r\n         }\r\n    }\r\n\r\n    function onRightArrowPressed() {\r\n        if (currentIndex < quizData.length - 1) { \r\n            setCorrectAnswer(quizData[currentIndex + 1].correct_option);\r\n\r\n            setCurrentIndex(currentIndex + 1);\r\n        }\r\n    }\r\n\r\n\r\n    function renderTopQuizHeader() {\r\n        return (\r\n            <View style={{\r\n                marginVertical: 40,\r\n\r\n            }}>\r\n                <View\r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\"\r\n                    }}>\r\n                    <Button\r\n                        icon={{\r\n                            name: \"arrow-left\",\r\n                            type: 'font-awesome',\r\n                            size: 15,\r\n                            color: 'white'\r\n                        }}\r\n                        buttonStyle={styles.arrowButton}\r\n                        containerStyle={styles.arrowButtonContainer}\r\n                        onPress={onLeftArrowPressed}\r\n\r\n                    >\r\n\r\n                    </Button>\r\n                    <Text>\r\n                    {(currentIndex + 1) + \" / \" + quizData.length}\r\n\r\n                    </Text>\r\n\r\n\r\n\r\n                    <Button\r\n                        icon={{\r\n                            name: \"arrow-right\",\r\n                            type: 'font-awesome',\r\n                            size: 15,\r\n                            color: 'white'\r\n                        }}\r\n                        buttonStyle={styles.arrowButton}\r\n                        containerStyle={styles.arrowButtonContainer}\r\n                        onPress={onRightArrowPressed}\r\n\r\n                    >\r\n\r\n\r\n                    </Button>\r\n\r\n\r\n\r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function renderAnswersInput() {\r\n        return (\r\n            <View style={{flex: 1}}>\r\n                {\r\n\r\n                    quizData[currentIndex].quizdata_answers.map((answer, index) => (\r\n\r\n                        <View\r\n                            key={index}\r\n                            style={{\r\n                                flexDirection: \"row\",\r\n\r\n                                justifyContent: \"flex-start\"\r\n                            }}>\r\n\r\n                            <View\r\n                            style={{\r\n                                width:50\r\n                            }}></View>\r\n\r\n                            <TextInput\r\n                                key={answer}\r\n                                style={styles.answerInput}\r\n                                onChangeText={(newAnswer) => updateQuizAnswerToParent(newAnswer, index)}\r\n                                defaultValue={answer}>\r\n\r\n                            </TextInput>\r\n                            <RadioButton\r\n                                key={index}\r\n                                value={index}\r\n                                color={\"#000dff\"}\r\n                                uncheckedColor={\"#000000\"}\r\n                                status={correctAnswer === index ? 'checked' : 'unchecked'}\r\n                                onPress={() => updateCorrectAnswer(index)}\r\n\r\n                            >\r\n\r\n                            </RadioButton>\r\n\r\n                        </View>\r\n\r\n\r\n                    ))}\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    async function onSave() {\r\n\r\n        let valid = true;\r\n        for(let i = 0; i < quizData.length; i++)\r\n        {\r\n            //combining all string in quiz to do test at once\r\n            let allStringInQuestion = quizData[i].quizdata_question;\r\n\r\n            for(let i2 = 0; i2 < quizData[i].quizdata_answers.length; i2++)\r\n            {\r\n                allStringInQuestion += quizData[i].quizdata_answers[i2];\r\n            }\r\n\r\n\r\n            for(let j = 0; j < invalidChars.length; j++)\r\n            {\r\n                if(allStringInQuestion.includes(invalidChars[j]))\r\n                {\r\n                    alert(\"Your quiz data contain invalid characters such as ' or '', please remove them and try again\");\r\n                    valid = false;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if(valid){\r\n\r\n        \r\n        await Promise.all(\r\n            quizData.map(async (question) => {\r\n\r\n                if (question.changeType == \"Edited\") {\r\n                    question.changeType == \"None\";\r\n                    console.log(\"This question has been changed: \" + question.quizdata_question);\r\n                    let quizdata_answersTemporary = {\r\n                        answer: 0,\r\n                        choices: [\"test\", \"test\", \"test\", \"test\"]\r\n                    }\r\n                    quizdata_answersTemporary.answer = question.correct_option;\r\n                    quizdata_answersTemporary.choices = question.quizdata_answers;\r\n                    let string1 = JSON.stringify(quizdata_answersTemporary);\r\n                    string1 = string1.replace(/[\"]+/g, \"'\");\r\n                    const response = await apiConnection.editQuizData(quizID,question.quizdata_id, question.quizdata_question, string1);\r\n                }\r\n                else if (question.changeType == \"Created\") {\r\n                    question.changeType == \"None\";\r\n\r\n                    console.log(\"This question has been created: \" + question.quizdata_question)\r\n                    let quizdata_answersTemporary = {\r\n                        answer: 0,\r\n                        choices: [\"test\", \"test\", \"test\", \"test\"]\r\n                    }\r\n                    quizdata_answersTemporary.answer = question.correct_option;\r\n                    quizdata_answersTemporary.choices = question.quizdata_answers;\r\n                    let string1 = JSON.stringify(quizdata_answersTemporary);\r\n                    string1 = string1.replace(/[\"]+/g, \"'\");\r\n\r\n                    const response = await apiConnection.createQuizData(quizID, question.quizdata_question, string1);\r\n                }\r\n                \r\n\r\n\r\n            })\r\n        )\r\n        await Promise.all(\r\n            deleteList.map(async (deletedQuestionID) => {\r\n                console.log(\"This question has been deleted: \" + deletedQuestionID)\r\n\r\n                const response = await apiConnection.deleteQuizData(quizID, deletedQuestionID);\r\n\r\n            })\r\n        )\r\n        setDeleteList([]);\r\n\r\n        navigation.goBack();\r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n    function onDelete() {\r\n\r\n        //If there are still lesson to be deleted\r\n        if (quizData.length > 1) {\r\n            if (quizData[currentIndex].changeType != \"Created\") {\r\n                deleteList.push(quizData[currentIndex].quizdata_id);\r\n                setDeleteList(deleteList);\r\n            }\r\n            quizData.splice(currentIndex, 1);\r\n            setQuizData(quizData);\r\n            setCurrentIndex(0);\r\n            setDummyState(!dummyState);\r\n\r\n\r\n        }\r\n        else{\r\n            alert(\"Quiz must have at least one question\");\r\n        }\r\n    }\r\n\r\n\r\n    function onCreate() {\r\n\r\n        let newQuizData = quizData;\r\n        let newQuestion = {\r\n            changeType: \"Created\",\r\n            quizdata_question: \"New Question?\",\r\n            quizdata_answers: [\r\n                \"Option 1\",\r\n                \"Option 2\",\r\n                \"Option 3\",\r\n                \"Option 4\",\r\n            ],\r\n            correct_option: 0,\r\n        }\r\n\r\n        newQuizData.push(newQuestion);\r\n        setQuizData(newQuizData);\r\n        setCurrentIndex(currentIndex);\r\n        setDummyState(!dummyState);\r\n\r\n    }\r\n\r\n\r\n\r\n    function renderBottomButtons() {\r\n        return (\r\n            <View>\r\n            <View style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-around\"\r\n            }}>\r\n                <Button\r\n                    title={\"Add\"}\r\n                    icon={{\r\n                        name: \"plus\",\r\n                        type: 'font-awesome',\r\n                        size: 15,\r\n                        color: 'white'\r\n                    }}\r\n                    buttonStyle={[styles.arrowButton, {\r\n                        backgroundColor: \"#1f9132\",\r\n                       \r\n                    }]}\r\n                    containerStyle={[styles.arrowButtonContainer, {\r\n                        width: 100,\r\n                        marginHorizontal: 10\r\n                    }]}\r\n                    onPress={onCreate}\r\n\r\n                >\r\n\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                    title={\"Delete\"}\r\n\r\n                    icon={{\r\n                        name: \"trash\",\r\n                        type: 'font-awesome',\r\n                        size: 15,\r\n                        color: 'white'\r\n                    }}\r\n                    buttonStyle={[styles.arrowButton, {\r\n                        backgroundColor: \"\trgb(255, 0, 0)\"\r\n                    }]}\r\n                    containerStyle={[styles.arrowButtonContainer, {\r\n                        width: 100,\r\n                        marginHorizontal: 10\r\n                    }]}\r\n                    onPress={onDelete}\r\n\r\n                >\r\n\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                    title={\"Save\"}\r\n\r\n                    icon={{\r\n                        name: \"save\",\r\n                        type: 'font-awesome',\r\n                        size: 15,\r\n                        color: 'white'\r\n                    }}\r\n                    buttonStyle={[styles.arrowButton, {\r\n                        backgroundColor: \"\trgb(0, 191, 255)\"\r\n                    }]}\r\n                    containerStyle={[styles.arrowButtonContainer, {\r\n                        width: 100,\r\n                        marginHorizontal: 10\r\n                    }]}\r\n                    onPress={onSave}\r\n\r\n                >\r\n\r\n                </Button>\r\n\r\n            </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={{\r\n            flexDirection:\"column\",\r\n            justifyContent:\"space-around\"\r\n            \r\n        }}>\r\n\r\n        <ScrollView style={{ flex: 1, backgroundColor: \"rgb(179, 236, 255)\" }}>\r\n            {dummyState}\r\n            <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\r\n\r\n\r\n            {renderTopQuizHeader()}\r\n\r\n            <TextInput\r\n                key={quizData[currentIndex].quizdata_question}\r\n                style={styles.questionInput}\r\n                defaultValue={quizData[currentIndex].quizdata_question}\r\n                onChangeText={(newQuestion) => updateQuizQuestionToParent(newQuestion)}\r\n            >\r\n            </TextInput>\r\n            {renderAnswersInput()}\r\n            {renderBottomButtons()}\r\n\r\n\r\n        </ScrollView>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"#FFF\",\r\n        flex: 1,\r\n    },\r\n\r\n    userInfo: {\r\n        paddingHorizontal: 30,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n    caption: {\r\n        fontSize: 14,\r\n        lineHeight: 14,\r\n        fontWeight: \"500\",\r\n    },\r\n\r\n    avatarShadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 6.68,\r\n        elevation: 11\r\n    },\r\n\r\n\r\n    arrowButton: {\r\n        backgroundColor: 'rgba(90, 154, 230, 1)',\r\n        borderColor: 'transparent',\r\n        borderWidth: 0,\r\n        borderRadius: 30,\r\n    },\r\n    arrowButtonContainer: {\r\n        width: 100,\r\n        marginHorizontal: 50,\r\n        marginVertical: 10,\r\n    },\r\n\r\n\r\n\r\n    questionInput: {\r\n        height: 65,\r\n        marginHorizontal: 10,\r\n        marginVertical: 10,\r\n        marginBottom: 30,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n\r\n        borderColor: \"rgb(0, 153, 255)\",\r\n        backgroundColor: COLORS.white,\r\n    },\r\n\r\n    answerInput: {\r\n        flex: 1,\r\n        height: 50,\r\n        marginHorizontal: 5,\r\n        marginVertical: 5,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        borderColor: \"rgb(0, 153, 255)\",\r\n        backgroundColor: COLORS.white,\r\n    },\r\n\r\n    bioBox: {\r\n        marginTop: 10,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        borderColor: '#000',\r\n        borderWidth: 0.2,\r\n    },\r\n\r\n    bioText: {\r\n        marginTop: 10,\r\n    },\r\n\r\n    list: {\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n        fontWeight: \"bold\",\r\n        borderColor: '#000',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        padding: 15,\r\n    },\r\n\r\n    bottom: {\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flex: 1,\r\n        marginTop: 130\r\n    },\r\n\r\n    buttonContainer: {\r\n        position: 'absolute',\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        right: 30,\r\n        bottom: 30,\r\n        flex: 1\r\n    }\r\n\r\n});\r\n","import React, { Children, useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View, Text, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList, ScrollView } from \"react-native\";\r\nimport CourseGridCard from '../../../component/CourseGridCard';\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { useTransition, animated } from 'react-spring/native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport QuizEditComponent from '../../../component/QuizEditComponent';\r\n\r\n\r\nconst AnimatedView = animated(View);\r\n\r\n\r\n\r\nexport default function InstructorQuizEdit({ navigation, route, quizJSONData, setQuizJSONData }) {\r\n    const {unitID, unitName} = route.params;\r\n\r\nreturn(\r\n    <ScrollView >\r\n        <QuizEditComponent\r\n        unitID={unitID}\r\n        navigation={navigation}\r\n        >\r\n\r\n        </QuizEditComponent>\r\n\r\n    </ScrollView>\r\n)\r\n\r\n}","import React, { Children, useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View, Text, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport CourseGridCard from '../../../component/CourseGridCard';\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { useTransition, animated } from 'react-spring/native'\r\nimport InstructorQuizEdit from './InstructorEditQuiz';\r\nimport CreateContent from './CreateContentScreen';\r\n\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function TabInstructorCourseEdit({ navigation, route }) {\r\n\r\n\r\n    const {unitID} = route.params;\r\n    //const unitID = 21;\r\n    //const unitName = \"Unit name\";\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen name=\"Edit Content\"  component={CreateContent} initialParams={{ unitID }} />\r\n            <Tab.Screen name=\"Edit Quiz\" component={InstructorQuizEdit} initialParams={{ unitID }} />\r\n        </Tab.Navigator>\r\n    );\r\n\r\n}","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorDashboard from './InstructorDashboard'\r\nimport EditCourseAndModuleTabScreen from './EditCourseAndModuleTabScreen'\r\nimport CreateCourseAndModuleTabScreen from './CreateCourseAndModuleTabScreen'\r\nimport CreateCourse from './CreateCourse'\r\nimport InstructorCourseView from './InstructorCourseScreen'\r\n\r\nimport CreateContent from './CreateContentScreen'\r\n\r\n\r\n\r\nimport LessonCreation from './LessonCreationScreen'\r\nimport TabInstructorCourseEdit from './TabsInstructorCourseEdit'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function DashBoardStackNavigatorInstructor(navigation) {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: true,\r\n    }}>\r\n\r\n       \r\n\r\n      <Stack.Screen name=\"Instructor Dashboard\" component={InstructorDashboard} options={{ headerShown: false }}/>\r\n      <Stack.Screen name=\"Instructor CourseView\" component={InstructorCourseView} options={{ headerShown: true, title:'Course Material'}}/>\r\n      <Stack.Screen name=\"Create Content\" component={CreateContent} options={{ headerShown: true, headerTitleAlign: 'center' }}/>\r\n      <Stack.Screen name=\"LessonCreation\" component={LessonCreation} options={{ headerShown: true,headerTitleAlign: 'center', title:'Lesson Creation'}} />\r\n      <Stack.Screen name=\"EditCourseAndModule\" component={EditCourseAndModuleTabScreen} options={{ headerShown: true,headerTitleAlign: 'center', title:'Course Edit' }}/>\r\n      <Stack.Screen name=\"Create Course\" component={CreateCourse} options={{ headerShown: true, title: 'Create Course',headerTitleAlign: 'center' }}/>\r\n      <Stack.Screen name=\"Content Edit\" component={TabInstructorCourseEdit} options={{ headerShown: true }}/>\r\n\r\n\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { Pressable, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction IconButton({ icon, color, size, onPress }) {\r\n  return (\r\n    <Pressable\r\n      style={({ pressed }) => [styles.button, pressed && styles.pressed]}\r\n      onPress={onPress}\r\n    >\r\n      <Ionicons name={icon} color={color} size={size} />\r\n    </Pressable>\r\n  );\r\n}\r\n\r\nexport default IconButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    margin: 8,\r\n    borderRadius: 20,\r\n  },\r\n  pressed: {\r\n    opacity: 0.7,\r\n  },\r\n});\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {TextInput, Avatar, Button, Dialog, Portal, Provider} from 'react-native-paper';\r\n\r\nimport APIConnection from \"../../utility/APIConnection\";\r\n\r\nexport default function EditProfile({navigation}) {\r\n    const isFocused = useIsFocused();\r\n    const [data, setData] = useState([]);\r\n    const apiConnection = new APIConnection();\r\n\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => setVisible(false);\r\n\r\n    useLayoutEffect(() => {\r\n        if (isFocused) {\r\n            apiConnection.getUserForProfilePage().then((json) => {\r\n                setData(json);\r\n            });\r\n        }\r\n    }, [isFocused]);\r\n    \r\n\r\n    const [newName, setNewName] = useState('');\r\n    const [newBio, setNewBio] = useState('');\r\n\r\n\r\n    //check to see if there are any changes and pass it on to edit the account \r\n    async function onSubmit(){\r\n        if(newName.length === 0 && newBio.length != 0){\r\n            await apiConnection.editUserProfile(data.user_name, data.user_type, newBio, data.user_pp).then(\r\n                navigation.goBack());\r\n            }\r\n        else if(newBio.length === 0 && newName.length != 0){\r\n            await apiConnection.editUserProfile(newName, data.user_type, data.user_bio, data.user_pp).then(\r\n                navigation.goBack());\r\n            }\r\n        else if(newBio.length != 0 && newName.length != 0){\r\n            await apiConnection.editUserProfile(newName, data.user_type, newBio, data.user_pp).then(\r\n                navigation.goBack());\r\n            }\r\n        else if(newBio.length === 0 && newName.length === 0){\r\n            alert(\"Nothing has changed...\");\r\n        }    \r\n    };\r\n\r\n    return (\r\n    \r\n            <View style={styles.container}>\r\n                {/*Avatar Icon change\r\n                <View style={{alignItems: 'center', marginTop: 15}}>\r\n                    <Avatar.Image \r\n                        size={80} \r\n                        source={data.user_pp || require('./icons/defaultAvatar.png')} \r\n                        style={{backgroundColor: '#fff'}}\r\n                    />\r\n                    \r\n\r\n                    \r\n                    <Button \r\n                        icon=\"account-circle-outline\" \r\n                        mode=\"contained\" \r\n                        style={styles.avatarButton}\r\n                        onPress={showDialog}\r\n                    >Change Avatar</Button>\r\n\r\n\r\n                    \r\n                </View>\r\n    */}\r\n                <View style={styles.edit}>\r\n                    <TextInput\r\n                        setData={data.user_name}\r\n                        style={styles.textInput}\r\n                        label={'Username'}\r\n                        mode={'outlined'}\r\n                        value={data.user_name}\r\n                        outlineColor={'#000'}\r\n                        activeOutlineColor={'#4970FA'}\r\n                        selectionColor={\"#000\"}\r\n                        left={<TextInput.Icon name='account'/>}\r\n                        onChangeText={newText => setNewName(newText)}\r\n                    />\r\n                </View>\r\n\r\n\r\n                <View style={styles.edit}>\r\n                    <TextInput\r\n                        autoCorrect={false}\r\n                        multiline={true}\r\n                        label={'About Me'}\r\n                        mode={'outlined'}\r\n                        value={data.user_bio || \"\"}\r\n                        outlineColor={'#000'}\r\n                        activeOutlineColor={'#4970FA'}\r\n                        onChangeText={newText => setNewBio(newText)}\r\n                        editable={true}\r\n                        style={[styles.textInput, {\r\n                            height: 150,\r\n                        }]}\r\n                    />\r\n                </View>\r\n                \r\n                <TouchableOpacity style={styles.submitButtom} onPress={() => onSubmit()}>\r\n                    <Text style={styles.submitText}>Save</Text>\r\n                </TouchableOpacity>\r\n\r\n                <Provider>            \r\n                    <Portal>\r\n                    <Dialog \r\n                        visible={visible} \r\n                        onDismiss={hideDialog}\r\n                        style={{\r\n                            borderRadius: 25,\r\n                            backgroundColor: '#fff',\r\n                            color:'#000'\r\n                        }}\r\n                    >\r\n                            <Dialog.Title style={{color:'#000'}}>Change Avatar</Dialog.Title>\r\n                            <Dialog.Content>\r\n                                <Button mode={\"contained\"} style={styles.dialogButton}>Choose from Library</Button>\r\n                                <Button mode={\"contained\"} style={styles.dialogButton}>Open Camera</Button>\r\n                            </Dialog.Content>\r\n                            <Dialog.Actions>\r\n                            <Button \r\n                                mode={\"contained\"} \r\n                                onPress={hideDialog}>\r\n                            Cancel</Button>\r\n                            </Dialog.Actions>\r\n                        </Dialog>\r\n                    </Portal>\r\n                </Provider>\r\n\r\n            </View>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#E8EAED',\r\n        flex: 1\r\n    },\r\n\r\n    profileIcon: {\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 15,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    edit: {\r\n        flexDirection: 'row',\r\n        marginTop: 80,\r\n        marginBottom: 10,\r\n        paddingBottom: 5,\r\n        paddingLeft: 10,\r\n        paddingRight:10,\r\n        padding: 20,\r\n        \r\n    },\r\n\r\n    textInput: {\r\n        flex: 1,\r\n        backgroundColor:'#fff',\r\n       \r\n        \r\n    },\r\n\r\n    submitButtom: {\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: '#4970FA',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n        margin: 20\r\n    },\r\n\r\n    submitText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    },\r\n\r\n    avatarButton: {\r\n        marginTop: 15,\r\n        marginLeft: 45,\r\n        marginRight:45,\r\n        backgroundColor: \"#4970FA\",\r\n        color:'white'\r\n    },\r\n    dialogButton: {\r\n        marginTop: 10\r\n    }\r\n    \r\n});","import { useIsFocused,useFocusEffect,  } from \"@react-navigation/native\";\r\nimport { is } from \"@react-spring/shared\";\r\n\r\nimport React, { useState, useLayoutEffect,useEffect,useRef,useCallback } from \"react\";\r\nimport {\r\n  View,\r\n  SafeAreaView,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { FAB } from 'react-native-paper'; \r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function InstructorProfile({navigation}) {\r\n\r\n  const isFocused = useIsFocused();\r\n  const [data, setData] = useState([]);\r\n  const [classData, setClassData] = useState([]);\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  const mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n      mounted.current = true;\r\n      \r\n\r\n\r\n      return () => {\r\n          mounted.current = false;\r\n          \r\n      };\r\n  }, []);\r\n\r\n  /*useLayoutEffect(() => {\r\n    //your code here\r\n    if (isFocused && mounted.current) {\r\n      apiConnection.getUserForProfilePage().then((json) => {\r\n        setData(json);\r\n      });\r\n      apiConnection.getClasses().then((json) => {\r\n        setClassData(json);\r\n      });\r\n    }\r\n\r\n  }, [isFocused]);*/\r\n\r\n//navigation.navigate('My Profile')\r\n  const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n\r\n   if (isFocused) {  \r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n          setData(json);\r\n          \r\n        });\r\n        apiConnection.getClasses().then((json) => {\r\n          setClassData(json);\r\n        \r\n          \r\n        });\r\n      }\r\n\r\n      \r\n    }, [isFocused])\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.userInfo}>\r\n        <View style={{ flexDirection: \"row\", marginTop: 15 }}>\r\n          <Avatar\r\n            rounded\r\n            size={100}\r\n            source={ require('../../UserProfile/icons/defaultAvatar.png')}\r\n          />      \r\n          <View style={{ marginLeft: 20 }}>\r\n            <Text\r\n              style={[\r\n                styles.title,\r\n                {\r\n                  marginTop: 15,\r\n                  marginBottom: 5\r\n                },\r\n              ]}\r\n            >\r\n              {data.user_name || 'user_name'}\r\n            </Text>\r\n            <View style={{flexDirection:\"row\"}}>\r\n              <Icon name=\"mail\" size={20} style={{paddingRight:5}}/>\r\n              <Text style={styles.caption}>{data.user_email || 'user_email'}</Text>\r\n            </View>\r\n              <View style={{flexDirection:\"row\"}}>\r\n                <Icon name=\"user\" size={20} style={{paddingRight:5}}/>\r\n              <Text\r\n                style={[styles.caption,{\r\n                    marginTop: 5,\r\n                  },\r\n                ]}\r\n              >\r\n              {'Instructor'}\r\n              </Text>\r\n              </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.userAbout}>\r\n          <Text style={styles.title}>About</Text>\r\n            <Text style={[styles.bioBox]}>\r\n              <Text style={styles.bioText}>\r\n                {data.user_bio || 'No information at this time.'}\r\n              </Text>\r\n            </Text>\r\n        </View>\r\n        \r\n        <Text style={[styles.title, {textAlign:'center'}]}>Classes</Text>\r\n      </View>\r\n\r\n        <FlatList\r\n              keyExtractor={(item) => item.class_name}\r\n\r\n                data={classData} \r\n                renderItem={({item}) => (\r\n                  <Text style={[styles.list]}>{item.class_name}</Text>\r\n                )}\r\n                numColumns={2}\r\n        />\r\n\r\n      \r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"file-document-edit-outline\"\r\n        onPress={() => navigation.navigate('Edit Profile', {screen: 'InstructorEditProfile'})}\r\n      />\r\n                \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#E8EAED',\r\n    flex: 1,\r\n  },\r\n\r\n  userInfo: {\r\n    paddingHorizontal: 30,\r\n    marginBottom: 25,\r\n    marginTop: 50\r\n  },\r\n\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  caption: {\r\n    fontSize: 14,\r\n    lineHeight: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  avatarShadow: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 5,\r\n    },\r\n    shadowOpacity: 0.36,\r\n    shadowRadius: 6.68,\r\n    elevation: 11\r\n  },\r\n\r\n\r\n  userAbout: {\r\n    marginTop: 15,\r\n  },\r\n\r\n  userClass: {\r\n    marginTop: 15,\r\n    alignSelf:'center',\r\n\r\n  },\r\n\r\n  bioBox: {\r\n    marginTop: 10,\r\n    padding:10,\r\n    borderRadius: 2,\r\n    borderColor: '#000',\r\n    borderWidth: 1,\r\n    backgroundColor:'#fff'\r\n  },\r\n\r\n  bioText: {\r\n    marginTop: 10,\r\n  },\r\n\r\n  list: { \r\n    textAlign:'center',\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n    fontWeight:\"bold\",\r\n    borderRadius:5,\r\n    padding:15,\r\n    borderWidth:.5,\r\n    backgroundColor: \"white\",\r\n    width:200,\r\n    marginRight:10,\r\n\r\n\r\n  },\r\n\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0, \r\n    bottom: 0,\r\n    backgroundColor:'#4970FA'\r\n  }\r\n\r\n});\r\n","import React, { useContext } from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { AuthContext } from '../../../store/AuthContext'\r\nimport IconButton from '../../../component/ui/IconButton'\r\nimport EditProfile from '../../UserProfile/EditProfile'\r\nconst Stack = createNativeStackNavigator()\r\nimport InstructorProfile from '../../InstructorScreens/ProfileStackNavigator/InstructorProfile.js'\r\n\r\n\r\nexport default function ProfileStackNavigatorInstructor()  {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n     <Stack.Screen name=\"My Profile\" component={InstructorProfile} options={{\r\n        headerShown: false,\r\n          headerRight: ({ tintColor }) => (\r\n            <IconButton\r\n              icon=\"exit\"\r\n              color={tintColor}\r\n              size={24}\r\n              onPress={authCtx.logout}\r\n            />\r\n          ),\r\n      }}/>\r\n\r\n        <Stack.Screen name=\"Edit Profile\" component={EditProfile} options={{headerShown:true}}/>\r\n\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React, {useContext } from 'react';\r\nimport {SafeAreaView, View, Text, StyleSheet} from \"react-native\";\r\nimport {Button, Divider} from \"react-native-paper\";\r\nimport { AuthContext } from '../../../store/AuthContext'\r\n\r\nexport default function InstructorSetting({navigation}) {\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <Text style={styles.title}>Settings</Text>\r\n            <View style={styles.actions}>\r\n\r\n                <Button icon=\"email\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Email', {screen: 'ChangeEmail'})}\r\n                >Change Email</Button>\r\n\r\n                <Button \r\n                icon=\"lock\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Password', {screen: 'ChangePassword'})}\r\n                >Change Password</Button>\r\n\r\n                <Divider style={{\r\n                    marginTop: 50,\r\n                    marginLeft: 35,\r\n                    marginRight: 35\r\n                }}/>\r\n\r\n                <Button \r\n                icon=\"door\" \r\n                mode=\"contained\" \r\n                style={[styles.buttons,{\r\n                    backgroundColor: '#cf3a29',\r\n                    marginTop: 60\r\n                }]}\r\n                onPress={authCtx.logout}\r\n                >Log Out</Button>\r\n                \r\n            </View>\r\n        </SafeAreaView>\r\n        \r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        backgroundColor: '#E8EAED',\r\n        flex: 1\r\n     \r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        alignSelf:'center'\r\n\r\n    },\r\n\r\n    actions: {\r\n        marginTop: 15\r\n    },\r\n\r\n    buttons: {\r\n        marginTop: 15,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n        backgroundColor: \"#4970FA\"\r\n    }\r\n\r\n\r\n\r\n    \r\n})","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput, Button, HelperText } from \"react-native-paper\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport APIConnection from \"../../utility/APIConnection\";\r\nimport Authentication from \"../../utility/Authentication\"\r\n\r\nexport default function ChangePassword({navigation}) {\r\n    const isFocused = useIsFocused();\r\n    const [data, setData] = useState([]);\r\n\r\n    const [currentPW, getCurrentPW] = useState('');\r\n    const [newPW, getNewPW] = useState('');\r\n    const [confirmPW, getConfirmPW] = useState(''); \r\n\r\n    const [isSecureEntry, setSecureEntry] = useState(true);\r\n    const [isSecureEntry2, setSecureEntry2] = useState(true);\r\n    const [isSecureEntry3, setSecureEntry3] = useState(true);\r\n\r\n    const apiConnection = new APIConnection();\r\n    const auth = new Authentication();\r\n\r\n    useLayoutEffect(() => {\r\n        if (isFocused) {\r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n            setData(json);\r\n        });\r\n        }\r\n    }, [isFocused]);\r\n\r\n    const passwordHelper = () => {\r\n        return (newPW.length < 8); \r\n      }\r\n\r\n    function confirmPasswords(){\r\n        if(confirmPW.match(newPW)){\r\n            return true;\r\n        } else{\r\n            return false; \r\n        }\r\n        \r\n    }\r\n\r\n    async function onSubmit() { \r\n        if(currentPW === ''){\r\n            alert('Need current password to verify.');\r\n            return; \r\n        }\r\n        else if(newPW === ''){\r\n            alert('Need new, unique password to make changes.');\r\n            return; \r\n        }\r\n        \r\n\r\n        if(!confirmPasswords()){\r\n            alert('Passwords do not match. Try again.')\r\n            return; \r\n        }\r\n\r\n        const currentEmail = data.user_email; \r\n        //check to see if type password matches with current\r\n        auth.signIn(currentEmail , currentPW).then(() => {\r\n            //if matches, authorize and allow the user to change the email\r\n            AsyncStorage.getItem('@user_info').then((data) => {\r\n                const user = JSON.parse(data);\r\n                if (user && user.token) {\r\n                  apiConnection.changePassword(currentEmail , newPW).then(navigation.goBack());\r\n                }\r\n                else {\r\n                  alert(\"Incorrect Password. Try again.\");\r\n                  AsyncStorage.clear();\r\n                }\r\n              }).catch((reason) => {\r\n                console.log(reason);\r\n              })\r\n        });\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <Text style={styles.title}>Change Password</Text>\r\n            <View style={styles.form}>\r\n                <TextInput \r\n                        style={styles.inputField}\r\n                        secureTextEntry={isSecureEntry3}\r\n                        mode={'outlined'}     \r\n                        label={'Current Password'}\r\n                        left={<TextInput.Icon name='lock'/>}\r\n                        right={  \r\n                            <TextInput.Icon name=\"eye\"\r\n                            onPress={() => setSecureEntry3(prev => !prev)}\r\n                            />\r\n                        }\r\n                        onChangeText={newText =>getCurrentPW(newText)}\r\n                    />\r\n\r\n                <TextInput            \r\n                    style={styles.inputField}\r\n                    mode={'outlined'}   \r\n                    secureTextEntry={isSecureEntry}\r\n                    label={'New Password'}\r\n                    left={<TextInput.Icon name='lock'/>}\r\n                    right={  \r\n                        <TextInput.Icon name=\"eye\"\r\n                          onPress={() => setSecureEntry(prev => !prev)}\r\n                        />\r\n                    }\r\n                    onChangeText={newText =>getNewPW(newText)}\r\n                    />\r\n                <HelperText type='info' visible={passwordHelper()} style={{color:'#000', marginLeft:20}}>\r\n                    Password needs to be at least 8 characters long.\r\n                </HelperText>\r\n\r\n\r\n                <TextInput            \r\n                    style={styles.inputField}\r\n                    mode={'outlined'}   \r\n                    secureTextEntry={isSecureEntry2}\r\n                    label={'Confirm New Password'}\r\n                    left={<TextInput.Icon name='lock'/>}\r\n                    right={ <TextInput.Icon \r\n                        name=\"eye\"\r\n                        onPress={() => setSecureEntry2(prev => !prev)}\r\n                      />}\r\n                    onChangeText={newText =>getConfirmPW(newText)}\r\n                    />\r\n            </View>\r\n\r\n            <View style={{marginTop:65}}>\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={styles.button}\r\n                    onPress={() => onSubmit()}\r\n                >Submit</Button>\r\n\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={[styles.button, {\r\n                        backgroundColor: '#e03a3a'\r\n                    }]}\r\n                    onPress={() => navigation.goBack()}\r\n                >Cancel</Button>\r\n            </View>\r\n\r\n\r\n        </View>\r\n\r\n    \r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n     \r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#E8EAED\",\r\n    },\r\n\r\n    form: { \r\n        marginTop: 20,\r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        marginLeft: 15\r\n    },\r\n    inputField: {\r\n        marginLeft:30,\r\n        marginRight:30,\r\n        backgroundColor:'#fff'\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#4970FA',\r\n        marginTop: 15,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n    },\r\n\r\n    submitText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    }\r\n\r\n\r\n});","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput, Button} from \"react-native-paper\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport APIConnection from \"../../utility/APIConnection\";\r\nimport Authentication from \"../../utility/Authentication\"\r\n\r\nexport default function ChangeEmail({navigation}) {\r\n    const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    \r\n    const isFocused = useIsFocused();\r\n    const [data, setData] = useState([]);\r\n    const [currPW, getCurrPW] = useState('');\r\n    const [newEmail, getNewEmail] = useState('');\r\n    const [isSecureEntry, setSecureEntry] = useState(true);    \r\n\r\n    const apiConnection = new APIConnection();\r\n    const auth = new Authentication();\r\n\r\n    useLayoutEffect(() => {\r\n        if (isFocused) {\r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n            setData(json);\r\n        });\r\n        }\r\n    }, [isFocused]);\r\n\r\n\r\n    const checkEmail = (newEmail) => {\r\n        if(newEmail.match(mailFormat)){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function onSubmit(){\r\n\r\n        if(currPW === ''){\r\n            alert('need password to verify');\r\n            return; \r\n        }\r\n\r\n        var emailCheck = checkEmail(newEmail);\r\n        \r\n        if(emailCheck != true){\r\n            alert('Email is not valid. Try again.');\r\n            return; \r\n        }\r\n        \r\n\r\n        //check to see if type password matches with current\r\n        auth.signIn(data.user_email, currPW).then(() => {\r\n            //if matches, authorize and allow the user to change the email\r\n            AsyncStorage.getItem('@user_info').then((data) => {\r\n                const user = JSON.parse(data);\r\n                if (user && user.token) {\r\n                  apiConnection.changeEmail(newEmail, currPW).then(navigation.goBack());\r\n                }\r\n                else {\r\n                  alert(\"Incorrect Password\");\r\n                  AsyncStorage.clear();\r\n                }\r\n              }).catch((reason) => {\r\n                console.log(reason);\r\n              })\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n             <Text style={styles.title}>Change Email</Text>\r\n            <View style={styles.form}>\r\n                <TextInput \r\n                        style={styles.inputField}\r\n                        value={data.user_email} \r\n                        mode={'outlined'}     \r\n                        label={'Email'}\r\n                        left={<TextInput.Icon name='email'/>}\r\n                        onChangeText={newText => getNewEmail(newText)}\r\n                    />\r\n                <TextInput            \r\n                        style={styles.inputField}\r\n                        mode={'outlined'}   \r\n                        secureTextEntry={isSecureEntry}\r\n                        label={'Password'}\r\n                        left={<TextInput.Icon name='lock'/>}\r\n                        right={  \r\n                            <TextInput.Icon name=\"eye\"\r\n                                onPress={() => setSecureEntry(prev => !prev)}\r\n                            />}\r\n                        onChangeText={newText => getCurrPW(newText)}\r\n                    />\r\n            </View>\r\n\r\n            <View style={{marginTop: 45}}>\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={styles.button}\r\n                    onPress={() => onSubmit()}\r\n                >Submit</Button>\r\n\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={[styles.button, {\r\n                        backgroundColor: '#e03a3a'\r\n                    }]}\r\n                    onPress={() => navigation.goBack()}\r\n                >Cancel</Button>\r\n           \r\n            </View>\r\n            \r\n        </View>\r\n    \r\n        \r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    \r\n    \r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#E8EAED\"\r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        marginLeft: 15\r\n    },\r\n\r\n    form: { \r\n        marginTop: 20,\r\n    },\r\n\r\n    inputField: {\r\n        marginTop: 20,\r\n        marginLeft:35,\r\n        marginRight:35,\r\n        backgroundColor:\"#fff\"\r\n    },\r\n    button: {\r\n        backgroundColor: '#4970FA',\r\n        marginTop: 35,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n    },\r\n\r\n  \r\n});","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorSetting from './InstructorSetting'\r\nimport ChangePassword from '../../changeAuth/ChangePassword'\r\nimport ChangeEmail from '../../changeAuth/ChangeEmail'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function SettingStackNavigatorInstructor()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"Setting\" component={InstructorSetting} />\r\n      <Stack.Screen name=\"Change Password\" component={ChangePassword} />\r\n      <Stack.Screen name=\"Change Email\" component={ChangeEmail} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableWithoutFeedback } from \"react-native\";\r\nimport { colors } from \"react-native-elements\";\r\nimport { useSpring, animated, useChain, useSpringRef } from \"react-spring\";\r\n\r\nconst AnimatedText = animated(Text);\r\nconst AnimatedView = animated(View);\r\n\r\nexport default function Welcome() {\r\n  const textAnim = useSpring({\r\n    from: {\r\n      fontSize: 10,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n  });\r\n\r\n  const viewAnim = useSpring({\r\n    to: {\r\n      backgroundColor: \"#ccf7ff\",\r\n      borderRadius: 4,\r\n      borderWidth: 0,\r\n    },\r\n\r\n    from: {\r\n      backgroundColor: colors.white,\r\n      borderWidth: 1000,\r\n      borderColor: colors.white,\r\n    },\r\n    animationDuration: 2000,\r\n  });\r\n\r\n  const teachAnim = useSpring({\r\n    from: {\r\n      fontSize: 1,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n    delay: 1000,\r\n  });\r\n\r\n  const learnAnim = useSpring({\r\n    from: {\r\n      fontSize: 1,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n    delay: 2000,\r\n  });\r\n\r\n  const studyAnim = useSpring({\r\n    from: {\r\n      fontSize: 1,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n    delay: 3000,\r\n  });\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: \"#ccf7ff\",\r\n\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: \"#002cad\",\r\n            borderRadius: 30,\r\n            marginTop: 100,\r\n          }}>\r\n          <AnimatedText style={{\r\n            fontWeight: \"bold\",\r\n            padding: 20,\r\n            color: \"#ffad9e\",\r\n\r\n\r\n            ...textAnim\r\n          }}>Welcome!</AnimatedText>\r\n        </View>\r\n\r\n\r\n\r\n\r\n        <View style={{\r\n          backgroundColor: \"#7dffe7\",\r\n          borderRadius: 30,\r\n          marginRight: \"50%\",\r\n          marginTop: \"5%\",\r\n        }} >\r\n\r\n          <AnimatedText style={{\r\n           color: \"#d63e22\",\r\n           padding: 20,\r\n\r\n            ...teachAnim\r\n          }}>Teach</AnimatedText>\r\n        </View>\r\n\r\n        <View style={{\r\n          backgroundColor: \"#94ffb6\",\r\n          borderRadius: 30,\r\n          marginTop: \"5%\",\r\n\r\n        }}>\r\n\r\n          <AnimatedText style={{\r\n                        padding: 20,\r\n                        color: \"#437309\",\r\n\r\n            ...learnAnim\r\n          }}>Learn</AnimatedText>\r\n        </View>\r\n\r\n\r\n\r\n\r\n\r\n        <View style={{\r\n          backgroundColor: \"#fdff82\",\r\n          borderRadius: 30,\r\n          marginRight: \"-50%\",\r\n          marginTop: \"5%\",\r\n        }}>\r\n\r\n          <AnimatedText style={{\r\n                       padding: 20,\r\n\r\n                       color: \"#6b0461\",\r\n\r\n            ...studyAnim\r\n          }}>Study</AnimatedText>\r\n        </View>\r\n\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  baseText: {\r\n  },\r\n  titleText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Cochin\"\r\n\r\n  }\r\n});","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Welcome from '../../../component/Welcome'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function WelcomeStackNavigatorInstructor()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"WelcomeInstructor\" component={Welcome} />\r\n          </Stack.Navigator>\r\n  )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { useIsFocused,useFocusEffect,  } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Authentication from \"../../utility/Authentication\";\r\nimport { AuthContext } from \"../../store/AuthContext\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport CourseEditScreen from \"./DashBoardStackNavigator/CourseEditScreen\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport HomeStackNavigatorInstructor from \"./HomeStackNavigator/HomeStackNavigatorInstructor\";\r\nimport DashBoardStackNavigatorInstructor from \"./DashBoardStackNavigator/DashBoardStackNavigatorInstructor\";\r\nimport ProfileStackNavigatorInstructor from \"./ProfileStackNavigator/ProfileStackNavigatorInstructor\";\r\nimport SettingStackNavigatorInstructor from \"./SettingsStackNavigator/SettingStackNavigatorInstructor\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport WelcomeStackNavigatorInstructor from \"./WelcomeStackNavigation.js/WelcomeStackNavigationInstructor\";\r\n\r\nconst API_URL =\r\n  Platform.OS === \"ios\" ? \"http://localhost:5000\" : \"http://10.0.2.2:5000\";\r\n//const API_URL =  'http://localhost:3001/api/user';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function InstructorMainScreenTabs({ navigation }) {\r\n  const isFocused = useIsFocused();\r\n \r\n  return (\r\n    <Tab.Navigator\r\n\r\n\r\n\r\n    initialRouteName=\"Welcome\"\r\n    \r\n    \r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: \"#4970FA\",\r\n\r\n   \r\n        \r\n        \r\n      }}\r\n\r\n    \r\n      \r\n    >\r\n      <Tab.Screen \r\n            name=\"Welcome\" \r\n            component={WelcomeStackNavigatorInstructor} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='asterisk' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n\r\n   \r\n      <Tab.Screen\r\n        name=\"Dashboard\"\r\n        component={DashBoardStackNavigatorInstructor}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={\"#4970FA\"} size={20} />\r\n          ),\r\n        }}\r\n      />\r\n\r\n\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileStackNavigatorInstructor}\r\n       \r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            \r\n          \r\n            <MaterialCommunityIcons\r\n              name=\"account-circle-outline\"\r\n              color={\"#4970FA\"}\r\n              size={20}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingStackNavigatorInstructor}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"cog-outline\"\r\n              color={\"#4970FA\"}\r\n              size={20}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  Pressable, View, Text,\r\n  StyleSheet, Platform,\r\n  TouchableOpacity, Alert\r\n} from 'react-native';\r\nimport APIConnection from '../utility/APIConnection';\r\nimport { Badge, Card} from 'react-native-paper';\r\n\r\n\r\n\r\n\r\nfunction StudentCourseGridCard({ classID, title,  onPress, refresh}) {\r\n\r\n  const [state, setState] = useState(0);\r\n\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  useEffect(() => {\r\n    //your code here\r\n\r\n\r\n    apiConnection.getClassProgress(classID)\r\n      .then(json => {\r\n        console.log(json);\r\n\r\n        var arr = json.AllUnits\r\n\r\n        if (arr) {\r\n          var len = arr.length\r\n          var c = 0\r\n          var classProg = 0\r\n          arr.map((item, key) => {\r\n            if (item.completed) c = c + 1\r\n\r\n          }, json)\r\n\r\n          if (c) classProg = c / len\r\n\r\n          else classProg = 0;\r\n          setState((classProg * 100).toFixed(2))\r\n        }\r\n      })\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  function dropClass() {\r\n    apiConnection.dropClass(classID);\r\n    alert('dropped class');\r\n    refresh();\r\n\r\n  }\r\n\r\n\r\n  function alertDrop() {\r\n    Alert.alert(\r\n      \"Warning\",\r\n      \"Do you want to drop this course?\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Drop\",\r\n          onPress: () => { dropClass() }\r\n\r\n        }\r\n      ],\r\n      {\r\n        cancelable: true,\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Card style={styles.gridItem}>\r\n\r\n\r\n      <Pressable\r\n        android_ripple={{ color: '#ccc' }}\r\n        style={({ pressed }) => [\r\n          styles.button,\r\n          pressed ? styles.buttonPressed : null,\r\n\r\n        ]}\r\n        onPress={onPress}\r\n      >\r\n\r\n        <Card.Cover style={{ height: 80, width: '100%', resizeMode: \"stretch\" }} source={{ uri: 'https://picsum.photos/700' }} />\r\n        <Card.Content adjustsFontSizeToFit>\r\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n            <Badge style={{ fontSize: 9, fontWeight: 'bold', backgroundColor: 'blue' }}>{state}%</Badge>\r\n            <TouchableOpacity onPress={() => {\r\n              if (Platform.OS == 'web') {\r\n                dropClass();\r\n\r\n              }\r\n              else if (Platform.OS == 'android' || Platform.OS == 'ios') {\r\n                alertDrop();\r\n\r\n              }\r\n            }}>\r\n\r\n\r\n              <Text adjustsFontSizeToFit style={{ color: 'red', fontWeight: 'bold', fontSize: 13 }}> DROP</Text>\r\n\r\n\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n\r\n          <Text adjustsFontSizeToFit numberOfLines={2} style={{ textAlign: 'center', fontWeight: '500' }}>{title}</Text>\r\n\r\n        </Card.Content>\r\n\r\n\r\n      </Pressable>\r\n\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentCourseGridCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: 'white',\r\n    color: 'white',\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.5,\r\n\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n\r\n\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    textAlign: 'center'\r\n\r\n  },\r\n  progress: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    height: 20\r\n\r\n  }\r\n\r\n});","import React, { useState,  useLayoutEffect } from 'react';\r\nimport { View, Text, StyleSheet,  FlatList } from \"react-native\";\r\nimport StudentCourseGridCard from '../../../component/StudentCourseGridCard';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\n\r\n\r\nexport default function StudentDashboard({navigation}) {\r\n\r\n\r\n//--------------Copy This Piece Of Code Here------------\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const apiConnection = new APIConnection();\r\n          useLayoutEffect(() => {\r\n            //your code here\r\n            if(isFocused) {\r\n            \r\n              refresh();\r\n            \r\n            }\r\n         },[isFocused]);\r\n\r\n\r\n function refresh(){\r\n  apiConnection.getClasses().then(json => {\r\n    setData(json)})\r\n   \r\n }\r\n\r\n //------------------------------------------\r\n    function classCardComponent(itemData) {\r\n        function pressHandler() {\r\n            console.log(\"item data debug:\", itemData)\r\n    \r\n          navigation.navigate('Student Course View', {\r\n            classId: itemData.item.class_id,\r\n            className: itemData.item.class_name\r\n          });\r\n        }\r\n    console.log(\"ITEMDATA: \" + itemData.item.class_id)\r\n        return (\r\n          <StudentCourseGridCard\r\n            classID ={itemData.item.class_id}\r\n            title={itemData.item.class_name}\r\n            // color={\"#534789\"}\r\n            onPress={pressHandler}\r\n            refresh ={refresh}\r\n          />\r\n        );\r\n      }\r\n     \r\n      return (\r\n        \r\n  \r\n        <View style={styles.container}>\r\n        <Text style={styles.title}>Courses</Text>\r\n\r\n\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item) => item.class_id}\r\n          renderItem={classCardComponent}\r\n          numColumns={2}\r\n        />\r\n\r\n    </View>\r\n\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n\r\n  },\r\n\r\n  content: {\r\n    alignItems: \"center\",\r\n\r\n  },\r\n\r\n  bottomContainer: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n\r\n  },\r\n\r\n  \r\n\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: 'black',\r\n    marginTop:50,\r\n    marginBottom: 50\r\n\r\n  },\r\n\r\n  boxes: {\r\n      marginTop:10,\r\n      backgroundColor: 'white',\r\n      borderColor: '#C0C0C0',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n      width:300,\r\n      height: 200,\r\n      textAlign: \"center\",\r\n      alignItems: \"center\"\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n\r\n  addBttn: {\r\n  alignSelf: 'flex-end',\r\n\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width:80,\r\n  height:80,\r\n  paddingBottom:5,\r\n  position: \"absolute\",\r\n    //height: 60,\r\n\r\n  borderRadius: 50,\r\n  backgroundColor: '#4970FA',\r\n  color: 'white',\r\n  right: 20,\r\n  bottom:40\r\n\r\n  },\r\n\r\n  addText: {\r\n\r\n    color: 'white',\r\n    fontSize: 50,\r\n    fontWeight: \"bold\",\r\n\r\n  }\r\n}\r\n        \r\n      );\r\n\r\n      \r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Animated,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { COLORS, SIZES } from \"../constants/themes\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nimport APIConnection from \"../utility/APIConnection\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\nexport default function QuizComponent({ unitID, navigation }) {\r\n  const data = [\r\n    {\r\n      quizdata_id: 1,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 0,\r\n    },\r\n    {\r\n      quizdata_id: 2,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 1,\r\n    },\r\n    {\r\n      quizdata_id: 3,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 2,\r\n    },\r\n    {\r\n      quizdata_id: 4,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 3,\r\n    },\r\n  ];\r\n\r\n  const [allQuestions, setAllQuestions] = useState(data);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentOptionSelected, setCurrentOptionSelected] = useState(null);\r\n  const [correctOption, setCorrectOption] = useState(null);\r\n  const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [showNextButton, setShowNextButton] = useState(false);\r\n  const [showScoreModal, setShowScoreModal] = useState(false);\r\n\r\n  //not needed, just being used for printing\r\n  const [iQuizData, setIQuizData] = useState();\r\n  // also not needed as well\r\n  const [quizID, setQuizID] = useState();\r\n  const isFocused = useIsFocused();\r\n\r\n  const apiConnection = new APIConnection();\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      let response = await apiConnection.getUnitQuizContent(unitID);\r\n      if (response.status == 400) {\r\n        //do nothing, for now\r\n      }\r\n      response = await response.json();\r\n\r\n      setQuizID(response[0].quiz_id);\r\n\r\n      let quizDataResponse = await apiConnection.getQuizData(\r\n        response[0].quiz_id\r\n      );\r\n\r\n      if (quizDataResponse.status == 400) {\r\n        // do nothing\r\n      } else {\r\n        quizDataResponse = await quizDataResponse.json();\r\n\r\n        setIQuizData(quizDataResponse);\r\n        processJSON(quizDataResponse);\r\n        console.log(\"Quiz data fetched is: \" + iQuizData);\r\n      }\r\n    }\r\n\r\n    if (isFocused) {\r\n      fetchMyAPI();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  function processJSON(quizDataResponse) {\r\n    let json = quizDataResponse;\r\n    for (let i = 0; i < quizDataResponse.length; i++) {\r\n      let answers = quizDataResponse[i].quizdata_answers;\r\n      answers = answers.replace(/[']+/g, '\"');\r\n      let answersJson = JSON.parse(answers);\r\n      json[i].quizdata_answers = answersJson.choices;\r\n      json[i].correct_option = answersJson.answer;\r\n\r\n      console.log(\"Quiz data answers\" + answersJson.type + answersJson[0]);\r\n      console.log(\"Quiz data answers array\" + [\"hi\", \"There\", \"Cutie\"]);\r\n    }\r\n\r\n    setAllQuestions(json);\r\n  }\r\n\r\n  const validateAnswer = (selectedOption) => {\r\n    let correct_option = allQuestions[currentQuestionIndex][\"correct_option\"];\r\n    setCurrentOptionSelected(selectedOption);\r\n    setCorrectOption(correct_option);\r\n    setIsOptionsDisabled(true);\r\n    if (selectedOption == correct_option) {\r\n      // Set Score\r\n      setScore(score + 1);\r\n    }\r\n    // Show Next Button\r\n    setShowNextButton(true);\r\n  };\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex == allQuestions.length - 1) {\r\n      // Last Question\r\n      // Show Score Modal\r\n      setShowScoreModal(true);\r\n    } else {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setCurrentOptionSelected(null);\r\n      setCorrectOption(null);\r\n      setIsOptionsDisabled(false);\r\n      setShowNextButton(false);\r\n    }\r\n    Animated.timing(progress, {\r\n      toValue: currentQuestionIndex + 1,\r\n      duration: 1000,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n  const restartQuiz = () => {\r\n    setShowScoreModal(false);\r\n\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n\r\n    setCurrentOptionSelected(null);\r\n    setCorrectOption(null);\r\n    setIsOptionsDisabled(false);\r\n    setShowNextButton(false);\r\n    Animated.timing(progress, {\r\n      toValue: 0,\r\n      duration: 1000,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  async function saveProgressAndNext() {\r\n    await apiConnection.postProgress(unitID);\r\n    setShowScoreModal(false);\r\n  }\r\n\r\n  const renderQuestion = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          marginVertical: 40,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        {/* Question Counter */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: COLORS.white,\r\n              fontSize: 20,\r\n              opacity: 0.6,\r\n              marginRight: 2,\r\n            }}\r\n          >\r\n            {currentQuestionIndex + 1}\r\n          </Text>\r\n          <Text style={{ color: COLORS.white, fontSize: 18, opacity: 0.6 }}>\r\n            / {allQuestions.length}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Question */}\r\n        <Text\r\n          style={{\r\n            color: COLORS.white,\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          {allQuestions[currentQuestionIndex]?.quizdata_question}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n  const renderOptions = () => {\r\n    return (\r\n      <View>\r\n        {allQuestions[currentQuestionIndex]?.quizdata_answers.map(\r\n          (option, index) => (\r\n            <TouchableOpacity\r\n              onPress={() => validateAnswer(index)}\r\n              disabled={isOptionsDisabled}\r\n              key={index}\r\n              style={{\r\n                borderWidth: 3,\r\n                borderColor:\r\n                  index == correctOption\r\n                    ? COLORS.success\r\n                    : index == currentOptionSelected\r\n                    ? COLORS.error\r\n                    : COLORS.secondary + \"40\",\r\n                backgroundColor:\r\n                  index == correctOption\r\n                    ? COLORS.success + \"20\"\r\n                    : index == currentOptionSelected\r\n                    ? COLORS.error + \"20\"\r\n                    : COLORS.secondary + \"20\",\r\n                height: 60,\r\n                borderRadius: 20,\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                paddingHorizontal: 20,\r\n                marginVertical: 10,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 20, color: COLORS.white }}>\r\n                {option}\r\n              </Text>\r\n\r\n              {/* Show Check Or Cross Icon based on correct answer*/}\r\n              {index == correctOption ? (\r\n                <View\r\n                  style={{\r\n                    width: 30,\r\n                    height: 30,\r\n                    borderRadius: 30 / 2,\r\n                    backgroundColor: COLORS.success,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    name=\"check\"\r\n                    iconStyle={{\r\n                      color: COLORS.white,\r\n                      fontSize: 20,\r\n                    }}\r\n                  />\r\n                </View>\r\n              ) : index == currentOptionSelected ? (\r\n                <View\r\n                  style={{\r\n                    width: 30,\r\n                    height: 30,\r\n                    borderRadius: 30 / 2,\r\n                    backgroundColor: COLORS.error,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    name=\"close\"\r\n                    iconStyle={{\r\n                      color: COLORS.white,\r\n                      fontSize: 20,\r\n                    }}\r\n                  />\r\n                </View>\r\n              ) : null}\r\n            </TouchableOpacity>\r\n          )\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n  const renderNextButton = () => {\r\n    if (showNextButton) {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={handleNext}\r\n          style={{\r\n            marginTop: 20,\r\n            width: \"100%\",\r\n            backgroundColor: COLORS.accent,\r\n            padding: 20,\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 20, color: COLORS.white, textAlign: \"center\" }}\r\n          >\r\n            Next\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  //--------------------Progress Bar-----------------\r\n  const [progress, setProgress] = useState(new Animated.Value(0));\r\n  const progressAnim = progress.interpolate({\r\n    inputRange: [0, allQuestions.length],\r\n    outputRange: [\"0%\", \"100%\"],\r\n  });\r\n  const renderProgressBar = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          height: 20,\r\n          borderRadius: 20,\r\n          backgroundColor: \"#00000020\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={[\r\n            {\r\n              height: 20,\r\n              borderRadius: 20,\r\n              backgroundColor: COLORS.accent,\r\n            },\r\n            {\r\n              width: progressAnim,\r\n            },\r\n          ]}\r\n        ></Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={{\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          paddingVertical: 40,\r\n          paddingHorizontal: 16,\r\n          backgroundColor: COLORS.background,\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {/* ProgressBar */}\r\n        {renderProgressBar()}\r\n\r\n        {/* Question */}\r\n        {renderQuestion()}\r\n\r\n        {/* Options */}\r\n        {renderOptions()}\r\n\r\n        {/* Next Button */}\r\n        {renderNextButton()}\r\n\r\n        {/* Score Modal */}\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={showScoreModal}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: COLORS.primary,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: COLORS.white,\r\n                width: \"90%\",\r\n                borderRadius: 20,\r\n                padding: 20,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>\r\n                {score > allQuestions.length / 2 ? \"Congratulations!\" : \"Oops!\"}\r\n              </Text>\r\n\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-start\",\r\n                  alignItems: \"center\",\r\n                  marginVertical: 20,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 30,\r\n                    color:\r\n                      score > allQuestions.length / 2\r\n                        ? COLORS.success\r\n                        : COLORS.error,\r\n                  }}\r\n                >\r\n                  {score}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    color: COLORS.black,\r\n                  }}\r\n                >\r\n                  / {allQuestions.length}\r\n                </Text>\r\n              </View>\r\n              {/* Retry Quiz button */}\r\n              <TouchableOpacity\r\n                onPress={restartQuiz}\r\n                style={{\r\n                  backgroundColor: COLORS.accent,\r\n                  padding: 20,\r\n                  width: \"100%\",\r\n                  borderRadius: 20,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: COLORS.white,\r\n                    fontSize: 20,\r\n                  }}\r\n                >\r\n                  Retry Quiz\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n\r\n              {/* Save Progress button */}\r\n              {score > allQuestions.length / 2 ? (\r\n                <TouchableOpacity\r\n                  onPress={() => saveProgressAndNext()}\r\n                  style={{\r\n                    paddingTop: 20,\r\n                    marginTop: 20,\r\n\r\n                    backgroundColor: COLORS.accent,\r\n                    padding: 20,\r\n                    width: \"100%\",\r\n                    borderRadius: 20,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      color: COLORS.white,\r\n                      fontSize: 20,\r\n                    }}\r\n                  >\r\n                    Save Progress\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ) : null}\r\n\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Background Image */}\r\n        {/* <Image\r\n                source={require('../assets/images/DottedBG.png')}\r\n                style={{\r\n                    width: SIZES.width,\r\n                    height: 130,\r\n                    zIndex: -1,\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    opacity: 0.5\r\n                }}\r\n                resizeMode={'contain'}\r\n                /> */}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    SafeAreaView,\r\n    StatusBar,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Modal,\r\n    Animated,\r\n    TextInput,\r\n    ScrollView,\r\n} from \"react-native\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nimport { Button } from \"react-native-elements\";\r\nimport FontAwesome5Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { color } from \"react-native-elements/dist/helpers\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { RadioButton } from 'react-native-paper';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport QuizComponent from \"../../../component/QuizComponent\";\r\n\r\n\r\n\r\n\r\nexport default function StudentQuizView({ navigation, route }) {\r\n    const {unitID, unitName} = route.params;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <ScrollView>\r\n            <QuizComponent\r\n            unitID={unitID}\r\n            ></QuizComponent>\r\n        </ScrollView>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Animated,\r\n  TextInput,\r\n  Platform,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { RadioButton } from \"react-native-paper\";\r\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from \"react-native-youtube-iframe\";\r\nimport Content from \"../../../component/CreateComponent\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function StudentUnitContentView({ navigation, route }) {\r\n  const { unitID, unitName } = route.params;\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const [videoContent, setVideoContent] = useState(\"\");\r\n  const [unitText, setUnitText] = useState(\"\");\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const apiConnection = new APIConnection();\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    //your code here\r\n    if (isFocused) {\r\n      apiConnection.getUnitContent(unitID).then((json) => {\r\n        setData(json);\r\n        let newVideoData = json.unit_content;\r\n        setVideoContent(newVideoData);\r\n        setUnitText(json.unit_content_type);\r\n      });\r\n    }\r\n  }, [isFocused]);\r\n\r\n  function YouTubeGetID(url) {\r\n    url = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n    return url[2] !== undefined ? url[2].split(/[^0-9a-z_\\-]/i)[0] : url[0];\r\n  }\r\n\r\n  function isValidUrl(_string) {\r\n    const matchpattern =\r\n      /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/gm;\r\n    return matchpattern.test(_string);\r\n  }\r\n\r\n  //turns valid link into component\r\n  function textInput(contentString) {\r\n    //if this is just a text\r\n    if (!isValidUrl(contentString)) {\r\n      return (\r\n        <View>\r\n          <Text>{\"There is no video for this unit\"}</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    var linkInput = JSON.stringify(contentString);\r\n\r\n    if (Platform.OS === \"web\") {\r\n      return (\r\n        <div style={{ marginTop: 10 }}>\r\n          <ReactPlayer\r\n            url={linkInput}\r\n            height={200}\r\n            width={400}\r\n            controls={true}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (Platform.OS == \"ios\" || Platform.OS === \"android\") {\r\n      return (\r\n        <YoutubePlayer\r\n          height={270}\r\n          width={400}\r\n          play={playing}\r\n          videoId={YouTubeGetID(linkInput)}\r\n          webViewStyle={{ bottom: -40 }}\r\n        //videoId={\"iee2TATGMyI\"}\r\n        //https://youtu.be/cBxyB788_5w\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        {textInput(videoContent)}\r\n        {\r\n          unitText == null ? null : <Card>\r\n            <Card.Content>\r\n              <Paragraph>{unitText}</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n        }\r\n\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //  flex:1,\r\n\r\n    //margin:5,\r\n    //borderWidth:1,\r\n    paddingTop: \"30%\",\r\n    borderColor: \"#C0C0C0\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'center'\r\n  },\r\n  textStyle: {\r\n    //  flex:1,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginHorizontal: 5,\r\n    marginBottom: 10,\r\n  },\r\n  textHolder: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    minWidth: Dimensions.get(\"window\").width - 20,\r\n    //paddingBottom:100,\r\n    //maxHeight: 800,\r\n\r\n    //minWidth:Dimensions.get('window').width-15,\r\n  },\r\n});\r\n","import StudentQuizView from \"./StudentQuizView\";\r\nimport StudentUnitContentView from \"./StudentUnitContentView\";\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function TabsStudentUnitView({ route, navigation }) {\r\n\r\n    const {unitID, unitName} = route.params;\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen name=\"Content\" component={StudentUnitContentView} initialParams={{unitID, unitName}} />\r\n            <Tab.Screen name=\"Quiz\" component={StudentQuizView}  initialParams={{unitID, unitName}} />\r\n        </Tab.Navigator>\r\n    );\r\n};","import { useEffect, useState } from 'react';\r\nimport * as React from 'react-native'\r\nimport { Text, View, Button, TouchableOpacity, FlatList, StyleSheet, SafeAreaView } from 'react-native'\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport { Icon } from 'react-native-elements';\r\nimport { ActivityIndicator } from 'react-native-paper';\r\n\r\n\r\nexport default function StudentLessonView({ navigation, route }) {\r\n\r\n    const { lessonID, instID, lesson_name } = route.params;\r\n    const isFocused = useIsFocused();\r\n    const [LessonData, setLessonData] = useState([]);\r\n    const [dummy, setDummy] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n\r\n    const apiConnection = new APIConnection();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (isFocused) {\r\n            setIsLoading(true);\r\n\r\n            fetchData();\r\n        }\r\n\r\n        async function fetchData() {\r\n            let json = await apiConnection.getSectionsPerLesson(lessonID);\r\n            for (let i = 0; i < json.length; i++) {\r\n\r\n                let item = json[i];\r\n                let result = await apiConnection.getUnitProgress(item.unit_id);\r\n                if (result.result.length > 0) {\r\n                    json[i]['completed'] = 1;\r\n\r\n                }\r\n                else {\r\n                    json[i]['completed'] = 0;\r\n\r\n                }\r\n\r\n            }\r\n            setLessonData(json);\r\n            setIsLoading(false);\r\n\r\n\r\n        }\r\n\r\n\r\n    }, [isFocused]);\r\n\r\n\r\n    function debugDummy() {\r\n        setDummy(!dummy);\r\n    }\r\n\r\n\r\n\r\n    function onUnitPress(unitID) {\r\n        navigation.navigate('Student Content View Tab', {\r\n            unitID: unitID\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    console.log(\"LESSON DATA INDEX ONE:\" + JSON.stringify(LessonData[0]))\r\n\r\n    return (\r\n\r\n        <View style={styles.entireView}>\r\n\r\n                    <View style={styles.lessonNameContainer}>\r\n                        <Text style={styles.lessonName}>{lesson_name}</Text>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, width: '100%', alignItems: 'center' }}>\r\n\r\n                        <FlatList\r\n                            numColumns={3}\r\n                            data={LessonData}\r\n                            keyExtractor={(it) => it.unit_id}\r\n                            contentContainerStyle={{ alignItems: 'center' }}\r\n                            style={{ width: '100%' }}\r\n                            renderItem={({ item }) => {\r\n\r\n                                return (\r\n                                    <View >\r\n\r\n                                        <TouchableOpacity style={styles.unitTouch} onPress={() => onUnitPress(item.unit_id)}>\r\n\r\n                                            <Text adjustsFontSizeToFit numberOfLines={2} style={styles.unitText}>\r\n                                                <Text >\r\n                                                    {item.completed === 1 ? <Icon style={{ borderRadius: 15, padding: 2, backgroundColor: 'green' }} color={'white'} name={\"check\"} size={12} /> :\r\n                                                        null}\r\n                                                </Text>\r\n\r\n\r\n\r\n                                                {item.unit_name}\r\n\r\n                                            </Text>\r\n\r\n\r\n\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )\r\n\r\n                            }\r\n\r\n                            }\r\n\r\n                        />\r\n                    </View>\r\n\r\n\r\n\r\n                </View>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    unit: {\r\n\r\n        flex: 1,\r\n        backgroundColor: 'green',\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    lessonName: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white',\r\n        paddingRight: 30,\r\n        paddingLeft: 30,\r\n    },\r\n    lessonNameContainer: {\r\n        justifyContent: 'center',\r\n        backgroundColor: '#00bfff',\r\n        height: 60\r\n    },\r\n\r\n    unitTouch: {\r\n\r\n        width: 100,\r\n        height: 60,\r\n        backgroundColor: '#f0f8ff',\r\n        borderRadius: 5,\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        margin: 10,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n        shadowOpacity: 2,\r\n        shadowOffset: { width: 1, height: 2 }\r\n    },\r\n    unitText: {\r\n\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: 'black',\r\n\r\n        textAlign: 'center'\r\n    },\r\n    entireView: {\r\n        flex: 1,\r\n        backgroundColor: '#3385ff'\r\n    }\r\n})","import React, { useEffect, useState } from 'react';\r\n// Import required components\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport APIConnection from \"../utility/APIConnection\";\r\nimport { Badge } from \"react-native-paper\"\r\n\r\n\r\nexport default function StudentModuleView({ item, onClickFunction, instructorID, navigation }) {\r\n  //Custom Component for the Expandable List\r\n  const apiConnection = new APIConnection();\r\n  const [layoutHeight, setLayoutHeight] = useState(0);\r\n  const [progress, setProgress] = useState(true);\r\n  const [modProg, setModProg] = useState(0);\r\n\r\n  //same as component did mount, this method is called when the component is first mounted\r\n  useEffect(() => {\r\n    var mProg = \"0.0\"\r\n    apiConnection.getModuleProgress(item.Module_ID)\r\n      .then((result) => {\r\n        console.log('JSON for Module :' + JSON.stringify(result));\r\n        var arr = result.AllUnits\r\n        if (arr) {\r\n          var len = arr.length\r\n          var c = 0\r\n          var moduleProg = 0\r\n          arr.map((item, key) => {\r\n            if (item.completed) c = c + 1\r\n\r\n          }, result)\r\n\r\n          if (c) moduleProg = c / len\r\n\r\n          else moduleProg = 0\r\n          mProg = (moduleProg * 100).toFixed(2)\r\n          setModProg(mProg)\r\n\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    if (item.isExpanded) {\r\n      setLayoutHeight(null);\r\n      console.log(\"here: \", item)\r\n\r\n      item.Lessons.map((lesson, key) => {\r\n        lesson.lProg = \"0.0\"\r\n        apiConnection.getLessonProgress(lesson.lesson_id)\r\n          .then((json) => {\r\n            var arr = json.AllUnits\r\n\r\n            if (arr) {\r\n              var len = arr.length\r\n              var c = 0\r\n              var lessonProg = 0\r\n              arr.map((item, key) => {\r\n                if (item.completed) c = c + 1\r\n\r\n              }, json)\r\n\r\n              if (c) lessonProg = c / len\r\n\r\n              else lessonProg = 0\r\n              lesson.lProg = (lessonProg * 100).toFixed(2)\r\n              setProgress(!progress)\r\n            }\r\n\r\n          })\r\n      })\r\n\r\n\r\n\r\n    } else {\r\n\r\n      setLayoutHeight(0);\r\n\r\n    }\r\n  }, [item.isExpanded]);\r\n\r\n\r\n\r\n  console.log('progress ' + progress)\r\n\r\n\r\n  return (\r\n    <View>\r\n      {/*Header of the Expandable List Item*/}\r\n\r\n      <View style={styles.classes}>\r\n        <TouchableOpacity\r\n          activeOpacity={0.8}\r\n          onPress={onClickFunction}\r\n          style={styles.header}>\r\n\r\n\r\n          <Badge size={24} style={{fontWeight:\"bold\"}}> {modProg}%</Badge>\r\n          <View style={{width: '75%'}}>\r\n            <Text style={styles.headerText} >{item.Module_Title} </Text>\r\n\r\n          </View>\r\n\r\n\r\n          <FontAwesome5 style={{ transform: [{ rotate: layoutHeight != 0 ? '180deg' : '0deg' }] }} name={'angle-down'} size={15} color={'white'} />\r\n\r\n\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View\r\n        style={{\r\n          height: layoutHeight,\r\n          overflow: 'hidden',\r\n\r\n\r\n        }}>\r\n        {/*Content under the header of the Expandable List Item*/}\r\n        {item.Lessons.map((item, key) => (\r\n          <TouchableOpacity\r\n            key={key}\r\n            style={styles.content}\r\n            onPress={() => navigation\r\n              .navigate('Lesson View', {\r\n                lessonID: item.lesson_id,\r\n                instID: instructorID,\r\n                lesson_name: item.lesson_name,\r\n\r\n              })\r\n            }\r\n\r\n          >\r\n\r\n            <View style={{ justifyContent: 'center', flexDirection: 'row' }}>\r\n\r\n            <Text style={styles.text}>\r\n              {item.lesson_name} \r\n            </Text>\r\n\r\n\r\n            \r\n              <Badge style={{ marginBottom: 8, backgroundColor: '#3385ff', borderRadius: 10, fontSize: 15 }}>\r\n                {item.lProg}%\r\n              </Badge>\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n          </TouchableOpacity>\r\n\r\n        ))}\r\n\r\n      </View>\r\n\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  classes: {\r\n\r\n    alignItems: 'center',\r\n    padding: 5,\r\n    borderRadius: 10\r\n  },\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n  },\r\n  header: {\r\n    width: 345,\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    borderWidth: 2,\r\n    borderColor: 'black',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#3385ff',\r\n    padding: 20,\r\n\r\n  },\r\n  headerText: {\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n\r\n  },\r\n  separator: {\r\n    height: 1,\r\n    backgroundColor: 'black',\r\n    width: '95%',\r\n    marginLeft: 16,\r\n    marginRight: 16,\r\n  },\r\n  text: {\r\n    width:'80%',\r\n    fontSize: 16,\r\n    color: 'black',\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  content: {\r\n    borderRadius: 10,\r\n    borderColor: 'black',\r\n    borderWidth: 2,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    margin: 2\r\n  },\r\n});","import { useEffect, useState } from \"react\";\r\nimport * as React from \"react-native\";\r\n\r\n//import { render } from 'react-dom';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  Platform,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport StudentModuleView from \"../../../component/StudentModuleView\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\n\r\nexport default function StudentCourseView({ navigation, route }) {\r\n//retrieving course name and courseID from route.params\r\n    const {classId, className} = route.params;\r\n\r\n\r\n  //-----------API Connection Code----------\r\n  const isFocused = useIsFocused();\r\n\r\n  const [finalData, setFinalData] = useState([]);\r\n  const [lessonID, setLessonID] = useState(0);\r\n\r\n  const apiConnection = new APIConnection();\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getAllModulesForClass(classId)\r\n      .then((json)=>{\r\n \r\n        let data = processAPIModuleData(json);\r\n        data.forEach(element=>{\r\n\r\n        \r\n          apiConnection.getLessonsInModule(element.Module_ID)\r\n          .then((json)=>{\r\n             processAPILesson(element.Lessons,json);\r\n          \r\n          });\r\n          \r\n        })\r\n       \r\n        setFinalData(data);\r\n\r\n      })\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n  \r\n  function processAPILesson(lessonArr, lessonData){\r\n\r\n    for(let i =0; i < lessonData.length; i++){\r\n      let newLesson={};\r\n      newLesson['lesson_id'] = lessonData[i].lesson_id;\r\n      newLesson['lesson_name'] = lessonData[i].lesson_name;\r\n      newLesson['lesson_descrip'] = lessonData[i].lesson_descrip;\r\n      newLesson['lesson_index'] = lessonData[i].lesson_index;\r\n\r\n      lessonArr[i] = newLesson;\r\n      \r\n    }\r\n    return lessonArr;\r\n  }\r\n\r\n\r\n    //Morph json from API into an array that we can use\r\n    function processAPIModuleData(json){\r\n      let returnData=[]\r\n     for(let i = 0; i <json.length; i++){\r\n       let newModule = {};\r\n       newModule['isExpanded'] = false;\r\n       newModule['Module_Title'] = json[i].module_name;\r\n       newModule['Module_ID'] = json[i].module_id;\r\n       newModule['instructorID'] = json[i].instructor_id;\r\n      newModule['Lessons'] = [];\r\n  \r\n      returnData[i] = newModule;\r\n  \r\n      \r\n     }\r\n   \r\n     return returnData;\r\n  }\r\n  \r\n \r\n\r\n  //---------------------------------------\r\n\r\n  //Morph json from API into an array that we can use\r\n\r\n\r\n  if (Platform.OS == \"android\") {\r\n    UIManager.setLayoutAnimationEnabledExperimental(true);\r\n  }\r\n  //this is used to signified the component is abou tto be animated (like setState())\r\n  //could be used to define animation property\r\n  const updateLayout = (index) => {\r\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\r\n    const array = [...finalData];\r\n\r\n    array[index][\"isExpanded\"] = !array[index][\"isExpanded\"];\r\n\r\n    setFinalData(array);\r\n  };\r\n\r\n  \r\n  return (\r\n    <View \r\n      style={{ flex: 2, alignItems: \"stretch\" }}\r\n    >\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        \r\n\r\n        <View style={styles.courseTitleBackground}>\r\n          <Text\r\n            style={{\r\n              fontSize: 25,\r\n              color: \"white\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {className}\r\n          </Text>\r\n        </View>\r\n\r\n \r\n        <ScrollView>\r\n          <View style={styles.lessContainer}>\r\n\r\n            <View style={styles.container}>\r\n              <View style={{ flexDirection: \"row\", padding: 10 }}>\r\n                <TouchableOpacity\r\n                  onPress={() => setMultiSelect(!multiSelect)}\r\n                ></TouchableOpacity>\r\n              </View>\r\n              <ScrollView>\r\n                {finalData.map((item, key) => (\r\n                  <StudentModuleView\r\n                    key={key}\r\n                    onClickFunction={() => {\r\n                      updateLayout(key);\r\n                    }}\r\n                    route = {route}\r\n                    navigation ={navigation}\r\n                    instructorID = {finalData[0].instructorID}\r\n                    item={item}\r\n                  />\r\n                  \r\n                ))}\r\n              </ScrollView>\r\n            </View>\r\n\r\n          </View>\r\n        </ScrollView>\r\n\r\n       \r\n      </SafeAreaView>\r\n      \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  courseTitleBackground: {\r\n    backgroundColor: \"#00bfff\",\r\n    padding: 20,\r\n  },\r\n  \r\n  editButton: {\r\n    alignSelf: 'flex-end',\r\n\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width:80,\r\n  height:80,\r\n  paddingBottom:5,\r\n  position: \"absolute\",\r\n\r\n  borderRadius: 50,\r\n  backgroundColor: '#4970FA',\r\n  color: 'white',\r\n  right: 20,\r\n  bottom:40\r\n  },\r\n  titleStyle: {\r\n    color: \"white\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: 350,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n  },\r\n  menu: {\r\n    alignSelf: \"flex-start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#3385ff\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  lesson: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lessonCompletion: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignSelf: \"center\",\r\n  },\r\n  lessContainer: {\r\n    flex: 20,\r\n    marginTop: 10,\r\n    width: 350,\r\n    alignSelf: \"center\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  lessonNum: {\r\n    backgroundColor: `#0000ff`,\r\n    marginTop: 50,\r\n    width: 80,\r\n    height: 25,\r\n    borderRadius: 78,\r\n  },\r\n  searchIcon: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  homeIcon: {\r\n    alignSelf: \"flex-start\",\r\n    marginLeft: 5,\r\n  },\r\n  settingIcon: {\r\n    alignSelf: \"center\",\r\n  },\r\n  profileIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginRight: 5,\r\n  },\r\n});","import * as React from 'react-native';\r\nimport {  useIsFocused } from \"@react-navigation/native\";\r\nimport { useState, useEffect } from 'react';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport { Avatar } from \"react-native-paper\";\r\nimport {Text, View,TouchableOpacity, StyleSheet, SafeAreaView,ScrollView} from 'react-native';\r\nimport {Divider} from 'react-native-paper';\r\n\r\nexport default function CourseDescriptionScreen({ navigation,route}){\r\n    \r\n    const {class_id,class_name, class_descrip, instructor_name} = route.params;\r\n\r\n    const [usersClasses,setUserClasses] = useState([]);\r\n    const isFocused = useIsFocused();\r\n    const apiConnection = new APIConnection();\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        if (isFocused) {\r\n            getClasses();\r\n            \r\n         \r\n        }\r\n\r\n    }, [isFocused]);\r\n    \r\n    \r\n    function signUp(){\r\n        apiConnection.signUpForClass(class_id);\r\n       \r\n        }\r\n\r\n\r\n    function getClasses(){\r\n        apiConnection.getClasses()\r\n        .then((json)=>{\r\n\r\n             setUserClasses(json);\r\n\r\n        }) ;       \r\n    }\r\n    \r\n   \r\n    \r\n   \r\n    function enrolled(){\r\n        let i= 0;\r\n\r\n        let bool = false;\r\n\r\n        while(i< usersClasses.length){\r\n        \r\n                if(usersClasses[i].class_id == class_id)\r\n                {       \r\n                   bool= true;\r\n                   alert('already enrolled');\r\n                    i = usersClasses.length;\r\n\r\n                }\r\n\r\n                else if(usersClasses[i].class_name == class_name){\r\n                   alert('Cannot add class with exact same name');\r\n                   i = usersClasses.length;\r\n                   bool = true;\r\n                }\r\n      \r\n                    else {\r\n                 \r\n                        bool = false;\r\n                       \r\n                    }\r\n                   \r\n                    \r\n                \r\n                i++;\r\n                \r\n           }\r\n            return bool;\r\n   \r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        \r\n       \r\n        <View style={{flex:1,backgroundColor:'#3385ff', \r\n        justifyContent:'center',  alignItems:'center'}}>\r\n        \r\n            <SafeAreaView>\r\n\r\n                {/* White card container View */}\r\n            <View style={styles.card }>\r\n                        {/* View container for avatar and instructor name  */}\r\n                <View style={{flexDirection:'column', marginLeft: 20, marginTop: 40, maxWidth:90, height: 120}}>\r\n\r\n                <Avatar.Image\r\n                size={90}\r\n                style={styles.shadowOverlay}\r\n                source={ require('./icons/appProfile.png')}\r\n                /> \r\n                    <Text> Instructor Name :{instructor_name} </Text>\r\n                </View>\r\n                \r\n\r\n                   \r\n                <View style={{flex:1,flexGrow: 1,flexDirection:'column', height:240}}>\r\n\r\n                    <View style={{height: 180,marginTop:40, \r\n                    marginBottom:10, marginLeft: 30}}>\r\n\r\n                    <Text  style={styles.courseDescript}>Course Description</Text>\r\n                    <Divider/>\r\n\r\n                <ScrollView>\r\n                           \r\n                    <View >\r\n\r\n                        <Text style={{fontSize:14, fontWeight:'normal'}}> \r\n                         {class_descrip}\r\n                          </Text>\r\n                    </View>\r\n                            </ScrollView>\r\n                       \r\n                </View>\r\n                     \r\n                   \r\n                    {/* *button so student can enroll in a specific course */}\r\n                    <View style ={{marginLeft: 40,\r\n                            marginTop:5, flexDirection:'column'}}>\r\n                                \r\n                    <TouchableOpacity  style ={styles.enroll} onPress={()=>\r\n                    { \r\n                        let a =  enrolled();\r\n                        if(a== true ) {\r\n                   \r\n                }\r\n                else {\r\n                    signUp();\r\n                    alert('Enrollment Accepted')\r\n                    console.log(class_id);\r\n                    navigation.navigate('Student Course View',{\r\n                        classDesc: class_descrip,\r\n                        classId:class_id,\r\n                         className: class_name\r\n                });\r\n                   }}}>\r\n                            <Text style={styles.text}>\r\n                                Enroll\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                        </View>\r\n                </View>\r\n            </View>\r\n                 \r\n        \r\n        </SafeAreaView>\r\n        </View>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n        alignSelf:'center',\r\n         width: 350, \r\n        height: 300, \r\n        borderRadius: 40,\r\n        marginLeft:50, \r\n        marginRight:50,\r\n        marginTop:50, \r\n        backgroundColor:'white',\r\n        flexDirection:'row',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 6.68,\r\n        elevation: 11  \r\n    },\r\n    shadowOverlay:{\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 6.68,\r\n        elevation: 11  \r\n    },\r\n    courseDescript:{\r\n        fontWeight:\"500\",\r\n        fontSize:20,\r\n       \r\n    },\r\n    text:{\r\n        fontSize:30,\r\n        color:'white',\r\n\r\n\r\n    },\r\n    enroll:{\r\n        alignItems:'center',\r\n        backgroundColor:'blue',\r\n        borderRadius:25,\r\n        width: 100,\r\n        height: 50,\r\n    }\r\n})","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\n\r\nimport StudentDashboard from './StudentDashboard'\r\nimport TabsStudentUnitView from './TabsStudentUnitView'\r\nimport StudentLessonView from './StudentLessonView'\r\nimport StudentCourseView from './StudentCourseView'\r\nimport CourseDescriptionScreen from './StudentCourseDescription'\r\n\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function DashBoardStackNavigatorStudent(navigation) {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: true,\r\n    }}>\r\n\r\n<Stack.Screen name=\"Student Dashboard\" component={StudentDashboard} options={{ headerShown: false }}/>\r\n \r\n      <Stack.Screen name=\"Student Content View Tab\" component={TabsStudentUnitView} options={{ headerShown: true }}/>\r\n      <Stack.Screen name=\"Course Description\" component={CourseDescriptionScreen}/>\r\n     <Stack.Screen name=\"Student Course View\" component={StudentCourseView} />\r\n     <Stack.Screen name=\"Lesson View\" component={StudentLessonView}/>\r\n      \r\n\r\n      \r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { Children, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { Card } from \"react-native-paper\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\n\r\nexport default function StudentClassSearchScreenTest({ navigation }) {\r\n  //-------------------API Fetch code-------------------------\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  //--------------------------------------------\r\n\r\n\r\n\r\n\r\n  function processSearchResult(json)\r\n  {\r\n\r\n    let resultID = [];\r\n    let result = [];\r\n    for(let i = 0; i< json.length; i++)\r\n    {\r\n      if(!resultID.includes(json[i].class_id))\r\n      {\r\n          resultID.push(json[i].class_id);\r\n          result.push(json[i])\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n  function searchAPI(keyword) {\r\n    if (keyword == \"\") {\r\n      alert('Enter class name');\r\n    }\r\n    else {\r\n      apiConnection.getSearchClassResultSearchScreen(keyword).then((json) => {\r\n        console.log(\"Class search debug \" + json);\r\n        let processed = processSearchResult(json);\r\n\r\n        setData(processed);\r\n      });\r\n    }\r\n  }\r\n  function onCoursePress(course_id, course_name, course_descrip, instructor_name) {\r\n    navigation.navigate(\"Dashboard\",\r\n      {\r\n        screen: 'Course Description',\r\n        params: {\r\n          class_id: course_id,\r\n          class_name: course_name,\r\n          class_descrip: course_descrip,\r\n          instructor_name: instructor_name\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.content}>\r\n      <Text style={styles.title}> Discover Classes </Text>\r\n\r\n        <TextInput\r\n          style={search.searchHolder}\r\n          placeholder={\"Enter Class\"}\r\n          onChangeText={(newText) => setSearchTerm(newText)}\r\n          defaultValue={searchTerm}\r\n        />\r\n\r\n        <View >\r\n          <TouchableOpacity style={search.searchBttn}onPress={() => searchAPI(searchTerm)}>\r\n            <Text style={search.searchText}>Search</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </View>\r\n\r\n      <ScrollView style={{ backgroundColor: '#4970FA' }} contentContainerStyle={styles.content}>\r\n        {/* { {Data.filter((val)=>{\r\n            if (searchTerm == \"\") {\r\n              return val\r\n            } else if (val.CourseTitle.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n              return val\r\n            } \r\n            \r\n          }).map((item,key) => {\r\n            return (\r\n            <TouchableOpacity key={key}> \r\n              <Text style = {styles.boxes}>\r\n                {item.CourseTitle}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            )})} }  */}\r\n\r\n        {data.length > 0 && data.map((item, key) => {\r\n          return (\r\n            // <TouchableOpacity key={key}\r\n            // onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}\r\n            // >\r\n\r\n            //   <Text style={styles.boxes}>\r\n            //     {'Class Name: '+item.class_name +'\\n' +\r\n            //     '--------------------'+'\\n'+\r\n            //     'Class description: '+ item.class_descrip +'\\n'+ \r\n            //     '--------------------'+'\\n'+\r\n            //     'instructor: '+ item.instructor_name + '\\n' + \"the end of this \"}\r\n            //   </Text>\r\n\r\n            // </TouchableOpacity>\r\n            <Card key={item.class_id} style={styles.gridItem} >\r\n              <TouchableOpacity onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}>\r\n\r\n              <Card.Cover style={{height:'50%'}} source={{uri: 'https://picsum.photos/700' }}/>\r\n                <Card.Content  adjustsFontSizeToFit>\r\n\r\n                  <Text  style={styles.className} adjustsFontSizeToFit>\r\n                    { item.class_name }\r\n                  </Text>\r\n                  <Text  style={styles.classInstructor} adjustsFontSizeToFit>\r\n                    { item.instructor_name }\r\n                  </Text>\r\n\r\n                </Card.Content>\r\n              </TouchableOpacity>\r\n            </Card>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  className:{\r\n    textAlign:'center',\r\n    fontSize:16,\r\n    fontWeight:'bold'\r\n  },\r\n  classInstructor:{\r\n    textAlign:'center',\r\n    fontSize:16,\r\n  },\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    width: '65%',\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: 'white',\r\n    color: 'white',\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#E8EAED\",\r\n  },\r\n\r\n  content: {\r\n     alignItems: \"center\",\r\n     marginBottom:20\r\n\r\n  },\r\n\r\n  title: {\r\n\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    marginTop: 50,\r\n    // marginBottom: 50,\r\n\r\n  },\r\n\r\n  boxes: {\r\n    //padding: 30,\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 200,\r\n    textAlign: \"center\",\r\n\r\n    alignItems: \"center\",\r\n\r\n    //top: 10,\r\n  },\r\n});\r\n\r\nconst search = StyleSheet.create({\r\n  searchHolder: {\r\n    position: \"relative\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    bottom: 0,\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    width: 250,\r\n    marginTop: 10,\r\n    right: 50,\r\n  },\r\n\r\n  searchBttn: {\r\n    width: 100,\r\n    position: \"absolute\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#4970FA\",\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n    left: 80,\r\n    bottom: 0,\r\n  },\r\n\r\n  searchText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorHome from './StudentHome'\r\nimport StudentHome from './StudentHome'\r\nimport StudentClassSearchScreenTest from './StudentHome'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function HomeStackNavigatorStudent({navigation})  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"Student Home\" component={StudentClassSearchScreenTest} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { FAB} from 'react-native-paper'; \r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function StudentProfile({navigation}) {\r\n\r\n  const isFocused = useIsFocused();\r\n  const [data, setData] = useState([]);\r\n  const [classData, setClassData] = useState([]);\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  const mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n      mounted.current = true;\r\n      \r\n\r\n\r\n      return () => {\r\n          mounted.current = false;\r\n          \r\n      };\r\n  }, []);\r\n\r\n  /*useLayoutEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getUserForProfilePage().then((json) => {\r\n        setData(json);\r\n      });\r\n      apiConnection.getClasses().then((json) => {\r\n        setClassData(json);\r\n      });\r\n    }\r\n  }, [isFocused]);*/\r\n\r\n  const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n\r\n   if (isFocused) {  \r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n          setData(json);\r\n          \r\n        });\r\n        apiConnection.getClasses().then((json) => {\r\n          setClassData(json);\r\n        \r\n          \r\n        });\r\n      }\r\n\r\n      \r\n    }, [isFocused])\r\n\r\n\r\n  const shadowOverlay = {\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.userInfo}>\r\n        <View style={{ flexDirection: \"row\", marginTop: 15 }}>\r\n          <Avatar\r\n            rounded\r\n            size={100}\r\n            containerStyle={shadowOverlay}\r\n            source={data.user_pp || require('../../UserProfile/icons/defaultAvatar.png')}\r\n          />      \r\n          <View style={{ marginLeft: 20 }}>\r\n            <Text\r\n              style={[\r\n                styles.title,\r\n                {\r\n                  marginTop: 15,\r\n                  marginBottom: 5\r\n                },\r\n              ]}\r\n            >\r\n              {data.user_name || 'user_name'}\r\n            </Text>\r\n            <View style={{flexDirection:\"row\"}}>\r\n              <Icon name=\"mail\" size={20} style={{paddingRight:5}}/>\r\n              <Text style={styles.caption}>{data.user_email || 'user_email'}</Text>\r\n            </View>\r\n              <View style={{flexDirection:\"row\"}}>\r\n                <Icon name=\"user\" size={20} style={{paddingRight:5}}/>\r\n              <Text\r\n                style={[styles.caption,{\r\n                    marginTop: 5,\r\n                  },\r\n                ]}\r\n              >\r\n              {'Student'}\r\n              </Text>\r\n              </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.userAbout}>\r\n          <Text style={styles.title}>About</Text>\r\n            <Text style={[styles.bioBox]}>\r\n              <Text style={styles.bioText}>\r\n                {data.user_bio || 'No information at this time.'}\r\n              </Text>\r\n            </Text>\r\n        </View>\r\n        <Text style={[styles.title, {textAlign:'center'}]}>Classes</Text>\r\n      </View>\r\n\r\n      <FlatList\r\n            keyExtractor={(item) => item.class_name}\r\n\r\n              data={classData}\r\n              numColumns={1}\r\n              renderItem={({item}) => (\r\n                <Text style={[styles.list]}>{item.class_name}</Text>\r\n              )}\r\n            />\r\n\r\n\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"file-document-edit-outline\"\r\n        onPress={() => navigation.navigate('Edit Profile', {screen: 'InstructorEditProfile'})}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#E8EAED\",\r\n    flex: 1,\r\n  },\r\n\r\n  userInfo: {\r\n    paddingHorizontal: 30,\r\n    marginBottom: 25,\r\n    marginTop: 50\r\n  },\r\n\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  caption: {\r\n    fontSize: 14,\r\n    lineHeight: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  avatarShadow: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 5,\r\n    },\r\n    shadowOpacity: 0.36,\r\n    shadowRadius: 6.68,\r\n    elevation: 11\r\n  },\r\n\r\n\r\n  userAbout: {\r\n    marginTop: 15,\r\n  },\r\n\r\n  userClass: {\r\n    marginTop: 15,\r\n    alignSelf:'center'\r\n  },\r\n\r\n  bioBox: {\r\n    marginTop: 10,\r\n    padding:10,\r\n    borderRadius: 5,\r\n    borderColor: '#000',\r\n    borderWidth: 1,\r\n    backgroundColor:'#fff'\r\n  },\r\n\r\n  bioText: {\r\n    marginTop: 10,\r\n  },\r\n\r\n  list: { \r\n    textAlign:'center',\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n    fontWeight:\"bold\",\r\n    borderRadius:5,\r\n    padding:15,\r\n    borderWidth:.5,\r\n    backgroundColor: \"white\",\r\n    width:200,\r\n    marginRight:10,\r\n  },\r\n\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0, \r\n    bottom: 0,\r\n    backgroundColor:'#4970FA'\r\n  }\r\n\r\n\r\n});\r\n","import React, { useContext } from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { AuthContext } from '../../../store/AuthContext'\r\nimport IconButton from '../../../component/ui/IconButton'\r\nimport StudentProfile from './StudentProfile'\r\nimport StudentEditProfile from '../../UserProfile/EditProfile';\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function ProfileStackNavigatorStudent()  {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"My Profile\" component={StudentProfile}  options={{\r\n        headerShown: false,\r\n          headerRight: ({ tintColor }) => (\r\n            <IconButton\r\n              icon=\"exit\"\r\n              color={tintColor}\r\n              size={24}\r\n              onPress={authCtx.logout}\r\n            />\r\n          ),\r\n        }} />\r\n        \r\n        <Stack.Screen name=\"Edit Profile\" component={StudentEditProfile} options={{headerShown:true}}/>\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { ScrollView, View, Text, StyleSheet} from \"react-native\";\r\nimport {Button, Divider} from \"react-native-paper\";\r\nimport { AuthContext } from '../../../store/AuthContext'\r\n\r\nexport default function StudentSetting({navigation}) {\r\n  \r\n    const authCtx = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <Text style={styles.title}>Settings</Text>\r\n            <View style={styles.actions}>\r\n\r\n                <Button icon=\"email\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Email', {screen: 'ChangeEmail'})}\r\n                >Change Email</Button>\r\n\r\n                <Button \r\n                icon=\"lock\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Password', {screen: 'ChangePassword'})}\r\n                >Change Password</Button>\r\n\r\n                <Divider style={{\r\n                    marginTop: 50,\r\n                    marginLeft: 35,\r\n                    marginRight: 35\r\n                }}/>\r\n\r\n                <Button \r\n                icon=\"door\" \r\n                mode=\"contained\" \r\n                style={[styles.buttons,{\r\n                    backgroundColor: '#cf3a29',\r\n                    marginTop: 60\r\n                }]}\r\n                onPress={authCtx.logout}\r\n                >Log Out</Button>\r\n                \r\n            </View>\r\n        </ScrollView>\r\n        \r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        backgroundColor: '#E8EAED',\r\n        flex: 1\r\n     \r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        marginLeft: 15\r\n    },\r\n\r\n    actions: {\r\n        marginTop: 15\r\n    },\r\n\r\n    buttons: {\r\n        marginTop: 15,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n        backgroundColor: \"#4970FA\"\r\n    }\r\n\r\n\r\n\r\n    \r\n})\r\n","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport StudentSetting from './StudentSetting';\r\nimport ChangePassword from '../../changeAuth/ChangePassword';\r\nimport ChangeEmail from '../../changeAuth/ChangeEmail';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function SettingStackNavigatorStudent()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"Setting\" component={StudentSetting} />\r\n      <Stack.Screen name=\"Change Password\" component={ChangePassword} />\r\n      <Stack.Screen name=\"Change Email\" component={ChangeEmail} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Welcome from '../../../component/Welcome'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function WelcomeStackNavigatorStudent()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"WelcomeStudent\" component={Welcome} />\r\n          </Stack.Navigator>\r\n  )\r\n}","import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport DashBoardStackNavigatorStudent from \"./DashBoardStackNavigator/DashBoardStackNavigatorStudent\";\r\nimport HomeStackNavigatorStudent from \"./HomeStackNavigator/HomeStackNavigatorStudent\";\r\nimport ProfileStackNavigatorStudent from \"./ProfileStackNavigator/ProfileStackNavigatorStudent\";\r\nimport SettingStackNavigatorStudent from \"./SettingsStackNavigator/SettingStackNavigatorStudent\";\r\nimport React, { useState, useContext } from 'react';\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport WelcomeStackNavigatorStudent from \"./WelcomeStudentStack.js/WelcomeStackNavigationInstructor\";\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\n\r\nexport default function StudentMainScreenTabs({ navigation }) {\r\n    return (\r\n      (\r\n        <Tab.Navigator screenOptions={{\r\n          headerShown: false,\r\n        }}>\r\n           <Tab.Screen \r\n            name=\"Welcome\" \r\n            component={WelcomeStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='asterisk' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n\r\n          />\r\n\r\n          <Tab.Screen \r\n            name=\"Dashboard\" \r\n            component={DashBoardStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='view-dashboard' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n\r\n          />\r\n\r\n          <Tab.Screen \r\n            name=\"Search\" \r\n            component={HomeStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='magnify' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n        \r\n          <Tab.Screen \r\n            name=\"Profile\" \r\n            component={ProfileStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='account-circle-outline' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen \r\n            name=\"Settings\" \r\n            component={SettingStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='cog-outline' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n\r\n        </Tab.Navigator>\r\n      )\r\n      );\r\n    \r\n}","import * as React from \"react\";\r\nimport {StatusBar} from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport LogInScreen from \"./src/screens/LogInScreen\";\r\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport AuthContextProvider, { AuthContext } from \"./src/store/AuthContext\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport InstructorMainScreenTabs from \"./src/screens/InstructorScreens/InstructorMainScreenTabs\";\r\n\r\n//import CreateContent from \"./src/screens/InstructorScreens/DashBoardStackNavigator/CreateContentScreen\";\r\n\r\nimport StudentMainScreenTabs from \"./src/screens/StudentScreens/StudentMainScreenTabs\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction AuthStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#4970FA'},\r\n        headerTintColor: \"white\",\r\n        contentStyle: { backgroundColor: \"white\" },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"LogIn\"\r\n        component={LogInScreen}\r\n        options={{ headerShown: false  }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SignUp\"\r\n        component={SignUpScreen}\r\n        options={{ title: \"Sign Up\",color: '#4970FA', headerTitleAlign: 'center' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction AuthenticatedStack() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  if(authCtx.user_type == 'student')\r\n  {\r\n    return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"StudentMainScreen\"\r\n          component={StudentMainScreenTabs}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  else if (authCtx.user_type == 'instructor')\r\n  {\r\n    return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"InstructorMainScreen\"\r\n          component={InstructorMainScreenTabs}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  else {return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"InstructorMainScreen\"\r\n        component={InstructorMainScreenTabs}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );}\r\n\r\n\r\n}\r\n\r\nfunction Navigation() {\r\n  const authCtx = useContext(AuthContext);\r\n  //check isAuthenticated using authcontext\r\n  //if is authenticated, allow access to authenticated stack, otherwise, authstack\r\n  return (\r\n    <NavigationContainer>\r\n      {!authCtx.isAuthenticated && <AuthStack />}\r\n      {authCtx.isAuthenticated && <AuthenticatedStack />}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction Root() {\r\n  const [isTryingLogin, setIsTryingLogin] = useState(true);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  //the first thing to do inroot is to check for token from async\r\n  //if there is a token, then set authcontext to appropriate values\r\n\r\n  useEffect(() => {\r\n    async function fetchToken() {\r\n      const storedToken = await AsyncStorage.getItem(\"token\");\r\n      const storedUserID = await AsyncStorage.getItem(\"user_id\");\r\n\r\n      const storedUserType = await AsyncStorage.getItem(\"user_type\");\r\n\r\n      // console.log(\"Hi\");\r\n      if (storedToken && storedUserID && storedUserType) {\r\n        authCtx.authenticate(storedToken, storedUserID, storedUserType );\r\n      }\r\n\r\n      setIsTryingLogin(false);\r\n      //  await AsyncStorage.setItem('token', \"bstoken\");\r\n\r\n    }\r\n\r\n    fetchToken();\r\n     // authCtx.logout();\r\n\r\n\r\n  }, []);\r\n\r\n  //the loading icon \r\n  if (isTryingLogin) {\r\n    return <AppLoading />;\r\n  }\r\n  return <Navigation />;\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <StatusBar style=\"light\" />\r\n      <AuthContextProvider>\r\n        <Root />\r\n      </AuthContextProvider>\r\n    </>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/appProfile.ee747da8.png\";"],"sourceRoot":""}